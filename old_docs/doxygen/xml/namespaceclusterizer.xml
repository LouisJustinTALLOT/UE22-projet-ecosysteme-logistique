<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="namespaceclusterizer" kind="namespace" language="Python">
    <compoundname>clusterizer</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceclusterizer_1a542f5de9409b4069e9a09942141e50cf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool clusterizer.DEBUG_PLOT</definition>
        <argsstring></argsstring>
        <name>DEBUG_PLOT</name>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="35" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>clusterizer.reduce</definition>
        <argsstring></argsstring>
        <name>reduce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="435" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceclusterizer_1a5060abb4181ceaa4bdff6d2ae776c6d1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>clusterizer.couleur</definition>
        <argsstring></argsstring>
        <name>couleur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="437" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceclusterizer_1a8bf5bca9511b93fde174595b5a2d2db4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>clusterizer.adresse_map</definition>
        <argsstring></argsstring>
        <name>adresse_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="449" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="449" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceclusterizer_1a1842efc97d44e8e752733c4d063f523a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def clusterizer.rapport_a_la_seine</definition>
        <argsstring>(xy)</argsstring>
        <name>rapport_a_la_seine</name>
        <param>
          <type>xy</type>
          <defname>xy</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>TODO

:param xy:
:return:
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="50" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="50" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a46c1c161d2d1f3c4da2b499b8b4077d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>None</type>
        <definition> None clusterizer.process_rapport_a_la_seine</definition>
        <argsstring>(int no_zone, pd.DataFrame df, Array shared_array)</argsstring>
        <name>process_rapport_a_la_seine</name>
        <param>
          <type>int</type>
          <declname>no_zone</declname>
        </param>
        <param>
          <type>pd.DataFrame</type>
          <declname>df</declname>
        </param>
        <param>
          <type>Array</type>
          <declname>shared_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>TODO

:param no_zone:
:param df:
:param shared_array:
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="142" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1ada962bb8f1ec417142e11c0ca8cca63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pd.DataFrame</type>
        <definition> pd.DataFrame clusterizer.map_rapport_a_la_seine</definition>
        <argsstring>(Tuple[int, pd.DataFrame] args_tuple)</argsstring>
        <name>map_rapport_a_la_seine</name>
        <param>
          <type>Tuple</type>
          <declname>args_tuple</declname>
          <array>[int, pd.DataFrame]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>TODO

:param args_tuple:
:return:
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="152" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="152" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1aeec4083b19ab1b2b6b1dece87329556d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pd.DataFrame</type>
        <definition> pd.DataFrame clusterizer.nettoyer</definition>
        <argsstring>(pd.DataFrame df, bool reduce=False, int threshold=1000, str column_geometry=COLUMN_DEFAULT_GEOMETRY_NAME)</argsstring>
        <name>nettoyer</name>
        <param>
          <type>pd.DataFrame</type>
          <declname>df</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reduce</declname>
          <defval>False</defval>
        </param>
        <param>
          <type>int</type>
          <declname>threshold</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>str</type>
          <declname>column_geometry</declname>
          <defval>COLUMN_DEFAULT_GEOMETRY_NAME</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Nettoie la DataFrame. Enlève les na.
Si spécifié, ne retient que les premières données de la DataFrame.

:param df: La DataFrame.
:param reduce: Si True, ne prend que les premières données.
:param threshold: Dans le cas où reduce=True, nombre de données à sélectionner.
:param column_geometry: A spécifier si la colonne contenant les points n&apos;est pas la colonne par défaut (&quot;geometry&quot;)
:return: Une DataFrame nettoyée.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="164" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="164" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a3af79889960331fc4392936526bc8ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[pd.DataFrame, pd.DataFrame]</type>
        <definition> Tuple[pd.DataFrame, pd.DataFrame] clusterizer.clusterize</definition>
        <argsstring>(pd.DataFrame df, int k, str column_geometry=COLUMN_DEFAULT_GEOMETRY_NAME, bool is_dict=False, bool weight=True)</argsstring>
        <name>clusterize</name>
        <param>
          <type>pd.DataFrame</type>
          <declname>df</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>str</type>
          <declname>column_geometry</declname>
          <defval>COLUMN_DEFAULT_GEOMETRY_NAME</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>is_dict</declname>
          <defval>False</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>weight</declname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Clusterise à l&apos;aide de l&apos;algorithme des k-moyennes. Attention, fait du en-place.

:param df: La (Geo)DataFrame contenant les points à clusteriser.
:param k: Le nombre de clusters à calculer.
:param column_geometry: A spécifier si la colonne contenant les points n&apos;est pas la colonne par défaut (&quot;geometry&quot;)
:param is_dict: Indiquer True si jamais la colonne contenant les points ne contient pas d&apos;objets
 shapely.geometry.Points, mais un dictionnaire (en général, lorsque le fichier provient d&apos;un GeoJSON)
:return: Deux GeoDataFrame.
 Une première GeoDataFrame entrée contenant une colonne en plus (&quot;cluster&quot;) : celle-ci permet de savoir pour chaque
 point le numéro du cluster qui lui a été affecté.
 Une deuxième GeoDataFrame contenant les informations détaillées de chaque cluster : centre de masse (&quot;centroids&quot;),
 enveloppe convexe (&quot;hulls&quot;) et nombre d&apos;établissements dans le cluster (&quot;taille&quot;)
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="184" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="184" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a3347b353b00237f8b17fd025f019c50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>folium.folium.Map</type>
        <definition> folium.folium.Map clusterizer.save_to_map</definition>
        <argsstring>(pd.DataFrame df_clusters, folium.folium.Map map=None)</argsstring>
        <name>save_to_map</name>
        <param>
          <type>pd.DataFrame</type>
          <declname>df_clusters</declname>
        </param>
        <param>
          <type>folium.folium.Map</type>
          <declname>map</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Sauvegarde les informations des clusters dans une carte Leaflet.
Retourne la carte

:param df_clusters: La DataFrame contenant les informations de chaque cluster
 (cf. deuxième sortie de la fonction clusterize)
:param map: la carte à utiliser
 si un paramètre est spécifié : réecrit par dessus.
 si rien n&apos;est spécifié, génère une nouvelle carte
:return une carte complétée.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="233" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="233" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a786e8ab3d593d24c6ddf8cdb68f93d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def clusterizer.test_geojson</definition>
        <argsstring>()</argsstring>
        <name>test_geojson</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Fonction interne (utilisée pour vérifier le bon fonctionnement de la clusterisation).
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="287" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="287" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a1d9da37ce74295e212c2458159132e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def clusterizer.calcule_nb_clusters_par_zone</definition>
        <argsstring>(liste_df, nb_clusters)</argsstring>
        <name>calcule_nb_clusters_par_zone</name>
        <param>
          <type>liste_df</type>
          <defname>liste_df</defname>
        </param>
        <param>
          <type>nb_clusters</type>
          <defname>nb_clusters</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>TODO

:param liste_df:
:param nb_clusters:
:return:
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="295" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="295" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a3baf2ddde23e317d27bb6e1234a4a061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>None</type>
        <definition> None clusterizer.main_json</definition>
        <argsstring>(int rayon=8, List[str] secteur_NAF=&apos;&apos;, int nb_clusters=50, str adresse_map=&quot;output/clusterized_map_seine.html&quot;, bool reduce=False, int threshold=1000)</argsstring>
        <name>main_json</name>
        <param>
          <type>int</type>
          <declname>rayon</declname>
          <defval>8</defval>
        </param>
        <param>
          <type>List</type>
          <declname>secteur_NAF</declname>
          <array>[str]</array>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nb_clusters</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>str</type>
          <declname>adresse_map</declname>
          <defval>&quot;output/clusterized_map_seine.html&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>reduce</declname>
          <defval>False</defval>
        </param>
        <param>
          <type>int</type>
          <declname>threshold</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Fonction principale à exécuter pour successivement ouvrir la DataFrame contenant les données,
nettoyer la DataFrame, filtrer par secteurs NAF, ne garder que les magasins proche du centre de Paris,
séparer par la Seine, clusteriser et sauvegarder dans une carte.
La répartition entre les secteurs de la Seine est calculée automatiquement.

:param rayon: le rayon (à partir du centre de Paris).
:param secteur_NAF: les secteurs NAF à sélectionner.
:param nb_clusters: le nombre de clusters à calculer.
:param adresse_map: l&apos;adresse de la carte en sortie.
:param reduce: mettre :code:`True` pour n&apos;utiliser qu&apos;une version allégée des données (plus rapide).
:param threshold: nombre de données utilisées si reduce= :code:`True` 

:return: :code:`None` </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="311" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="313" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="namespaceclusterizer_1a2a47baec99d0af254595a53d0a496c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def clusterizer.test_naf</definition>
        <argsstring>()</argsstring>
        <name>test_naf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Fonction interne (utilisée pour vérifier le bon fonctionnement du filtrage par NAF).
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/clusterizer.py" line="424" column="1" bodyfile="src/clusterizer/clusterizer.py" bodystart="424" bodyend="429"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/clusterizer/clusterizer.py" line="1" column="1"/>
  </compounddef>
</doxygen>
