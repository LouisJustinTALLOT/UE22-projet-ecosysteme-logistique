Ouverture de la DataFrame...    5.777 s
On ne garde que les données du centre...    0.147 s
On sépare par la Seine...    292.350 s
Clusterisation...    228.287 s
Sauvegarde sur la carte...    0.302 s
Terminé !
         77266192 function calls (77253949 primitive calls) in 526.930 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      423    0.001    0.000    0.008    0.000 <__array_function__ internals>:2(all)
        5    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(any)
      141    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(argmin)
        1    0.000    0.000    0.001    0.001 <__array_function__ internals>:2(argsort)
       17    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(array_equal)
        5    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
      159    0.001    0.000    0.002    0.000 <__array_function__ internals>:2(atleast_2d)
        7    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(bincount)
       12    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(can_cast)
      141    0.000    0.000    0.010    0.000 <__array_function__ internals>:2(clip)
        6    0.000    0.000    0.004    0.001 <__array_function__ internals>:2(column_stack)
       42    0.003    0.000    0.006    0.000 <__array_function__ internals>:2(concatenate)
      525    0.001    0.000    0.004    0.000 <__array_function__ internals>:2(copyto)
      141    0.000    0.000    0.006    0.000 <__array_function__ internals>:2(cumsum)
      356    0.001    0.000    0.013    0.000 <__array_function__ internals>:2(einsum)
      190    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(empty_like)
        5    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(insert)
      141    0.000    0.000    0.017    0.000 <__array_function__ internals>:2(isclose)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(moveaxis)
      286    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(ndim)
      130    0.000    0.000    0.004    0.000 <__array_function__ internals>:2(prod)
      141    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(result_type)
      141    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(searchsorted)
     1849    0.003    0.000    0.048    0.000 <__array_function__ internals>:2(sum)
        1    0.001    0.001    0.002    0.002 <__array_function__ internals>:2(vstack)
      190    0.000    0.000    0.004    0.000 <__array_function__ internals>:2(zeros_like)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:1002(_gcd_import)
  1648751    2.903    0.000    3.290    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
      3/2    0.000    0.000    0.003    0.002 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
      118    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:376(cached)
      552    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:389(parent)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:397(has_location)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:477(_init_module_attrs)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:549(module_from_spec)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
      3/2    0.000    0.000    0.006    0.003 <frozen importlib._bootstrap>:650(_load_unlocked)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
       21    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
       21    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:881(_find_spec_legacy)
        5    0.000    0.000    0.003    0.001 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:937(_sanity_check)
      5/3    0.000    0.000    0.008    0.003 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
      5/3    0.000    0.000    0.008    0.003 <frozen importlib._bootstrap>:986(_find_and_load)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1004(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1029(get_filename)
        3    0.000    0.000    0.002    0.001 <frozen importlib._bootstrap_external>:1034(get_data)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1075(path_stats)
      115    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:114(<listcomp>)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:127(_path_split)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:129(<genexpr>)
       26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1330(_path_importer_cache)
       29    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:135(_path_stat)
        5    0.000    0.000    0.003    0.001 <frozen importlib._bootstrap_external>:1367(_get_spec)
        5    0.000    0.000    0.003    0.001 <frozen importlib._bootstrap_external>:1399(find_spec)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:145(_path_is_mode_type)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1493(_get_spec)
       23    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1498(find_spec)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:154(_path_isfile)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:167(_path_isabs)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:354(cache_from_source)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:484(_get_cached)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:516(_check_name_wrapper)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:553(_classify_pyc)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:586(_validate_timestamp_pyc)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:638(_compile_bytecode)
       23    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(_relax_case)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:689(spec_from_file_location)
        9    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:79(_unpack_uint32)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:839(create_module)
      3/2    0.000    0.000    0.005    0.003 <frozen importlib._bootstrap_external>:842(exec_module)
      115    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:91(_path_join)
        3    0.000    0.000    0.003    0.001 <frozen importlib._bootstrap_external>:914(get_code)
        1    0.073    0.073  526.940  526.940 <string>:1(<module>)
      666    0.000    0.000    0.001    0.000 <string>:1(__new__)
        1    0.000    0.000    0.000    0.000 <template>:1(<module>)
       52    0.001    0.000    0.009    0.000 <template>:19(macro)
        1    0.000    0.000    0.000    0.000 <template>:49(macro)
        2    0.000    0.000    0.000    0.000 <template>:5(root)
        1    0.000    0.000    0.001    0.001 <template>:65(macro)
        1    0.000    0.000    0.001    0.001 __init__.py:109(import_module)
       20    0.000    0.000    0.000    0.000 __init__.py:111(_maybe_match_name)
      322    0.001    0.000    0.010    0.000 __init__.py:183(dumps)
      312    0.000    0.000    0.001    0.000 __init__.py:21(wrapper)
        2    0.000    0.000    0.000    0.000 __init__.py:23(find_module)
       53    0.001    0.000    0.027    0.001 __init__.py:359(wrapper)
  1336876    1.600    0.000    1.600    0.000 __init__.py:514(cast)
       54    0.000    0.000    0.000    0.000 __init__.py:675(gen_batches)
      322    0.001    0.000    0.001    0.000 __init__.py:69(__new__)
       73    0.000    0.000    0.001    0.000 __init__.py:88(get_op_result_name)
      222    0.000    0.000    0.000    0.000 __init__.py:882(__init__)
     2694    0.003    0.000    0.003    0.000 __init__.py:892(__getitem__)
      898    0.002    0.000    0.003    0.000 __init__.py:906(__iter__)
      449    0.000    0.000    0.001    0.000 __init__.py:915(__bool__)
      616    0.001    0.000    0.005    0.000 _asarray.py:139(ascontiguousarray)
2083/1672    0.002    0.000    0.012    0.000 _asarray.py:14(asarray)
  1242027    3.598    0.000    6.611    0.000 _asarray.py:221(require)
  1242027    1.161    0.000    1.509    0.000 _asarray.py:298(<setcomp>)
      884    0.001    0.000    0.003    0.000 _asarray.py:86(asanyarray)
        5    0.000    0.000    0.000    0.000 _collections_abc.py:252(__subclasshook__)
       12    0.000    0.000    0.000    0.000 _collections_abc.py:271(__subclasshook__)
       29    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
        2    0.000    0.000    0.000    0.000 _collections_abc.py:349(__subclasshook__)
       94    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
      198    0.000    0.000    0.002    0.000 _collections_abc.py:657(get)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:664(__contains__)
      449    0.000    0.000    0.001    0.000 _collections_abc.py:672(keys)
      449    0.000    0.000    0.000    0.000 _collections_abc.py:698(__init__)
     3143    0.001    0.000    0.002    0.000 _collections_abc.py:719(__iter__)
       13    0.000    0.000    0.000    0.000 _collections_abc.py:72(_check_methods)
      327    0.000    0.000    0.001    0.000 _config.py:14(get_config)
        1    0.000    0.000    5.514    5.514 _decorators.py:158(wrapper)
        1    0.000    0.000    0.000    0.000 _decorators.py:206(_format_argument_list)
        1    0.006    0.006    5.514    5.514 _decorators.py:283(wrapper)
      869    0.003    0.000    0.003    0.000 _dtype.py:24(_kind_name)
      869    0.002    0.000    0.004    0.000 _dtype.py:307(_name_includes_bit_suffix)
      869    0.005    0.000    0.013    0.000 _dtype.py:321(_name_get)
        3    0.000    0.000    0.000    0.000 _dtype.py:34(__str__)
       57    0.000    0.000    0.000    0.000 _internal.py:827(npy_ctypes_check)
        1    0.190    0.190    5.318    5.318 _json.py:1112(_parse_no_numpy)
        2    0.000    0.000    0.001    0.001 _json.py:1141(_process_converter)
        3    0.000    0.000    0.000    0.000 _json.py:1146(<lambda>)
        1    0.000    0.000    0.001    0.001 _json.py:1165(_try_convert_types)
        3    0.000    0.000    0.001    0.000 _json.py:1172(<lambda>)
        1    0.000    0.000    0.000    0.000 _json.py:1175(_try_convert_dates)
        3    0.000    0.000    0.000    0.000 _json.py:1185(is_ok)
        3    0.000    0.000    0.000    0.000 _json.py:1206(<lambda>)
        1    0.000    0.000    5.507    5.507 _json.py:347(read_json)
        1    0.000    0.000    0.166    0.166 _json.py:634(__init__)
        1    0.000    0.000    0.164    0.164 _json.py:682(_preprocess_data)
        1    0.000    0.000    0.001    0.001 _json.py:697(_get_data_from_filepath)
        1    0.000    0.000    5.342    5.342 _json.py:739(read)
        1    0.000    0.000    5.342    5.342 _json.py:759(_get_object_parser)
        1    0.000    0.000    0.000    0.000 _json.py:786(close)
        1    0.000    0.000    0.000    0.000 _json.py:830(__init__)
        1    0.000    0.000    5.342    5.342 _json.py:878(parse)
        1    0.000    0.000    0.022    0.022 _json.py:895(_convert_axes)
        5    0.000    0.000    0.023    0.005 _json.py:912(_try_convert_data)
        2    0.001    0.001    0.022    0.011 _json.py:985(_try_convert_to_date)
      190    0.001    0.000    0.006    0.000 _k_means_fast.pyx:102(__pyx_fuse_1_inertia_dense (wrapper))
      190    0.005    0.000    0.005    0.000 _k_means_fast.pyx:102(__pyx_fuse_1_inertia_dense)
      190    0.002    0.000    0.002    0.000 _k_means_fast.pyx:102(_inertia_dense)
      190    0.090    0.000    0.099    0.001 _k_means_lloyd.pyx:29(__pyx_fuse_1lloyd_iter_chunked_dense)
      190    0.002    0.000    0.002    0.000 _k_means_lloyd.pyx:29(lloyd_iter_chunked_dense)
        5    0.000    0.000    0.812    0.162 _kmeans.py:1054(fit_predict)
      126    0.134    0.001    0.261    0.002 _kmeans.py:1201(_mini_batch_step)
      111    0.001    0.000    0.001    0.000 _kmeans.py:1340(_mini_batch_convergence)
        5    0.000    0.000    0.000    0.000 _kmeans.py:150(_tolerance)
        5    0.000    0.000    0.000    0.000 _kmeans.py:1565(__init__)
        5    0.000    0.000    0.006    0.001 _kmeans.py:1599(_check_params)
        5    0.039    0.008    0.811    0.162 _kmeans.py:1637(fit)
        5    0.000    0.000    0.039    0.008 _kmeans.py:1783(_labels_inertia_minibatch)
        5    0.001    0.000    0.036    0.007 _kmeans.py:1810(<listcomp>)
       15    0.019    0.001    0.397    0.026 _kmeans.py:50(_kmeans_plusplus)
      190    0.011    0.000    0.136    0.001 _kmeans.py:544(_labels_inertia)
        5    0.000    0.000    0.000    0.000 _kmeans.py:765(__init__)
        5    0.002    0.000    0.006    0.001 _kmeans.py:783(_check_params)
        5    0.000    0.000    0.000    0.000 _kmeans.py:863(_check_mkl_vcomp)
       15    0.006    0.000    0.406    0.027 _kmeans.py:895(_init_centroids)
      141    0.001    0.000    0.009    0.000 _methods.py:106(_clip)
      309    0.000    0.000    0.020    0.000 _methods.py:37(_amax)
      419    0.001    0.000    0.028    0.000 _methods.py:41(_amin)
     1475    0.001    0.000    0.015    0.000 _methods.py:45(_sum)
      723    0.001    0.000    0.010    0.000 _methods.py:53(_any)
      441    0.000    0.000    0.003    0.000 _methods.py:56(_all)
      282    0.003    0.000    0.006    0.000 _methods.py:72(_clip_dep_is_scalar_nan)
      282    0.000    0.000    0.000    0.000 _methods.py:82(_clip_dep_is_byte_swapped)
      141    0.002    0.000    0.002    0.000 _methods.py:87(_clip_dep_invoke_with_casting)
        1    0.000    0.000    0.001    0.001 _optional.py:61(import_optional_dependency)
        2    0.000    0.000    0.000    0.000 _parser.py:1062(_could_be_tzname)
        2    0.000    0.000    0.000    0.000 _parser.py:1276(parse)
        2    0.000    0.000    0.000    0.000 _parser.py:192(__iter__)
        6    0.000    0.000    0.000    0.000 _parser.py:195(__next__)
        2    0.000    0.000    0.000    0.000 _parser.py:205(split)
       12    0.000    0.000    0.000    0.000 _parser.py:209(isword)
        6    0.000    0.000    0.000    0.000 _parser.py:214(isnum)
        2    0.000    0.000    0.000    0.000 _parser.py:227(__init__)
        2    0.000    0.000    0.000    0.000 _parser.py:325(jump)
        2    0.000    0.000    0.000    0.000 _parser.py:328(weekday)
        2    0.000    0.000    0.000    0.000 _parser.py:335(month)
        2    0.000    0.000    0.000    0.000 _parser.py:348(ampm)
        2    0.000    0.000    0.000    0.000 _parser.py:401(__init__)
        2    0.000    0.000    0.000    0.000 _parser.py:578(parse)
        2    0.000    0.000    0.000    0.000 _parser.py:62(__init__)
        2    0.000    0.000    0.000    0.000 _parser.py:672(_parse)
        6    0.000    0.000    0.000    0.000 _parser.py:83(get_token)
        1    0.000    0.000    0.001    0.001 _strptime.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _strptime.py:107(__calc_date_time)
        1    0.000    0.000    0.000    0.000 _strptime.py:128(<listcomp>)
        1    0.000    0.000    0.000    0.000 _strptime.py:152(__calc_timezone)
        1    0.000    0.000    0.000    0.000 _strptime.py:170(TimeRE)
        1    0.000    0.000    0.001    0.001 _strptime.py:173(__init__)
        5    0.000    0.000    0.000    0.000 _strptime.py:210(<genexpr>)
        6    0.000    0.000    0.000    0.000 _strptime.py:219(__seqToRE)
       50    0.000    0.000    0.000    0.000 _strptime.py:234(<genexpr>)
        6    0.000    0.000    0.000    0.000 _strptime.py:238(pattern)
        8    0.000    0.000    0.000    0.000 _strptime.py:26(_getlang)
        3    0.000    0.000    0.002    0.001 _strptime.py:261(compile)
        1    0.000    0.000    0.000    0.000 _strptime.py:30(LocaleTime)
        6    0.000    0.000    0.002    0.000 _strptime.py:309(_strptime)
        1    0.000    0.000    0.000    0.000 _strptime.py:49(__init__)
        6    0.000    0.000    0.002    0.000 _strptime.py:565(_strptime_datetime)
        1    0.000    0.000    0.000    0.000 _strptime.py:80(__calc_weekday)
        1    0.000    0.000    0.000    0.000 _strptime.py:83(<listcomp>)
        1    0.000    0.000    0.000    0.000 _strptime.py:84(<listcomp>)
        1    0.000    0.000    0.000    0.000 _strptime.py:88(__calc_month)
        1    0.000    0.000    0.000    0.000 _strptime.py:90(<listcomp>)
        1    0.000    0.000    0.000    0.000 _strptime.py:91(<listcomp>)
        1    0.000    0.000    0.000    0.000 _strptime.py:95(__calc_am_pm)
      770    0.003    0.000    0.003    0.000 _ufunc_config.py:132(geterr)
      770    0.006    0.000    0.010    0.000 _ufunc_config.py:32(seterr)
      380    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
      385    0.001    0.000    0.008    0.000 _ufunc_config.py:433(__enter__)
      385    0.001    0.000    0.004    0.000 _ufunc_config.py:438(__exit__)
        5    0.000    0.000    0.000    0.000 _validators.py:112(_check_for_invalid_keys)
        5    0.000    0.000    0.000    0.000 _validators.py:125(validate_kwargs)
        8    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        5    0.000    0.000    0.000    0.000 _validators.py:33(_check_for_default_values)
       52    0.000    0.000    0.000    0.000 _vectorized.py:146(to_shapely)
       57    0.000    0.000    1.374    0.024 _vectorized.py:222(_points_from_xy)
       57    0.121    0.002    1.374    0.024 _vectorized.py:231(<listcomp>)
       57    0.005    0.000    1.383    0.024 _vectorized.py:235(points_from_xy)
        5    0.000    0.000    0.000    0.000 _vectorized.py:92(from_shapely)
  629/474    0.000    0.000    0.012    0.000 abc.py:100(__subclasscheck__)
     1569    0.001    0.000    0.016    0.000 abc.py:96(__instancecheck__)
      207    0.002    0.000    0.006    0.000 algorithms.py:1511(_get_take_nd_function)
      207    0.005    0.000    0.137    0.001 algorithms.py:1640(take_nd)
       40    0.000    0.000    0.001    0.000 algorithms.py:180(_reconstruct_data)
       10    0.000    0.000    0.003    0.000 algorithms.py:2015(safe_sort)
       40    0.000    0.000    0.000    0.000 algorithms.py:223(_ensure_arraylike)
       30    0.000    0.000    0.002    0.000 algorithms.py:247(_get_hashtable_algo)
       10    0.000    0.000    0.000    0.000 algorithms.py:265(_get_values_for_rank)
       10    0.000    0.000    0.001    0.000 algorithms.py:273(_get_data_algo)
       40    0.000    0.000    0.001    0.000 algorithms.py:282(_check_object_for_strings)
       30    0.000    0.000    0.005    0.000 algorithms.py:311(unique)
       10    0.000    0.000    0.004    0.000 algorithms.py:478(_factorize_array)
       10    0.001    0.000    0.009    0.001 algorithms.py:518(factorize)
       50    0.000    0.000    0.002    0.000 algorithms.py:71(_ensure_data)
       52    0.000    0.000    0.000    0.000 array.py:1008(__array__)
      114    0.000    0.000    0.000    0.000 array.py:123(_geom_to_shapely)
        5    0.000    0.000    0.000    0.000 array.py:150(from_shapely)
       52    0.000    0.000    0.000    0.000 array.py:169(to_shapely)
       57    0.002    0.000    1.386    0.024 array.py:230(points_from_xy)
       87    0.002    0.000    0.002    0.000 array.py:264(__init__)
       10    0.000    0.000    0.000    0.000 array.py:283(crs)
       92    0.000    0.000    0.000    0.000 array.py:297(crs)
       95    0.000    0.000    0.000    0.000 array.py:315(dtype)
       70    0.000    0.000    0.000    0.000 array.py:319(__len__)
      114    0.000    0.000    0.001    0.000 array.py:322(__getitem__)
       22    0.000    0.000    0.000    0.000 array.py:33(construct_from_string)
       75    0.000    0.000    0.000    0.000 array.py:700(size)
       75    0.000    0.000    0.000    0.000 array.py:704(shape)
        5    0.000    0.000    0.000    0.000 array.py:708(ndim)
       25    0.000    0.000    0.000    0.000 array.py:712(copy)
       54    0.001    0.000    0.010    0.000 array_ops.py:119(na_arithmetic_op)
       54    0.002    0.000    0.017    0.000 array_ops.py:195(comparison_op)
       54    0.000    0.000    0.000    0.000 array_ops.py:404(maybe_upcast_datetimelike_array)
        1    0.000    0.000    0.000    0.000 attr.txt:1(<module>)
        2    0.000    0.000    0.000    0.000 attr.txt:5(root)
      308    0.001    0.000    0.002    0.000 base.py:1011(__init__)
   823703    1.731    0.000   10.224    0.000 base.py:1014(_get_geom_item)
       12    0.000    0.000    0.000    0.000 base.py:1032(__iter__)
       15    0.000    0.000    0.000    0.000 base.py:116(_invalidate_sindex)
      297    0.000    0.000    0.000    0.000 base.py:1175(name)
       35    0.000    0.000    0.000    0.000 base.py:1182(name)
        1    0.000    0.000    0.005    0.005 base.py:120(cmp_method)
     1643    0.001    0.000    0.002    0.000 base.py:1205(isspmatrix)
       10    0.000    0.000    0.000    0.000 base.py:1213(_get_names)
       10    0.000    0.000    0.000    0.000 base.py:1216(_set_names)
       10    0.000    0.000    0.000    0.000 base.py:1246(set_names)
       10    0.000    0.000    0.003    0.000 base.py:1255(unique)
       10    0.000    0.000    0.000    0.000 base.py:131(crs)
       10    0.000    0.000    0.000    0.000 base.py:1324(rename)
      254    0.000    0.000    0.000    0.000 base.py:1378(nlevels)
    94903    0.175    0.000    0.208    0.000 base.py:142(geos_geom_from_py)
        5    0.000    0.000    0.000    0.000 base.py:145(crs)
       15    0.000    0.000    0.000    0.000 base.py:155(kind)
       70    0.000    0.000    0.003    0.000 base.py:1571(is_monotonic)
       40    0.003    0.000    0.003    0.000 base.py:1578(is_monotonic_increasing)
  208/104    0.001    0.000    2.310    0.022 base.py:164(wrapper)
       38    0.001    0.000    0.002    0.000 base.py:1646(is_unique)
       11    0.000    0.000    0.000    0.000 base.py:1685(is_boolean)
       12    0.000    0.000    0.000    0.000 base.py:1720(is_integer)
      144    0.000    0.000    0.002    0.000 base.py:1755(is_floating)
        5    0.000    0.000    0.000    0.000 base.py:180(names)
      104    0.000    0.000    0.000    0.000 base.py:1994(holds_integer)
       39    0.000    0.000    0.002    0.000 base.py:2000(inferred_type)
        9    0.000    0.000    0.000    0.000 base.py:2007(is_all_dates)
      220    0.001    0.000    0.001    0.000 base.py:201(construct_from_string)
        5    0.000    0.000    0.000    0.000 base.py:21(is_geometry_type)
       10    0.000    0.000    0.003    0.000 base.py:2217(unique)
  7323084    6.501    0.000    6.501    0.000 base.py:224(empty)
3436400/3436348    2.105    0.000    6.673    0.000 base.py:241(__del__)
       20    0.000    0.000    0.000    0.000 base.py:2480(_validate_sort_keyword)
     2337    0.002    0.000    0.009    0.000 base.py:256(is_dtype)
       10    0.002    0.000    0.002    0.000 base.py:259(_inner_indexer)
  4985273    0.965    0.000    0.965    0.000 base.py:261(_geom)
       10    0.000    0.000    0.000    0.000 base.py:2614(_wrap_setop_result)
       20    0.001    0.000    0.018    0.001 base.py:2619(intersection)
  3436400    2.530    0.000    4.203    0.000 base.py:265(_geom)
       20    0.000    0.000    0.000    0.000 base.py:2838(_assert_can_do_setop)
      144    0.000    0.000    0.003    0.000 base.py:2854(get_loc)
   184/95    0.004    0.000    0.021    0.000 base.py:293(__new__)
       11    0.000    0.000    0.004    0.000 base.py:2960(get_indexer)
      104    0.000    0.000    2.307    0.022 base.py:305(array_interface_base)
      125    0.000    0.000    0.000    0.000 base.py:3108(_get_partial_string_timestamp_match_key)
        6    0.000    0.000    0.000    0.000 base.py:3127(_convert_slice_indexer)
       18    0.000    0.000    0.000    0.000 base.py:3145(is_int)
      114    0.000    0.000    0.001    0.000 base.py:328(__iter__)
      262    0.000    0.000    0.002    0.000 base.py:328(_get_coords)
        5    0.000    0.000    0.000    0.000 base.py:335(_check_n_features)
       20    0.000    0.000    0.004    0.000 base.py:3418(join)
      104    0.000    0.000    0.000    0.000 base.py:355(geometryType)
      104    0.000    0.000    0.000    0.000 base.py:358(type)
        5    0.000    0.000    0.003    0.001 base.py:369(_validate_data)
       20    0.000    0.000    0.002    0.000 base.py:3786(_join_monotonic)
      560    0.000    0.000    0.004    0.000 base.py:3873(_values)
       84    0.000    0.000    0.000    0.000 base.py:3899(_get_engine_target)
        2    0.000    0.000    0.000    0.000 base.py:3983(_coerce_scalar_to_index)
        5    0.000    0.000    0.000    0.000 base.py:4019(_has_complex_internals)
      233    0.001    0.000    0.001    0.000 base.py:4039(__contains__)
      214    0.001    0.000    0.001    0.000 base.py:4086(__getitem__)
     2951    0.004    0.000    0.006    0.000 base.py:413(find)
       20    0.000    0.000    0.007    0.000 base.py:4136(append)
       20    0.000    0.000    0.000    0.000 base.py:4159(<setcomp>)
       20    0.000    0.000    0.007    0.000 base.py:4164(_concat)
       20    0.000    0.000    0.000    0.000 base.py:4168(<listcomp>)
      100    0.001    0.000    0.006    0.000 base.py:4199(equals)
        4    0.000    0.000    0.000    0.000 base.py:424(<genexpr>)
      528    0.002    0.000    0.010    0.000 base.py:437(area)
      104    0.000    0.000    0.000    0.000 base.py:4618(_should_fallback_to_positional)
      104    0.000    0.000    0.000    0.000 base.py:4626(_get_values_for_loc)
      220    0.001    0.000    0.001    0.000 base.py:463(_simple_new)
       52    0.000    0.000    0.003    0.000 base.py:463(boundary)
        1    0.000    0.000    0.001    0.001 base.py:4703(get_indexer_for)
       11    0.000    0.000    0.000    0.000 base.py:4720(_maybe_promote)
        2    0.000    0.000    0.000    0.000 base.py:492(_get_attributes_dict)
        2    0.000    0.000    0.000    0.000 base.py:496(<dictcomp>)
      144    0.000    0.000    0.002    0.000 base.py:4979(_maybe_cast_indexer)
       61    0.000    0.000    0.001    0.000 base.py:498(_shallow_copy)
       18    0.000    0.000    0.000    0.000 base.py:4988(_validate_indexer)
      100    0.000    0.000    0.000    0.000 base.py:520(is_)
        2    0.000    0.000    0.001    0.000 base.py:5240(insert)
      245    0.000    0.000    0.000    0.000 base.py:544(_reset_identity)
      308    0.012    0.000    0.052    0.000 base.py:545(buffer)
       73    0.001    0.000    0.001    0.000 base.py:554(_engine)
      574    0.001    0.000    0.016    0.000 base.py:5562(ensure_index)
       88    0.000    0.000    0.000    0.000 base.py:561(<lambda>)
       20    0.000    0.000    0.000    0.000 base.py:5648(_validate_join_method)
       23    0.000    0.000    0.001    0.000 base.py:5653(default_index)
      484    0.001    0.000    0.002    0.000 base.py:5659(maybe_extract_name)
     1217    0.001    0.000    0.001    0.000 base.py:567(__len__)
       85    0.000    0.000    0.001    0.000 base.py:5675(_maybe_cast_with_dtype)
        5    0.000    0.000    0.000    0.000 base.py:569(_is_builtin_func)
       83    0.000    0.000    0.002    0.000 base.py:5729(_maybe_cast_data_without_dtype)
        2    0.000    0.000    0.000    0.000 base.py:573(__array__)
      142    0.000    0.000    0.000    0.000 base.py:590(dtype)
       16    0.001    0.000    0.002    0.000 base.py:613(view)
        3    0.000    0.000    0.001    0.000 base.py:625(astype)
       72    0.000    0.000    0.000    0.000 base.py:637(ndim)
        4    0.000    0.000    0.000    0.000 base.py:669(size)
  1648486    1.935    0.000    1.935    0.000 base.py:69(geometry_type_name)
       52    0.000    0.000    0.000    0.000 base.py:690(has_z)
    96735    0.150    0.000    0.492    0.000 base.py:696(is_empty)
       75    0.001    0.000    0.008    0.000 base.py:701(take)
       11    0.000    0.000    0.000    0.000 base.py:723(_assert_take_fillable)
  1648382    6.095    0.000   16.096    0.000 base.py:75(geom_factory)
   355277    0.877    0.000  282.451    0.001 base.py:777(within)
        4    0.000    0.000    0.000    0.000 base.py:854(empty)
    95404    0.092    0.000    0.601    0.000 base.py:870(geoms)
       37    0.000    0.000    0.001    0.000 base.py:885(__len__)
    95712    0.030    0.000    0.030    0.000 base.py:949(__init__)
   191539    0.112    0.000    0.138    0.000 base.py:953(_update)
  1336876    4.115    0.000    7.285    0.000 base.py:957(_get_geom_item)
  2066292    1.013    0.000   18.037    0.000 base.py:965(__iter__)
    96020    0.137    0.000    0.204    0.000 base.py:970(__len__)
    94903    0.157    0.000    0.928    0.000 base.py:974(__getitem__)
       16    0.000    0.000    0.000    0.000 blocks.py:111(_simple_new)
      185    0.002    0.000    0.138    0.001 blocks.py:1238(take_nd)
      765    0.003    0.000    0.008    0.000 blocks.py:124(__init__)
      765    0.001    0.000    0.001    0.000 blocks.py:135(_check_ndim)
       50    0.000    0.000    0.001    0.000 blocks.py:1536(__init__)
       35    0.000    0.000    0.000    0.000 blocks.py:1564(shape)
       10    0.000    0.000    0.000    0.000 blocks.py:1571(iget)
       50    0.000    0.000    0.000    0.000 blocks.py:1618(_maybe_coerce_values)
        5    0.000    0.000    0.000    0.000 blocks.py:1696(array_values)
        6    0.004    0.001    0.009    0.002 blocks.py:176(_consolidate_key)
       21    0.000    0.000    0.000    0.000 blocks.py:190(external_values)
      265    0.000    0.000    0.000    0.000 blocks.py:201(internal_values)
      295    0.001    0.000    0.003    0.000 blocks.py:207(array_values)
        7    0.000    0.000    0.000    0.000 blocks.py:213(get_values)
      185    0.000    0.000    0.000    0.000 blocks.py:229(fill_value)
     1620    0.001    0.000    0.001    0.000 blocks.py:233(mgr_locs)
      768    0.002    0.000    0.003    0.000 blocks.py:237(mgr_locs)
      335    0.001    0.000    0.004    0.000 blocks.py:2396(__init__)
        2    0.000    0.000    0.000    0.000 blocks.py:244(make_block)
      528    0.002    0.000    0.007    0.000 blocks.py:256(make_block_same_class)
      240    0.004    0.000    0.016    0.000 blocks.py:2677(get_block_type)
      237    0.002    0.000    0.023    0.000 blocks.py:2723(make_block)
      143    0.000    0.000    0.000    0.000 blocks.py:2750(_extend_blocks)
       16    0.000    0.000    0.000    0.000 blocks.py:287(_slice)
       16    0.000    0.000    0.000    0.000 blocks.py:292(getitem_block)
       54    0.000    0.000    0.000    0.000 blocks.py:311(shape)
      987    0.000    0.000    0.000    0.000 blocks.py:315(dtype)
      135    0.000    0.000    0.000    0.000 blocks.py:319(iget)
        2    0.000    0.000    0.008    0.004 blocks.py:340(apply)
        2    0.000    0.000    0.000    0.000 blocks.py:350(_split_op_result)
      129    0.004    0.000    0.022    0.000 blocks.py:514(astype)
      139    0.001    0.000    0.041    0.000 blocks.py:675(copy)
        2    0.000    0.000    0.000    0.000 calendar.py:53(<lambda>)
       26    0.000    0.000    0.000    0.000 calendar.py:58(__getitem__)
       14    0.000    0.000    0.000    0.000 calendar.py:77(__getitem__)
      195    0.002    0.000    0.005    0.000 cast.py:1187(maybe_castable)
       19    0.000    0.000    0.001    0.000 cast.py:1201(maybe_infer_to_datetimelike)
       28    0.000    0.000    0.001    0.000 cast.py:1310(maybe_cast_to_datetime)
       52    0.000    0.000    0.001    0.000 cast.py:1570(construct_1d_object_array_from_listlike)
       21    0.000    0.000    0.000    0.000 cast.py:1595(construct_1d_ndarray_preserving_na)
        5    0.000    0.000    0.000    0.000 cast.py:1630(maybe_cast_to_integer_array)
      196    0.003    0.000    0.007    0.000 cast.py:442(maybe_promote)
      196    0.000    0.000    0.002    0.000 cast.py:598(_ensure_dtype_type)
        5    0.000    0.000    0.000    0.000 cast.py:88(maybe_convert_platform)
        6    0.000    0.000    0.000    0.000 cast.py:898(astype_nansafe)
        1    0.000    0.000    0.001    0.001 check.py:1(<module>)
        5    0.011    0.002  228.117   45.623 clusterizer.py:107(clusterize)
        5    0.004    0.001    0.057    0.011 clusterizer.py:156(save_to_map)
        1    0.001    0.001    0.167    0.167 clusterizer.py:216(calcule_nb_clusters_par_zone)
        1    0.258    0.258  526.867  526.867 clusterizer.py:227(main_json)
    95072    0.019    0.000    0.019    0.000 clusterizer.py:254(<lambda>)
    95073    1.294    0.000  291.941    0.003 clusterizer.py:65(rapport_a_la_seine)
        1    0.006    0.006    0.042    0.042 clusterizer.py:91(nettoyer)
   284709    0.226    0.000    0.226    0.000 clusterizer_utils.py:126(calculer_poids_code_NAF)
       57    0.001    0.000    0.267    0.005 clusterizer_utils.py:145(calculer_poids_cluster)
        5    0.000    0.000    0.000    0.000 clusterizer_utils.py:157(calculer_poids_cluster_wrapper)
       52    0.000    0.000    0.103    0.002 clusterizer_utils.py:164(fct)
       52    0.001    0.000    0.006    0.000 clusterizer_utils.py:169(swap_xy)
     1357    0.001    0.000    0.001    0.000 clusterizer_utils.py:185(swap_xy_coords)
        1    0.018    0.018    0.142    0.142 clusterizer_utils.py:211(filter_nearby_paris)
        6    0.007    0.001    0.295    0.049 clusterizer_utils.py:232(get_coords_from_object)
   189975    0.062    0.000    0.062    0.000 clusterizer_utils.py:242(<lambda>)
   189975    0.058    0.000    0.058    0.000 clusterizer_utils.py:243(<lambda>)
        5    0.000    0.000    0.146    0.029 clusterizer_utils.py:28(get_infos_clusters_poids)
        5    0.000    0.000    0.018    0.004 clusterizer_utils.py:42(get_infos_clusters_taille)
        5    1.003    0.201  226.751   45.350 clusterizer_utils.py:52(get_infos_clusters_enveloppes_convexes)
    94903    0.043    0.000    0.043    0.000 clusterizer_utils.py:71(<lambda>)
    94903    0.034    0.000    0.034    0.000 clusterizer_utils.py:72(<lambda>)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
        1    0.000    0.000    0.028    0.028 codecs.py:319(decode)
      308    0.001    0.000    0.008    0.000 collection.py:51(geoms)
       61    0.000    0.000    0.000    0.000 common.py:1025(is_datetime_or_timedelta_dtype)
       54    0.000    0.000    0.002    0.000 common.py:1064(is_numeric_v_string_like)
       12    0.000    0.000    0.001    0.000 common.py:1123(is_datetimelike_v_numeric)
       61    0.000    0.000    0.001    0.000 common.py:1180(needs_i8_conversion)
       54    0.000    0.000    0.001    0.000 common.py:1223(is_numeric_dtype)
       55    0.000    0.000    0.000    0.000 common.py:1265(is_string_like_dtype)
       55    0.000    0.000    0.000    0.000 common.py:1293(<lambda>)
      276    0.000    0.000    0.001    0.000 common.py:1296(is_float_dtype)
      379    0.002    0.000    0.011    0.000 common.py:1330(is_bool_dtype)
        1    0.000    0.000    0.000    0.000 common.py:140(is_fsspec_url)
     2830    0.010    0.000    0.015    0.000 common.py:1460(is_extension_array_dtype)
      353    0.000    0.000    0.000    0.000 common.py:149(cast_scalar_indexer)
       46    0.000    0.000    0.000    0.000 common.py:150(ensure_python_int)
       12    0.000    0.000    0.000    0.000 common.py:1509(is_complex_dtype)
        1    0.000    0.000    0.000    0.000 common.py:152(get_filepath_or_buffer)
       96    0.000    0.000    0.001    0.000 common.py:1541(_is_dtype)
     1225    0.001    0.000    0.002    0.000 common.py:1565(_get_dtype)
     1712    0.002    0.000    0.004    0.000 common.py:1600(_is_dtype_type)
      888    0.002    0.000    0.004    0.000 common.py:1733(pandas_dtype)
        5    0.000    0.000    0.000    0.000 common.py:176(not_none)
     1176    0.001    0.000    0.001    0.000 common.py:178(classes)
       10    0.000    0.000    0.000    0.000 common.py:180(<genexpr>)
     1176    0.000    0.000    0.001    0.000 common.py:180(<lambda>)
      536    0.000    0.000    0.000    0.000 common.py:183(classes_and_not_datetimelike)
      536    0.000    0.000    0.000    0.000 common.py:188(<lambda>)
       23    0.000    0.000    0.000    0.000 common.py:190(all_none)
       46    0.000    0.000    0.000    0.000 common.py:194(<genexpr>)
      688    0.002    0.000    0.004    0.000 common.py:194(is_object_dtype)
       60    0.000    0.000    0.000    0.000 common.py:197(any_not_none)
       60    0.000    0.000    0.000    0.000 common.py:201(<genexpr>)
      174    0.001    0.000    0.001    0.000 common.py:218(asarray_tuplesafe)
      280    0.002    0.000    0.003    0.000 common.py:224(is_sparse)
       60    0.000    0.000    0.000    0.000 common.py:268(maybe_make_list)
        1    0.000    0.000    0.000    0.000 common.py:269(get_compression_method)
        9    0.000    0.000    0.000    0.000 common.py:274(maybe_iterable_to_list)
       72    0.000    0.000    0.000    0.000 common.py:283(is_null_slice)
        2    0.000    0.000    0.000    0.000 common.py:302(infer_compression)
        5    0.000    0.000    0.000    0.000 common.py:312(get_callable_name)
      522    0.001    0.000    0.001    0.000 common.py:329(apply_if_callable)
      117    0.000    0.000    0.000    0.000 common.py:348(is_datetime64_dtype)
        1    0.000    0.000    0.001    0.001 common.py:356(get_handle)
      550    0.001    0.000    0.003    0.000 common.py:381(is_datetime64tz_dtype)
      478    0.000    0.000    0.001    0.000 common.py:422(is_timedelta64_dtype)
      685    0.001    0.000    0.005    0.000 common.py:456(is_period_dtype)
        1    0.000    0.000    0.000    0.000 common.py:49(is_url)
      625    0.001    0.000    0.005    0.000 common.py:492(is_interval_dtype)
       53    0.000    0.000    0.028    0.001 common.py:50(new_method)
      876    0.001    0.000    0.005    0.000 common.py:530(is_categorical_dtype)
       41    0.000    0.000    0.001    0.000 common.py:566(is_string_dtype)
       41    0.000    0.000    0.001    0.000 common.py:595(condition)
       16    0.000    0.000    0.000    0.000 common.py:598(is_excluded_dtype)
       64    0.000    0.000    0.000    0.000 common.py:603(<genexpr>)
      383    0.001    0.000    0.001    0.000 common.py:608(is_dtype_equal)
        4    0.000    0.000    0.000    0.000 common.py:67(_expand_user)
      116    0.000    0.000    0.000    0.000 common.py:696(is_integer_dtype)
      198    0.000    0.000    0.001    0.000 common.py:750(is_signed_integer_dtype)
      168    0.000    0.000    0.001    0.000 common.py:806(is_unsigned_integer_dtype)
      370    0.000    0.000    0.000    0.000 common.py:905(is_datetime64_any_dtype)
        4    0.000    0.000    0.000    0.000 common.py:947(is_datetime64_ns_dtype)
      131    0.005    0.000    0.016    0.000 common.py:97(is_bool_indexer)
        3    0.000    0.000    0.000    0.000 common.py:97(stringify_path)
      222    0.001    0.000    0.055    0.000 compiler.py:100(generate)
      222    0.001    0.000    0.001    0.000 compiler.py:1372(_make_finalize)
      222    0.000    0.000    0.004    0.000 compiler.py:141(find_undeclared)
      222    0.000    0.000    0.001    0.000 compiler.py:1420(_output_const_repr)
      222    0.000    0.000    0.001    0.000 compiler.py:1427(_output_child_to_const)
      222    0.001    0.000    0.005    0.000 compiler.py:1475(visit_Output)
      222    0.001    0.000    0.001    0.000 compiler.py:167(__init__)
      222    0.000    0.000    0.000    0.000 compiler.py:254(__init__)
      222    0.000    0.000    0.000    0.000 compiler.py:276(__init__)
      222    0.002    0.000    0.002    0.000 compiler.py:300(__init__)
      222    0.000    0.000    0.000    0.000 compiler.py:413(indent)
      222    0.000    0.000    0.000    0.000 compiler.py:417(outdent)
      222    0.000    0.000    0.008    0.000 compiler.py:441(blockvisit)
     2664    0.005    0.000    0.006    0.000 compiler.py:452(write)
     2664    0.002    0.000    0.011    0.000 compiler.py:466(writeline)
     2664    0.002    0.000    0.003    0.000 compiler.py:473(newline)
      222    0.001    0.000    0.004    0.000 compiler.py:537(pull_dependencies)
      222    0.000    0.000    0.000    0.000 compiler.py:580(enter_frame)
      222    0.000    0.000    0.000    0.000 compiler.py:596(leave_frame)
      222    0.000    0.000    0.000    0.000 compiler.py:604(choose_async)
      222    0.000    0.000    0.000    0.000 compiler.py:607(func)
      222    0.000    0.000    0.004    0.000 compiler.py:719(write_commons)
      222    0.007    0.000    0.050    0.000 compiler.py:824(visit_Template)
      222    0.000    0.000    0.000    0.000 compiler.py:938(<genexpr>)
      222    0.000    0.000    0.000    0.000 compiler.py:940(<genexpr>)
       20    0.000    0.000    0.002    0.000 concat.py:110(concat_compat)
       40    0.000    0.000    0.000    0.000 concat.py:128(is_nonempty)
       20    0.000    0.000    0.000    0.000 concat.py:139(<listcomp>)
       40    0.000    0.000    0.000    0.000 concat.py:144(<genexpr>)
       20    0.000    0.000    0.000    0.000 concat.py:147(<setcomp>)
       60    0.000    0.000    0.000    0.000 concat.py:148(<genexpr>)
       60    0.000    0.000    0.000    0.000 concat.py:174(__init__)
       20    0.000    0.000    0.001    0.000 concat.py:29(get_dtype_kinds)
       20    0.000    0.000    0.014    0.001 concat.py:31(concatenate_block_managers)
       20    0.000    0.000    0.002    0.000 concat.py:48(<listcomp>)
       80    0.000    0.000    0.000    0.000 concat.py:525(_combine_concat_plans)
       40    0.001    0.000    0.002    0.000 concat.py:87(_get_mgr_concatenation_plan)
      308   14.871    0.048  218.270    0.709 concave_hull_utils.py:13(alpha_shape)
  2469105    8.519    0.000    8.892    0.000 concave_hull_utils.py:22(add_edge)
        6    0.000    0.000    0.000    0.000 config.py:104(_get_option)
       10    0.000    0.000    0.000    0.000 config.py:112(_set_option)
        1    0.000    0.000    0.000    0.000 config.py:232(__call__)
        5    0.000    0.000    0.000    0.000 config.py:394(__init__)
        5    0.000    0.000    0.000    0.000 config.py:402(__enter__)
        5    0.000    0.000    0.000    0.000 config.py:403(<listcomp>)
        5    0.000    0.000    0.000    0.000 config.py:408(__exit__)
       16    0.000    0.000    0.000    0.000 config.py:539(_select_options)
       16    0.000    0.000    0.000    0.000 config.py:557(_get_root)
       17    0.000    0.000    0.000    0.000 config.py:571(_get_deprecated_option)
       10    0.000    0.000    0.000    0.000 config.py:587(_get_registered_option)
       16    0.000    0.000    0.000    0.000 config.py:598(_translate_key)
        1    0.000    0.000    0.000    0.000 config.py:610(_warn_if_deprecated)
       10    0.000    0.000    0.000    0.000 config.py:804(inner)
       16    0.000    0.000    0.000    0.000 config.py:86(_get_single_key)
       25    0.000    0.000    0.019    0.001 construction.py:143(init_ndarray)
       15    0.000    0.000    0.001    0.000 construction.py:289(_prep_ndarray)
       11    0.000    0.000    0.142    0.013 construction.py:329(_homogenize)
      643    0.001    0.000    0.005    0.000 construction.py:339(extract_array)
        5    0.000    0.000    0.000    0.000 construction.py:360(extract_index)
      214    0.005    0.000    0.162    0.001 construction.py:390(sanitize_array)
       15    0.000    0.000    0.006    0.000 construction.py:450(_get_axes)
        1    0.009    0.009    0.810    0.810 construction.py:498(to_arrays)
      199    0.001    0.000    0.007    0.000 construction.py:520(_try_cast)
      236    0.000    0.000    0.003    0.000 construction.py:580(is_empty_data)
       11    0.000    0.000    0.191    0.017 construction.py:60(arrays_to_mgr)
        4    0.000    0.000    0.002    0.000 construction.py:600(create_series_with_explicit_dtype)
        1    0.000    0.000    0.801    0.801 construction.py:609(_list_of_dict_to_arrays)
   663561    0.324    0.000    0.370    0.000 construction.py:637(<genexpr>)
        2    0.000    0.000    0.000    0.000 construction.py:638(<genexpr>)
        1    0.156    0.156    0.156    0.156 construction.py:643(<listcomp>)
        1    0.000    0.000    0.000    0.000 construction.py:651(_validate_or_indexify_columns)
        2    0.000    0.000    0.000    0.000 construction.py:682(<genexpr>)
        1    0.000    0.000    0.001    0.001 construction.py:709(_convert_object_array)
        3    0.000    0.000    0.001    0.000 construction.py:726(convert)
        1    0.000    0.000    0.001    0.001 construction.py:732(<listcomp>)
        2    0.000    0.000    0.000    0.000 construction.py:741(sanitize_index)
        5    0.000    0.000    0.000    0.000 contextlib.py:59(_recreate_cm)
        5    0.001    0.000    0.002    0.000 contextlib.py:72(inner)
      262    0.000    0.000    0.000    0.000 coords.py:41(__init__)
      836    0.002    0.000    0.002    0.000 coords.py:44(_update)
      470    0.001    0.000    0.003    0.000 coords.py:48(__len__)
      106    0.001    0.000    0.002    0.000 coords.py:69(__getitem__)
      308    0.001    0.000    0.001    0.000 core.py:6374(isMaskedArray)
       22    0.000    0.000    0.000    0.000 cp1252.py:18(encode)
        6    0.000    0.000    0.000    0.000 dataclasses.py:1045(is_dataclass)
        4    0.000    0.000    0.002    0.001 datetimes.py:135(_maybe_cache)
        4    0.000    0.000    0.007    0.002 datetimes.py:259(_convert_listlike_datetimes)
        4    0.000    0.000    0.009    0.002 datetimes.py:605(to_datetime)
        4    0.000    0.000    0.000    0.000 datetimes.py:79(should_cache)
       54    0.000    0.000    0.000    0.000 dispatch.py:11(should_extension_dispatch)
       22    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
       22    0.000    0.000    0.000    0.000 dtypes.py:1065(construct_from_string)
      507    0.002    0.000    0.004    0.000 dtypes.py:1119(is_dtype)
       22    0.000    0.000    0.000    0.000 dtypes.py:281(construct_from_string)
       22    0.000    0.000    0.000    0.000 dtypes.py:694(construct_from_string)
       22    0.000    0.000    0.000    0.000 dtypes.py:853(construct_from_string)
      567    0.002    0.000    0.004    0.000 dtypes.py:906(is_dtype)
     1780    0.001    0.000    0.001    0.000 einsumfunc.py:989(_einsum_dispatcher)
      356    0.001    0.000    0.008    0.000 einsumfunc.py:997(einsum)
      545    0.001    0.000    0.006    0.000 element.py:103(add_child)
      104    0.000    0.000    0.002    0.000 element.py:117(add_to)
  531/218    0.001    0.000    0.001    0.000 element.py:140(get_root)
  338/107    0.001    0.000    0.029    0.000 element.py:147(render)
        1    0.000    0.000    0.245    0.245 element.py:151(save)
        4    0.000    0.000    0.000    0.000 element.py:207(__init__)
        6    0.000    0.000    0.000    0.000 element.py:235(__init__)
        1    0.000    0.000    0.005    0.005 element.py:280(__init__)
      218    0.000    0.000    0.000    0.000 element.py:312(get_root)
        1    0.000    0.000    0.244    0.244 element.py:316(render)
      104    0.000    0.000    0.002    0.000 element.py:422(__init__)
      861    0.002    0.000    0.159    0.000 element.py:51(__init__)
      106    0.000    0.000    0.001    0.000 element.py:617(__init__)
    106/1    0.002    0.000    0.225    0.225 element.py:621(render)
     1264    0.002    0.000    0.025    0.000 element.py:63(get_name)
        1    0.000    0.000    0.226    0.226 elements.py:10(render)
      322    0.000    0.000    0.000    0.000 encoder.py:104(__init__)
      322    0.001    0.000    0.008    0.000 encoder.py:182(encode)
      319    0.007    0.000    0.007    0.000 encoder.py:204(iterencode)
        6    0.000    0.000    0.000    0.000 enum.py:313(__call__)
        6    0.000    0.000    0.000    0.000 enum.py:631(__new__)
        3    0.000    0.000    0.000    0.000 enum.py:753(value)
        3    0.000    0.000    0.000    0.000 enum.py:938(__and__)
      220    0.001    0.000    0.147    0.001 environment.py:1072(from_string)
      222    0.000    0.000    0.001    0.000 environment.py:1093(make_globals)
      220    0.001    0.000    0.148    0.001 environment.py:1160(__new__)
      222    0.001    0.000    0.004    0.000 environment.py:1209(from_code)
      222    0.001    0.000    0.001    0.000 environment.py:1240(_from_namespace)
  445/107    0.001    0.000    0.066    0.001 environment.py:1268(render)
      449    0.001    0.000    0.015    0.000 environment.py:1364(new_context)
        4    0.000    0.000    0.000    0.000 environment.py:1381(make_module)
      318    0.000    0.000    0.000    0.000 environment.py:1412(_get_default_module)
      318    0.000    0.000    0.001    0.000 environment.py:1453(module)
        4    0.000    0.000    0.000    0.000 environment.py:1510(__init__)
      222    0.000    0.000    0.002    0.000 environment.py:440(lexer)
      666    0.001    0.000    0.002    0.000 environment.py:445(iter_extensions)
      424    0.000    0.000    0.000    0.000 environment.py:449(getitem)
     3098    0.001    0.000    0.002    0.000 environment.py:468(getattr)
      222    0.001    0.000    0.046    0.000 environment.py:601(_parse)
      222    0.000    0.000    0.001    0.000 environment.py:628(preprocess)
      222    0.001    0.000    0.028    0.000 environment.py:644(_tokenize)
      222    0.001    0.000    0.055    0.000 environment.py:665(_generate)
      222    0.000    0.000    0.040    0.000 environment.py:686(_compile)
      222    0.001    0.000    0.142    0.001 environment.py:716(compile)
        1    0.000    0.000    0.003    0.003 environment.py:881(list_templates)
        1    0.000    0.000    0.000    0.000 environment.py:914(<listcomp>)
        2    0.000    0.000    0.003    0.002 environment.py:938(_load_template)
        2    0.000    0.000    0.003    0.002 environment.py:963(get_template)
        1    0.000    0.000    0.002    0.002 expressions.py:1(<module>)
       54    0.000    0.000    0.000    0.000 expressions.py:186(_has_bool_dtype)
       54    0.000    0.000    0.000    0.000 expressions.py:195(_bool_arith_check)
       54    0.000    0.000    0.005    0.000 expressions.py:217(evaluate)
        1    0.000    0.000    0.000    0.000 expressions.py:39(set_use_numexpr)
       54    0.000    0.000    0.005    0.000 expressions.py:61(_evaluate_standard)
      156    0.259    0.002    0.259    0.002 extmath.py:118(safe_sparse_dot)
      356    0.001    0.000    0.014    0.000 extmath.py:49(row_norms)
      327    0.001    0.000    0.012    0.000 extmath.py:663(_safe_accumulator_op)
      141    0.002    0.000    0.031    0.000 extmath.py:892(stable_cumsum)
      322    0.001    0.000    0.013    0.000 filters.py:1647(do_tojson)
        1    0.000    0.000    0.012    0.012 folium.py:216(__init__)
        1    0.000    0.000    0.227    0.227 folium.py:340(render)
        1    0.000    0.000    0.000    0.000 folium.py:64(__init__)
        7    0.000    0.000    0.000    0.000 frame.py:1099(__len__)
        1    0.000    0.000    0.000    0.000 frame.py:2854(_get_column_array)
        2    0.000    0.000    0.000    0.000 frame.py:2861(_iter_column_arrays)
      221    0.010    0.000    0.175    0.001 frame.py:2869(__getitem__)
        6    0.000    0.000    0.122    0.020 frame.py:2930(_getitem_bool_array)
        2    0.000    0.000    0.000    0.000 frame.py:3162(_ensure_valid_index)
      144    0.001    0.000    0.005    0.000 frame.py:3184(_box_col_values)
        2    0.000    0.000    0.003    0.001 frame.py:3610(insert)
        2    0.000    0.000    0.001    0.000 frame.py:3702(_sanitize_column)
      107    0.000    0.000    0.000    0.000 frame.py:421(_constructor)
      127    0.001    0.000    1.018    0.008 frame.py:441(__init__)
        7    0.000    0.000    0.030    0.004 frame.py:4621(reset_index)
        2    0.000    0.000    0.000    0.000 frame.py:4776(_maybe_casted_values)
        1    0.000    0.000    0.008    0.008 frame.py:4870(isna)
        1    0.000    0.000    0.028    0.028 frame.py:4887(dropna)
      122    0.000    0.000    0.000    0.000 frame.py:568(axes)
        2    0.000    0.000    0.000    0.000 frame.py:585(shape)
        1    0.000    0.000    0.000    0.000 frame.py:607(_is_homogeneous_type)
       10    0.000    0.000    0.004    0.000 frame.py:6401(groupby)
       20    0.000    0.000    0.046    0.002 frame.py:7754(join)
       20    0.001    0.000    0.046    0.002 frame.py:7878(_join_compat)
        1    0.000    0.000    0.010    0.010 frame.py:8383(count)
        1    0.000    0.000    0.001    0.001 frame.py:8531(_reduce)
        1    0.000    0.000    0.000    0.000 frame.py:8545(<listcomp>)
        1    0.000    0.000    0.001    0.001 frame.py:8571(func)
        2    0.000    0.000    0.000    0.000 frame.py:8883(_get_agg_axis)
        8    0.000    0.000    0.000    0.000 frame.py:953(items)
      141    0.000    0.000    0.000    0.000 fromnumeric.py:1191(_argmin_dispatcher)
      141    0.000    0.000    0.001    0.000 fromnumeric.py:1195(argmin)
      141    0.000    0.000    0.000    0.000 fromnumeric.py:1272(_searchsorted_dispatcher)
      141    0.000    0.000    0.002    0.000 fromnumeric.py:1276(searchsorted)
      141    0.000    0.000    0.000    0.000 fromnumeric.py:2029(_clip_dispatcher)
      141    0.000    0.000    0.009    0.000 fromnumeric.py:2033(clip)
     1849    0.001    0.000    0.001    0.000 fromnumeric.py:2100(_sum_dispatcher)
     1849    0.006    0.000    0.041    0.000 fromnumeric.py:2105(sum)
        5    0.000    0.000    0.000    0.000 fromnumeric.py:2245(_any_dispatcher)
        5    0.000    0.000    0.001    0.000 fromnumeric.py:2249(any)
      423    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
      423    0.001    0.000    0.006    0.000 fromnumeric.py:2337(all)
      141    0.000    0.000    0.000    0.000 fromnumeric.py:2414(_cumsum_dispatcher)
      141    0.000    0.000    0.006    0.000 fromnumeric.py:2418(cumsum)
      130    0.000    0.000    0.000    0.000 fromnumeric.py:2876(_prod_dispatcher)
      130    0.000    0.000    0.003    0.000 fromnumeric.py:2881(prod)
      286    0.000    0.000    0.000    0.000 fromnumeric.py:3071(_ndim_dispatcher)
      286    0.001    0.000    0.002    0.000 fromnumeric.py:3075(ndim)
      565    0.001    0.000    0.017    0.000 fromnumeric.py:52(_wrapfunc)
     2407    0.009    0.000    0.043    0.000 fromnumeric.py:70(_wrapreduction)
     2407    0.003    0.000    0.003    0.000 fromnumeric.py:71(<dictcomp>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:995(_argsort_dispatcher)
        1    0.001    0.001    0.001    0.001 fromnumeric.py:999(argsort)
       71    0.000    0.000    0.000    0.000 function.py:48(__call__)
       63    0.004    0.000  292.468    4.642 function_base.py:2080(__call__)
       63    0.000    0.000    0.008    0.000 function_base.py:2110(_get_ufunc_and_otypes)
        1    0.000    0.000    0.000    0.000 function_base.py:2140(<listcomp>)
        2    0.000    0.000    0.000    0.000 function_base.py:2141(<genexpr>)
        1    0.000    0.000    0.000    0.000 function_base.py:2145(<listcomp>)
        1    0.000    0.000    0.000    0.000 function_base.py:2169(<listcomp>)
       63    0.279    0.004  292.464    4.642 function_base.py:2179(_vectorize_call)
       63    0.000    0.000    0.002    0.000 function_base.py:2189(<listcomp>)
        4    0.000    0.000    0.000    0.000 function_base.py:4417(_insert_dispatcher)
        4    0.000    0.000    0.000    0.000 function_base.py:4421(insert)
    11763    0.006    0.000    0.008    0.000 generic.py:10(_check)
        1    0.000    0.000    0.001    0.001 generic.py:11395(stat_func)
        5    0.000    0.000    0.001    0.000 generic.py:11562(logical_func)
        5    0.000    0.000    0.002    0.000 generic.py:1218(_wrap_applied_output)
        1    0.000    0.000    0.000    0.000 generic.py:1319(__invert__)
       10    0.000    0.000    0.000    0.000 generic.py:1477(_check_label_or_level_ambiguity)
       10    0.000    0.000    0.000    0.000 generic.py:1496(<genexpr>)
       12    0.000    0.000    0.000    0.000 generic.py:1719(__contains__)
      626    0.002    0.000    0.002    0.000 generic.py:195(__init__)
      379    0.000    0.000    0.000    0.000 generic.py:232(attrs)
       23    0.000    0.000    0.002    0.000 generic.py:249(_validate_dtype)
        2    0.000    0.000    0.000    0.000 generic.py:294(_data)
      144    0.000    0.000    0.001    0.000 generic.py:3180(_set_as_cached)
       16    0.000    0.000    0.000    0.000 generic.py:3250(_clear_item_cache)
       65    0.003    0.000    0.194    0.003 generic.py:3256(take)
       59    0.000    0.000    0.178    0.003 generic.py:3355(_take_with_is_copy)
       72    0.000    0.000    0.013    0.000 generic.py:3369(xs)
      215    0.001    0.000    0.021    0.000 generic.py:3534(_get_item_cache)
        6    0.000    0.000    0.001    0.000 generic.py:3553(_slice)
       63    0.002    0.000    0.002    0.000 generic.py:3584(_set_is_copy)
      632    0.000    0.000    0.000    0.000 generic.py:365(_get_axis_number)
      455    0.001    0.000    0.001    0.000 generic.py:377(_get_axis)
       71    0.000    0.000    0.000    0.000 generic.py:382(_get_block_manager_axis)
       57    0.000    0.000    0.000    0.000 generic.py:447(_info_axis)
       97    0.000    0.000    0.000    0.000 generic.py:471(ndim)
        2    0.000    0.000    0.001    0.000 generic.py:494(size)
      399    0.002    0.000    0.003    0.000 generic.py:5097(__finalize__)
      983    0.002    0.000    0.002    0.000 generic.py:5125(__getattr__)
     1021    0.004    0.000    0.008    0.000 generic.py:5143(__setattr__)
       68    0.000    0.000    0.028    0.000 generic.py:5199(_protect_consolidate)
       66    0.000    0.000    0.028    0.000 generic.py:5210(_consolidate_inplace)
       66    0.000    0.000    0.028    0.000 generic.py:5213(f)
        2    0.000    0.000    0.000    0.000 generic.py:5240(_is_mixed_type)
        2    0.000    0.000    0.000    0.000 generic.py:5242(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:5270(values)
        5    0.000    0.000    0.002    0.000 generic.py:5352(dtypes)
      129    0.001    0.000    0.031    0.000 generic.py:5395(astype)
        8    0.000    0.000    0.032    0.004 generic.py:5560(copy)
        7    0.000    0.000    0.000    0.000 generic.py:562(_set_axis)
        1    0.000    0.000    0.000    0.000 genericpath.py:16(exists)
        2    0.000    0.000    0.000    0.000 genericpath.py:27(isfile)
        2    0.000    0.000    0.000    0.000 genericpath.py:53(getmtime)
       30    0.000    0.000    0.000    0.000 geodataframe.py:162(__setattr__)
       10    0.001    0.000    0.009    0.001 geodataframe.py:86(__init__)
  3437322    0.817    0.000    0.817    0.000 geos.py:581(errcheck_predicate)
        5    0.000    0.000    0.003    0.001 geoseries.py:102(__new__)
        5    0.000    0.000    0.000    0.000 geoseries.py:183(__init__)
       15    0.000    0.000    0.000    0.000 geoseries.py:191(geometry)
        5    0.000    0.000    0.000    0.000 groupby.py:1260(_obj_1d_constructor)
        5    0.000    0.000    0.011    0.002 groupby.py:1514(size)
        5    0.000    0.000    0.000    0.000 groupby.py:2672(_reindex_output)
       10    0.000    0.000    0.004    0.000 groupby.py:483(__init__)
        5    0.000    0.000    0.000    0.000 groupby.py:632(_selected_obj)
        5    0.000    0.000    0.000    0.000 groupby.py:697(__getattr__)
        5    0.000    0.000    0.143    0.029 groupby.py:825(apply)
        5    0.005    0.001    0.142    0.028 groupby.py:874(_python_apply_general)
       10    0.000    0.000    0.000    0.000 grouper.py:413(__init__)
       20    0.000    0.000    0.010    0.001 grouper.py:567(codes)
       10    0.000    0.000    0.000    0.000 grouper.py:573(result_index)
       25    0.000    0.000    0.000    0.000 grouper.py:579(group_index)
       10    0.000    0.000    0.010    0.001 grouper.py:586(_make_codes)
       10    0.000    0.000    0.004    0.000 grouper.py:610(get_grouper)
       20    0.000    0.000    0.000    0.000 grouper.py:712(<genexpr>)
       20    0.000    0.000    0.000    0.000 grouper.py:713(<genexpr>)
       20    0.000    0.000    0.000    0.000 grouper.py:714(<genexpr>)
       10    0.000    0.000    0.000    0.000 grouper.py:748(is_in_axis)
       10    0.000    0.000    0.000    0.000 grouper.py:761(is_in_obj)
       10    0.000    0.000    0.000    0.000 grouper.py:830(_is_label_like)
       10    0.000    0.000    0.000    0.000 grouper.py:834(_convert_grouper)
      222    0.000    0.000    0.000    0.000 idtracking.py:175(__init__)
      222    0.000    0.000    0.004    0.000 idtracking.py:178(_simple_visit)
      222    0.000    0.000    0.000    0.000 idtracking.py:235(__init__)
      222    0.000    0.000    0.000    0.000 idtracking.py:31(__init__)
      222    0.000    0.000    0.005    0.000 idtracking.py:46(analyze_node)
   452952    0.216    0.000    0.216    0.000 impl.py:56(__getitem__)
      308    0.000    0.000    0.000    0.000 impl.py:64(__contains__)
        2    0.000    0.000    0.000    0.000 index_tricks.py:316(__getitem__)
       65    0.005    0.000    0.006    0.000 indexers.py:210(maybe_convert_indices)
       59    0.002    0.000    0.006    0.000 indexers.py:348(check_array_indexer)
      144    0.000    0.000    0.001    0.000 indexers.py:52(is_list_like_indexer)
       72    0.000    0.000    0.018    0.000 indexing.py:1042(_getitem_tuple)
       72    0.000    0.000    0.013    0.000 indexing.py:1057(_get_label)
      125    0.001    0.000    0.090    0.001 indexing.py:1078(_getitem_axis)
       12    0.001    0.000    0.001    0.000 indexing.py:2126(convert_to_index_sliceable)
       59    0.000    0.000    0.011    0.000 indexing.py:2151(check_bool_indexer)
      144    0.000    0.000    0.001    0.000 indexing.py:2258(is_label_like)
      125    0.000    0.000    0.000    0.000 indexing.py:237(loc)
        1    0.000    0.000    0.000    0.000 indexing.py:579(__call__)
       72    0.000    0.000    0.001    0.000 indexing.py:709(_is_nested_tuple_indexer)
      216    0.000    0.000    0.000    0.000 indexing.py:715(<genexpr>)
       72    0.001    0.000    0.018    0.000 indexing.py:757(_getitem_lowerdim)
      125    0.001    0.000    0.095    0.001 indexing.py:864(__getitem__)
      216    0.000    0.000    0.000    0.000 indexing.py:866(<genexpr>)
       53    0.000    0.000    0.073    0.001 indexing.py:893(_getbool_axis)
       72    0.000    0.000    0.000    0.000 indexing.py:913(_validate_key)
       72    0.000    0.000    0.001    0.000 indexing.py:925(_is_scalar_access)
      230    0.000    0.000    0.003    0.000 inference.py:185(is_array_like)
      147    0.001    0.000    0.001    0.000 inference.py:263(is_dict_like)
      323    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
        1    0.000    0.000    0.000    0.000 inference.py:295(is_named_tuple)
     1726    0.002    0.000    0.002    0.000 inference.py:322(is_hashable)
        2    0.000    0.000    0.000    0.000 inference.py:360(is_sequence)
        6    0.000    0.000    0.000    0.000 inference.py:391(is_dataclass)
      129    0.000    0.000    0.000    0.000 inspect.py:72(isclass)
      222    0.001    0.000    0.023    0.000 lexer.py:322(__init__)
      444    0.000    0.000    0.000    0.000 lexer.py:339(__bool__)
      444    0.001    0.000    0.025    0.000 lexer.py:377(__next__)
      222    0.000    0.000    0.001    0.000 lexer.py:394(close)
      222    0.001    0.000    0.002    0.000 lexer.py:425(get_lexer)
      222    0.000    0.000    0.002    0.000 lexer.py:597(_normalize_newlines)
      222    0.001    0.000    0.024    0.000 lexer.py:603(tokenize)
      444    0.001    0.000    0.023    0.000 lexer.py:614(wrap)
      444    0.003    0.000    0.020    0.000 lexer.py:668(tokeniter)
  1241973    0.461    0.000    0.461    0.000 linestring.py:29(__init__)
        2    0.000    0.000    0.003    0.002 loaders.py:106(load)
        2    0.000    0.000    0.000    0.000 loaders.py:24(split_template_path)
        2    0.000    0.000    0.002    0.001 loaders.py:316(get_source)
        1    0.000    0.000    0.003    0.003 loaders.py:349(list_templates)
       36    0.000    0.000    0.000    0.000 loaders.py:358(<genexpr>)
        8    0.000    0.000    0.000    0.000 locale.py:384(normalize)
        8    0.000    0.000    0.000    0.000 locale.py:467(_parse_localename)
        8    0.000    0.000    0.000    0.000 locale.py:575(getlocale)
        1    0.000    0.000    0.000    0.000 managers.py:1008(iget_values)
        2    0.000    0.000    0.002    0.001 managers.py:1171(insert)
       65    0.001    0.000    0.142    0.002 managers.py:1247(reindex_indexer)
       64    0.001    0.000    0.136    0.002 managers.py:1293(<listcomp>)
        1    0.000    0.000    0.004    0.004 managers.py:1309(_slice_take_blocks_ax0)
      128    0.001    0.000    0.003    0.000 managers.py:132(__init__)
      128    0.000    0.000    0.001    0.000 managers.py:138(<listcomp>)
       65    0.002    0.000    0.161    0.002 managers.py:1436(take)
      473    0.001    0.000    0.002    0.000 managers.py:1541(__init__)
       75    0.000    0.000    0.001    0.000 managers.py:156(from_blocks)
      123    0.000    0.000    0.001    0.000 managers.py:1562(from_blocks)
      206    0.001    0.000    0.015    0.000 managers.py:1573(from_array)
     1196    0.001    0.000    0.001    0.000 managers.py:1584(_block)
      610    0.001    0.000    0.001    0.000 managers.py:1611(dtype)
       21    0.000    0.000    0.000    0.000 managers.py:1618(external_values)
      265    0.000    0.000    0.001    0.000 managers.py:1622(internal_values)
      168    0.000    0.000    0.008    0.000 managers.py:163(blknos)
       15    0.000    0.000    0.002    0.000 managers.py:1660(create_block_manager_from_blocks)
       11    0.000    0.000    0.043    0.004 managers.py:1684(create_block_manager_from_arrays)
       33    0.000    0.000    0.000    0.000 managers.py:1689(<genexpr>)
       11    0.001    0.000    0.042    0.004 managers.py:1724(form_blocks)
      163    0.000    0.000    0.000    0.000 managers.py:179(blklocs)
       10    0.000    0.000    0.000    0.000 managers.py:1793(<listcomp>)
        1    0.000    0.000    0.040    0.040 managers.py:1821(_simple_blockify)
        1    0.034    0.034    0.039    0.039 managers.py:1852(_stack_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1855(_asarray_compat)
        1    0.000    0.000    0.000    0.000 managers.py:1861(_shape_compat)
        1    0.001    0.001    0.025    0.025 managers.py:1898(_consolidate)
        6    0.000    0.000    0.009    0.002 managers.py:1903(<lambda>)
        2    0.001    0.000    0.016    0.008 managers.py:1915(_merge_blocks)
        1    0.000    0.000    0.000    0.000 managers.py:1930(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1931(<listcomp>)
        2    0.000    0.000    0.001    0.000 managers.py:2017(_fast_count_smallints)
        1    0.000    0.000    0.000    0.000 managers.py:2024(_preprocess_slice_or_indexer)
      341    0.001    0.000    0.003    0.000 managers.py:212(shape)
     1023    0.000    0.000    0.002    0.000 managers.py:214(<genexpr>)
      475    0.000    0.000    0.000    0.000 managers.py:216(ndim)
        7    0.000    0.000    0.000    0.000 managers.py:220(set_axis)
       42    0.000    0.000    0.000    0.000 managers.py:233(_is_single_block)
       94    0.004    0.000    0.008    0.000 managers.py:238(_rebuild_blknos_and_blklocs)
      196    0.000    0.000    0.000    0.000 managers.py:259(items)
        5    0.000    0.000    0.001    0.000 managers.py:263(get_dtypes)
        5    0.000    0.000    0.000    0.000 managers.py:264(<listcomp>)
      145    0.000    0.000    0.001    0.000 managers.py:309(__len__)
       47    0.000    0.000    0.002    0.000 managers.py:324(_verify_integrity)
      136    0.000    0.000    0.000    0.000 managers.py:326(<genexpr>)
      139    0.005    0.000    0.062    0.000 managers.py:369(apply)
      139    0.000    0.000    0.000    0.000 managers.py:388(<dictcomp>)
        1    0.000    0.000    0.008    0.008 managers.py:520(isna)
      129    0.000    0.000    0.024    0.000 managers.py:601(astype)
      225    0.000    0.000    0.001    0.000 managers.py:684(is_consolidated)
       37    0.001    0.000    0.001    0.000 managers.py:692(_consolidate_check)
       37    0.000    0.000    0.000    0.000 managers.py:693(<listcomp>)
        2    0.000    0.000    0.000    0.000 managers.py:697(is_mixed_type)
        3    0.000    0.000    0.000    0.000 managers.py:707(any_extension_types)
        6    0.000    0.000    0.000    0.000 managers.py:710(<genexpr>)
        6    0.000    0.000    0.001    0.000 managers.py:766(get_slice)
        6    0.000    0.000    0.000    0.000 managers.py:772(<listcomp>)
        8    0.000    0.000    0.032    0.004 managers.py:786(copy)
       16    0.000    0.000    0.002    0.000 managers.py:804(copy_func)
        8    0.000    0.000    0.002    0.000 managers.py:807(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:815(as_array)
       66    0.000    0.000    0.028    0.000 managers.py:970(consolidate)
      159    0.000    0.000    0.027    0.000 managers.py:986(_consolidate_inplace)
      144    0.001    0.000    0.011    0.000 managers.py:993(iget)
       52    0.000    0.000    0.006    0.000 map.py:273(__init__)
       52    0.000    0.000    0.106    0.002 map.py:300(render)
      104    0.001    0.000    0.008    0.000 map.py:337(__init__)
        1    0.000    0.000    0.000    0.000 map.py:35(__init__)
      104    0.001    0.000    0.122    0.001 map.py:364(render)
       20    0.000    0.000    0.000    0.000 merge.py:1067(_maybe_coerce_merge_keys)
       20    0.000    0.000    0.000    0.000 merge.py:1198(_validate_specification)
       60    0.000    0.000    0.000    0.000 merge.py:2053(_any)
       40    0.000    0.000    0.000    0.000 merge.py:2057(_validate_operand)
       20    0.000    0.000    0.018    0.001 merge.py:2071(_items_overlap_with_suffix)
       20    0.000    0.000    0.046    0.002 merge.py:57(merge)
       20    0.001    0.000    0.001    0.000 merge.py:576(__init__)
       20    0.001    0.000    0.044    0.002 merge.py:664(get_result)
       20    0.000    0.000    0.000    0.000 merge.py:740(_maybe_restore_index_levels)
       20    0.000    0.000    0.000    0.000 merge.py:775(_maybe_add_join_keys)
       20    0.000    0.000    0.004    0.000 merge.py:866(_get_join_info)
       20    0.000    0.000    0.000    0.000 merge.py:951(_get_merge_keys)
  189/188    0.000    0.000    0.013    0.000 missing.py:130(_isna)
       54    0.000    0.000    0.000    0.000 missing.py:136(dispatch_fill_zeros)
        2    0.004    0.002    0.012    0.006 missing.py:193(_isna_ndarraylike)
        1    0.000    0.000    0.007    0.007 missing.py:235(_isna_string_dtype)
        1    0.000    0.000    0.008    0.008 missing.py:255(notna)
       99    0.000    0.000    0.003    0.000 missing.py:358(array_equivalent)
       15    0.000    0.000    0.000    0.000 missing.py:456(_array_equivalent_object)
  189/188    0.000    0.000    0.013    0.000 missing.py:47(isna)
       11    0.000    0.000    0.000    0.000 missing.py:665(clean_reindex_fill_method)
       11    0.000    0.000    0.000    0.000 missing.py:75(clean_fill_method)
      525    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       42    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
       12    0.000    0.000    0.000    0.000 multiarray.py:468(can_cast)
      141    0.000    0.000    0.000    0.000 multiarray.py:634(result_type)
      190    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        7    0.000    0.000    0.000    0.000 multiarray.py:852(bincount)
      308    3.460    0.011   20.067    0.065 multilinestring.py:112(geos_multilinestring_from_py)
      308    0.004    0.000   20.073    0.065 multilinestring.py:32(__init__)
  1241973    1.204    0.000    1.665    0.000 multilinestring.py:55(shape_factory)
      104    0.000    0.000    2.308    0.022 multipoint.py:111(array_interface)
       52    0.250    0.005    0.658    0.013 multipoint.py:155(geos_multipoint_from_py)
       52    0.000    0.000    0.658    0.013 multipoint.py:33(__init__)
    94903    0.056    0.000    0.123    0.000 multipoint.py:60(shape_factory)
      104    0.645    0.006    2.306    0.022 multipoint.py:89(ctypes)
        1    0.000    0.000    0.000    0.000 nanops.py:1258(_maybe_null_out)
        1    0.000    0.000    0.000    0.000 nanops.py:1290(check_below_min_count)
        6    0.000    0.000    0.000    0.000 nanops.py:168(_get_fill_value)
        6    0.000    0.000    0.000    0.000 nanops.py:193(_maybe_get_mask)
        6    0.000    0.000    0.000    0.000 nanops.py:237(_get_values)
        6    0.000    0.000    0.000    0.000 nanops.py:322(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:328(_wrap_results)
        5    0.000    0.000    0.000    0.000 nanops.py:396(nanany)
        1    0.000    0.000    0.001    0.001 nanops.py:470(nansum)
        4    0.000    0.000    0.000    0.000 nanops.py:57(check)
        1    0.000    0.000    0.001    0.001 nanops.py:61(_f)
        5    0.000    0.000    0.000    0.000 nanops.py:64(<genexpr>)
      666    0.003    0.000    0.004    0.000 nodes.py:126(__init__)
     8436    0.004    0.000    0.004    0.000 nodes.py:144(iter_fields)
     6882    0.006    0.000    0.012    0.000 nodes.py:166(iter_child_nodes)
      222    0.000    0.000    0.004    0.000 nodes.py:183(find)
 1998/666    0.003    0.000    0.009    0.000 nodes.py:192(find_all)
      222    0.001    0.000    0.004    0.000 nodes.py:228(set_environment)
      222    0.000    0.000    0.000    0.000 nodes.py:612(as_const)
      671    0.001    0.000    0.001    0.000 nodes.py:73(__init__)
      222    0.000    0.000    0.000    0.000 nodes.py:91(get_eval_context)
     1005    0.004    0.000    0.005    0.000 ntpath.py:124(splitdrive)
       11    0.000    0.000    0.002    0.000 ntpath.py:228(islink)
        5    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 ntpath.py:337(expandvars)
        1    0.000    0.000    0.000    0.000 ntpath.py:34(_get_bothseps)
      309    0.004    0.000    0.009    0.000 ntpath.py:450(normpath)
      309    0.001    0.000    0.011    0.000 ntpath.py:524(abspath)
      346    0.003    0.000    0.006    0.000 ntpath.py:77(join)
       22    0.000    0.000    0.000    0.000 numeric.py:105(_shallow_copy)
        8    0.000    0.000    0.000    0.000 numeric.py:1308(normalize_axis_tuple)
        8    0.000    0.000    0.000    0.000 numeric.py:1358(<listcomp>)
        4    0.000    0.000    0.000    0.000 numeric.py:1367(_moveaxis_dispatcher)
        4    0.000    0.000    0.000    0.000 numeric.py:1371(moveaxis)
        4    0.000    0.000    0.000    0.000 numeric.py:1434(<listcomp>)
      358    0.000    0.000    0.000    0.000 numeric.py:150(is_all_dates)
      141    0.000    0.000    0.000    0.000 numeric.py:2193(_isclose_dispatcher)
      141    0.002    0.000    0.016    0.000 numeric.py:2197(isclose)
      141    0.003    0.000    0.007    0.000 numeric.py:2274(within_tol)
       17    0.000    0.000    0.000    0.000 numeric.py:2313(_array_equal_dispatcher)
       17    0.000    0.000    0.001    0.000 numeric.py:2317(array_equal)
      116    0.000    0.000    0.000    0.000 numeric.py:237(inferred_type)
      335    0.002    0.000    0.007    0.000 numeric.py:268(full)
       10    0.000    0.000    0.000    0.000 numeric.py:50(__new__)
      190    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
      190    0.001    0.000    0.003    0.000 numeric.py:75(zeros_like)
       33    0.000    0.000    0.000    0.000 numeric.py:81(_validate_dtype)
     1532    0.002    0.000    0.003    0.000 numerictypes.py:286(issubclass_)
      766    0.002    0.000    0.005    0.000 numerictypes.py:360(issubdtype)
        4    0.000    0.000    0.000    0.000 numerictypes.py:545(_can_coerce_all)
       20    0.000    0.000    0.000    0.000 numerictypes.py:554(<listcomp>)
        2    0.000    0.000    0.000    0.000 numerictypes.py:569(find_common_type)
        2    0.000    0.000    0.000    0.000 numerictypes.py:621(<listcomp>)
        2    0.000    0.000    0.000    0.000 numerictypes.py:622(<listcomp>)
      295    0.002    0.000    0.002    0.000 numpy_.py:162(__init__)
      242    0.000    0.000    0.001    0.000 numpy_.py:210(__array__)
       53    0.000    0.000    0.000    0.000 numpy_.py:414(to_numpy)
      295    0.001    0.000    0.001    0.000 numpy_.py:50(__init__)
       65    0.000    0.000    0.000    0.000 ops.py:107(groupings)
      308  127.733    0.415  127.959    0.415 ops.py:123(cascaded_union)
        5    0.000    0.000    0.004    0.001 ops.py:136(_get_splitter)
        5    0.000    0.000    0.000    0.000 ops.py:156(_get_group_keys)
        5    0.000    0.000    0.135    0.027 ops.py:165(apply)
       10    0.000    0.000    0.010    0.001 ops.py:237(codes)
       10    0.000    0.000    0.010    0.001 ops.py:239(<listcomp>)
        5    0.000    0.000    0.000    0.000 ops.py:241(levels)
        5    0.000    0.000    0.000    0.000 ops.py:243(<listcomp>)
       10    0.000    0.000    0.000    0.000 ops.py:245(names)
       10    0.000    0.000    0.000    0.000 ops.py:247(<listcomp>)
        5    0.000    0.000    0.010    0.002 ops.py:249(size)
       10    0.000    0.000    0.010    0.001 ops.py:276(group_info)
       10    0.000    0.000    0.010    0.001 ops.py:293(_get_compressed_codes)
  1241973    0.307    0.000    0.421    0.000 ops.py:30(shapeup)
       10    0.000    0.000    0.001    0.000 ops.py:312(result_index)
   824011   15.878    0.000   43.656    0.000 ops.py:39(polygonize)
      308    0.572    0.002    8.370    0.027 ops.py:51(<listcomp>)
       10    0.001    0.000    0.001    0.000 ops.py:88(__init__)
        5    0.000    0.000    0.000    0.000 ops.py:923(__init__)
        5    0.000    0.000    0.001    0.000 ops.py:931(slabels)
        5    0.000    0.000    0.001    0.000 ops.py:936(sort_idx)
        5    0.000    0.000    0.017    0.003 ops.py:954(_get_sorted_data)
        5    0.000    0.000    0.108    0.022 ops.py:970(fast_apply)
        5    0.000    0.000    0.000    0.000 ops.py:986(get_splitter)
      222    0.000    0.000    0.000    0.000 optimizer.py:27(__init__)
    45/13    0.000    0.000    0.003    0.000 os.py:280(walk)
      201    0.001    0.000    0.002    0.000 os.py:670(__getitem__)
      201    0.000    0.000    0.000    0.000 os.py:734(check_str)
      201    0.000    0.000    0.001    0.000 os.py:740(encodekey)
      198    0.004    0.000    0.006    0.000 os.py:766(getenv)
      156    0.022    0.000    0.325    0.002 pairwise.py:202(euclidean_distances)
      156    0.001    0.000    0.001    0.000 pairwise.py:40(_return_float_dtype)
      156    0.001    0.000    0.037    0.000 pairwise.py:64(check_pairwise_arrays)
        2    0.000    0.000    0.000    0.000 parse.py:110(_coerce_args)
        1    0.000    0.000    0.000    0.000 parse.py:366(urlparse)
        1    0.000    0.000    0.000    0.000 parse.py:399(_checknetloc)
        1    0.000    0.000    0.000    0.000 parse.py:417(urlsplit)
        2    0.000    0.000    0.000    0.000 parse.py:99(_noop)
      222    0.001    0.000    0.015    0.000 parser.py:1034(parse)
      222    0.001    0.000    0.030    0.000 parser.py:51(__init__)
      222    0.002    0.000    0.009    0.000 parser.py:985(subparse)
      222    0.001    0.000    0.002    0.000 parser.py:995(flush_data)
   450232    1.173    0.000    6.754    0.000 point.py:130(_set_coords)
   545135    4.242    0.000    4.845    0.000 point.py:196(geos_point_from_py)
   545135    0.795    0.000    7.617    0.000 point.py:36(__init__)
       53    0.000    0.000    0.001    0.000 point.py:52(x)
       53    0.000    0.000    0.002    0.000 point.py:57(y)
       52    0.000    0.000    0.000    0.000 polygon.py:131(__init__)
       52    0.000    0.000    0.000    0.000 polygon.py:136(__iter__)
       52    0.000    0.000    0.000    0.000 polygon.py:141(__next__)
      156    0.000    0.000    0.000    0.000 polygon.py:152(__len__)
      394    0.002    0.000    2.428    0.006 polygon.py:220(__init__)
      104    0.000    0.000    0.001    0.000 polygon.py:249(exterior)
       52    0.000    0.000    0.000    0.000 polygon.py:263(interiors)
      156    0.000    0.000    0.001    0.000 polygon.py:32(__init__)
      394    0.006    0.000    2.424    0.006 polygon.py:500(geos_polygon_from_py)
       52    0.000    0.000    0.001    0.000 polygon.py:68(_set_coords)
   355277  280.316    0.001  281.390    0.001 predicates.py:11(__call__)
    96787    0.196    0.000    0.295    0.000 predicates.py:23(__call__)
        2    0.000    0.000    0.000    0.000 random.py:123(seed)
     2472    0.003    0.000    0.004    0.000 random.py:250(_randbelow_with_getrandbits)
     2472    0.003    0.000    0.008    0.000 random.py:285(choice)
        5    0.000    0.000    0.000    0.000 random.py:721(getrandbits)
        2    0.000    0.000    0.000    0.000 random.py:94(__init__)
       25    0.000    0.000    0.000    0.000 range.py:134(_simple_new)
      136    0.001    0.000    0.003    0.000 range.py:153(_data)
       14    0.000    0.000    0.000    0.000 range.py:214(start)
       14    0.000    0.000    0.000    0.000 range.py:237(stop)
       14    0.000    0.000    0.000    0.000 range.py:260(step)
      140    0.000    0.000    0.000    0.000 range.py:320(dtype)
       50    0.000    0.000    0.000    0.000 range.py:324(is_unique)
       20    0.000    0.000    0.000    0.000 range.py:329(is_monotonic_increasing)
      104    0.000    0.000    0.000    0.000 range.py:349(get_loc)
       65    0.000    0.000    0.001    0.000 range.py:393(_shallow_copy)
       83    0.000    0.000    0.002    0.000 range.py:452(equals)
       20    0.000    0.000    0.004    0.000 range.py:626(join)
      572    0.000    0.000    0.001    0.000 range.py:687(__len__)
        1    0.000    0.000    0.000    0.000 range.py:697(__getitem__)
       23    0.000    0.000    0.001    0.000 range.py:86(__new__)
       24    0.000    0.000    0.000    0.000 raster_layers.py:101(<lambda>)
        1    0.000    0.000    0.007    0.007 raster_layers.py:79(__init__)
       15    0.000    0.000    0.002    0.000 re.py:250(compile)
       44    0.000    0.000    0.000    0.000 re.py:270(escape)
       15    0.000    0.000    0.002    0.000 re.py:289(_compile)
       12    0.000    0.000    0.000    0.000 re.py:325(_subx)
      449    0.004    0.000    0.015    0.000 runtime.py:104(new_context)
      449    0.002    0.000    0.005    0.000 runtime.py:197(__init__)
      449    0.000    0.000    0.000    0.000 runtime.py:216(<dictcomp>)
      569    0.000    0.000    0.000    0.000 runtime.py:270(resolve_or_missing)
        4    0.000    0.000    0.000    0.000 runtime.py:296(get_exported)
        4    0.000    0.000    0.000    0.000 runtime.py:298(<dictcomp>)
1398/1050    0.006    0.000    0.062    0.000 runtime.py:311(call)
        6    0.000    0.000    0.000    0.000 runtime.py:709(__init__)
      108    0.001    0.000    0.022    0.000 runtime.py:738(__call__)
      108    0.000    0.000    0.022    0.000 runtime.py:824(_invoke)
  499/495    0.005    0.000    0.059    0.000 series.py:201(__init__)
       53    0.000    0.000    0.012    0.000 series.py:2741(_construct_result)
        4    0.000    0.000    0.002    0.000 series.py:335(_init_dict)
      298    0.000    0.000    0.000    0.000 series.py:381(_constructor)
      376    0.001    0.000    0.001    0.000 series.py:398(_set_axis)
      122    0.005    0.000    0.537    0.004 series.py:4084(apply)
        5    0.000    0.000    0.001    0.000 series.py:4224(_reduce)
      610    0.001    0.000    0.002    0.000 series.py:427(dtype)
      945    0.001    0.000    0.003    0.000 series.py:442(name)
      850    0.002    0.000    0.002    0.000 series.py:492(name)
       21    0.000    0.000    0.000    0.000 series.py:498(values)
      265    0.000    0.000    0.001    0.000 series.py:540(_values)
      300    0.001    0.000    0.004    0.000 series.py:574(array)
      145    0.000    0.000    0.001    0.000 series.py:595(__len__)
      242    0.001    0.000    0.006    0.000 series.py:750(__array__)
      104    0.000    0.000    0.001    0.000 series.py:868(__getitem__)
      104    0.000    0.000    0.001    0.000 series.py:973(_get_value)
        5    0.000    0.000    0.000    0.000 shape_base.py:20(_atleast_1d_dispatcher)
       12    0.000    0.000    0.000    0.000 shape_base.py:208(_arrays_for_stack_dispatcher)
        6    0.000    0.000    0.000    0.000 shape_base.py:219(_vhstack_dispatcher)
        1    0.000    0.000    0.002    0.002 shape_base.py:223(vstack)
        5    0.000    0.000    0.000    0.000 shape_base.py:24(atleast_1d)
        5    0.000    0.000    0.000    0.000 shape_base.py:286(hstack)
        6    0.002    0.000    0.002    0.000 shape_base.py:608(_column_stack_dispatcher)
        6    0.000    0.000    0.002    0.000 shape_base.py:612(column_stack)
      159    0.000    0.000    0.000    0.000 shape_base.py:78(_atleast_2d_dispatcher)
      159    0.001    0.000    0.001    0.000 shape_base.py:82(atleast_2d)
        2    0.000    0.000    0.000    0.000 six.py:180(find_module)
        2    0.000    0.000    0.000    0.000 six.py:194(find_spec)
        5    0.000    0.000    0.001    0.000 sorting.py:496(get_group_index_sorter)
       17    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
       17    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
        1    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
        9    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
      6/3    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        3    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        3    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
        6    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        3    0.000    0.000    0.001    0.000 sre_compile.py:598(_code)
       12    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
     37/3    0.000    0.000    0.000    0.000 sre_compile.py:71(_compile)
        3    0.000    0.000    0.002    0.001 sre_compile.py:759(compile)
       37    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
       47    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
      238    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
      101    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
     43/9    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
        3    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
      174    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
       58    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
      114    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
        6    0.000    0.000    0.000    0.000 sre_parse.py:267(getuntil)
       19    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
       13    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
        3    0.000    0.000    0.000    0.000 sre_parse.py:432(_uniq)
      9/3    0.000    0.000    0.001    0.000 sre_parse.py:435(_parse_sub)
     33/3    0.000    0.000    0.001    0.000 sre_parse.py:493(_parse)
        3    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
       18    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        6    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        3    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
        3    0.000    0.000    0.001    0.000 sre_parse.py:937(parse)
        6    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
     1710    0.002    0.000    0.002    0.000 stringsource:345(__cinit__)
     1710    0.000    0.000    0.000    0.000 stringsource:372(__dealloc__)
      380    0.000    0.000    0.000    0.000 stringsource:518(__getbuffer__)
      190    0.000    0.000    0.000    0.000 stringsource:559(__get__)
     1520    0.001    0.000    0.003    0.000 stringsource:657(memoryview_cwrapper)
     1520    0.000    0.000    0.000    0.000 stringsource:663(memoryview_check)
      190    0.000    0.000    0.000    0.000 stringsource:976(__dealloc__)
      190    0.001    0.000    0.001    0.000 stringsource:999(memoryview_fromslice)
      308    0.001    0.000    0.005    0.000 tempfile.py:105(_sanitize_params)
      309    0.001    0.000    0.002    0.000 tempfile.py:133(rng)
      309    0.002    0.000    0.013    0.000 tempfile.py:144(__next__)
      309    0.001    0.000    0.009    0.000 tempfile.py:147(<listcomp>)
        1    0.000    0.000    0.000    0.000 tempfile.py:150(_candidate_tempdir_list)
        1    0.000    0.000    0.002    0.002 tempfile.py:177(_get_default_tempdir)
      308    0.000    0.000    0.000    0.000 tempfile.py:224(_get_candidate_names)
      308    0.006    0.000    0.175    0.001 tempfile.py:238(_mkstemp_inner)
      308    0.000    0.000    0.002    0.000 tempfile.py:279(gettempdir)
      308    0.001    0.000    0.181    0.001 tempfile.py:295(mkstemp)
      308    0.001    0.000    0.001    0.000 tempfile.py:84(_infer_return_type)
        1    0.000    0.000    0.000    0.000 tiles.txt:1(<module>)
        2    0.000    0.000    0.000    0.000 tiles.txt:5(root)
   808229    0.580    0.000    0.854    0.000 topology.py:16(_validate)
      528    0.006    0.000    0.007    0.000 topology.py:54(__call__)
      360    0.035    0.000    0.036    0.000 topology.py:76(__call__)
        3    0.000    0.000    0.000    0.000 types.py:171(__get__)
        1    0.000    0.000    0.000    0.000 typing.py:768(__instancecheck__)
        1    0.000    0.000    0.000    0.000 typing.py:771(__subclasscheck__)
       10    0.000    0.000    0.000    0.000 typing.py:868(__new__)
     1358    0.004    0.000    0.005    0.000 utilities.py:27(validate_location)
     1264    0.006    0.000    0.023    0.000 utilities.py:341(_camelify)
     1264    0.012    0.000    0.017    0.000 utilities.py:342(<listcomp>)
      208    0.000    0.000    0.000    0.000 utilities.py:347(_parse_size)
      116    0.000    0.000    0.001    0.000 utilities.py:384(camelize)
      344    0.000    0.000    0.000    0.000 utilities.py:394(<genexpr>)
        4    0.000    0.000    0.000    0.000 utilities.py:398(_parse_size)
      158    0.000    0.000    0.001    0.000 utilities.py:471(parse_options)
      158    0.000    0.000    0.001    0.000 utilities.py:473(<dictcomp>)
     1358    0.001    0.000    0.001    0.000 utilities.py:67(<listcomp>)
       52    0.000    0.000    0.007    0.000 utilities.py:70(validate_locations)
       52    0.001    0.000    0.006    0.000 utilities.py:92(<listcomp>)
       52    0.000    0.000    0.000    0.000 utilities.py:98(if_pandas_df_convert_to_numpy)
      224    0.000    0.000    0.001    0.000 utils.py:538(get)
      224    0.001    0.000    0.001    0.000 utils.py:572(__getitem__)
        2    0.000    0.000    0.000    0.000 utils.py:594(__setitem__)
      322    0.001    0.000    0.012    0.000 utils.py:701(htmlsafe_json_dumps)
     2796    0.012    0.000    0.022    0.000 utils.py:79(from_obj)
      861    0.004    0.000    0.005    0.000 uuid.py:132(__init__)
      861    0.001    0.000    0.001    0.000 uuid.py:327(hex)
      861    0.002    0.000    0.008    0.000 uuid.py:780(uuid4)
       10    0.000    0.000    0.003    0.000 validation.py:1276(_check_sample_weight)
      337    0.002    0.000    0.006    0.000 validation.py:187(_num_samples)
      327    0.000    0.000    0.001    0.000 validation.py:397(_ensure_no_complex_data)
      327    0.007    0.000    0.039    0.000 validation.py:404(check_array)
  810/181    0.005    0.000    0.333    0.002 validation.py:59(inner_f)
      327    0.005    0.000    0.019    0.000 validation.py:83(_assert_all_finite)
        5    0.011    0.002    0.019    0.004 validation.py:869(check_random_state)
       52    0.000    0.000    0.013    0.000 vector_layers.py:109(__init__)
      104    0.001    0.000    0.001    0.000 vector_layers.py:16(path_options)
       52    0.000    0.000    0.014    0.000 vector_layers.py:192(__init__)
       52    0.000    0.000    0.007    0.000 vector_layers.py:303(__init__)
     1998    0.002    0.000    0.003    0.000 visitor.py:28(get_visitor)
 1998/222    0.003    0.000    0.052    0.000 visitor.py:35(visit)
 1332/666    0.002    0.000    0.007    0.000 visitor.py:44(generic_visit)
      381    0.001    0.000    0.003    0.000 warnings.py:165(simplefilter)
      381    0.001    0.000    0.002    0.000 warnings.py:181(_add_filter)
      381    0.001    0.000    0.001    0.000 warnings.py:437(__init__)
      381    0.002    0.000    0.002    0.000 warnings.py:458(__enter__)
      381    0.001    0.000    0.001    0.000 warnings.py:477(__exit__)
     1710    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x00007FFCBE8BB810}
     1569    0.003    0.000    0.015    0.000 {built-in method _abc._abc_instancecheck}
  629/474    0.012    0.000    0.012    0.000 {built-in method _abc._abc_subclasscheck}
       22    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        1    0.028    0.028    0.028    0.028 {built-in method _codecs.utf_8_decode}
      394    0.001    0.000    0.001    0.000 {built-in method _ctypes.POINTER}
   191324    0.036    0.000    0.036    0.000 {built-in method _ctypes.byref}
      222    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        3    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
       31    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        3    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        5    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
       31    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        3    0.000    0.000    0.000    0.000 {built-in method _json.encode_basestring_ascii}
        8    0.000    0.000    0.000    0.000 {built-in method _locale.setlocale}
       53    0.002    0.000    0.002    0.000 {built-in method _operator.eq}
        1    0.001    0.001    0.001    0.001 {built-in method _operator.gt}
        8    0.000    0.000    0.000    0.000 {built-in method _operator.index}
        1    0.000    0.000    0.000    0.000 {built-in method _operator.invert}
        3    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
       78    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
       72    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
       11    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        2    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
       11    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
       10    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1143    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
  1648382    1.241    0.000    4.530    0.000 {built-in method builtins.__import__}
      282    0.001    0.000    0.001    0.000 {built-in method builtins.abs}
      184    0.000    0.000    0.001    0.000 {built-in method builtins.all}
      676    0.001    0.000    0.002    0.000 {built-in method builtins.any}
     1355    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
      222    0.040    0.000    0.040    0.000 {built-in method builtins.compile}
    226/1    0.001    0.000  526.941  526.941 {built-in method builtins.exec}
  1695172    0.206    0.000    0.213    0.000 {built-in method builtins.getattr}
  1648382    0.218    0.000    0.218    0.000 {built-in method builtins.globals}
  2464505    0.450    0.000    0.451    0.000 {built-in method builtins.hasattr}
     1959    0.001    0.000    0.001    0.000 {built-in method builtins.hash}
4044291/4044290    0.516    0.000    0.529    0.000 {built-in method builtins.isinstance}
    11084    0.003    0.000    0.003    0.000 {built-in method builtins.issubclass}
     2588    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
1933717/1931557    0.189    0.000    0.194    0.000 {built-in method builtins.len}
  1648382    0.661    0.000    0.661    0.000 {built-in method builtins.locals}
     2698    0.001    0.000    0.001    0.000 {built-in method builtins.max}
      109    0.000    0.000    0.000    0.000 {built-in method builtins.min}
 1405/961    0.002    0.000    0.041    0.000 {built-in method builtins.next}
       82    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       11    0.004    0.000    0.004    0.000 {built-in method builtins.print}
      222    0.001    0.000    0.001    0.000 {built-in method builtins.repr}
     2024    0.001    0.000    0.001    0.000 {built-in method builtins.setattr}
      899    0.001    0.000    0.010    0.000 {built-in method builtins.sorted}
       47    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      875    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        3    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        3    0.001    0.000    0.001    0.000 {built-in method io.open_code}
        5    0.002    0.000    0.002    0.000 {built-in method io.open}
        3    0.000    0.000    0.000    0.000 {built-in method marshal.loads}
     2716    0.000    0.000    0.000    0.000 {built-in method math.isnan}
  3329296    0.693    0.000    0.693    0.000 {built-in method math.sqrt}
      309    0.001    0.000    0.001    0.000 {built-in method nt._getfullpathname}
        3    0.000    0.000    0.000    0.000 {built-in method nt._path_splitroot}
        1    0.000    0.000    0.000    0.000 {built-in method nt.close}
     1687    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        1    0.000    0.000    0.000    0.000 {built-in method nt.getcwd}
      309    0.000    0.000    0.000    0.000 {built-in method nt.getpid}
       11    0.002    0.000    0.002    0.000 {built-in method nt.lstat}
      309    0.140    0.000    0.140    0.000 {built-in method nt.open}
       12    0.001    0.000    0.001    0.000 {built-in method nt.scandir}
       34    0.002    0.000    0.002    0.000 {built-in method nt.stat}
        1    0.000    0.000    0.000    0.000 {built-in method nt.unlink}
      866    0.002    0.000    0.002    0.000 {built-in method nt.urandom}
      302    0.004    0.000    0.004    0.000 {built-in method numpy.arange}
1246535/1246049    1.948    0.000    1.955    0.000 {built-in method numpy.array}
      356    0.007    0.000    0.007    0.000 {built-in method numpy.core._multiarray_umath.c_einsum}
5063/3956    0.016    0.000    0.112    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        8    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
      870    0.017    0.000    0.017    0.000 {built-in method numpy.empty}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
     1540    0.001    0.000    0.001    0.000 {built-in method numpy.geterrobj}
      770    0.001    0.000    0.001    0.000 {built-in method numpy.seterrobj}
      406    0.001    0.000    0.001    0.000 {built-in method numpy.zeros}
        1    4.136    4.136    4.136    4.136 {built-in method pandas._libs.json.loads}
        9    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
      186    0.001    0.000    0.001    0.000 {built-in method pandas._libs.missing.checknull}
        1    0.007    0.007    0.007    0.007 {built-in method pandas._libs.missing.isnaobj}
      195    0.002    0.000    0.008    0.000 {built-in method sklearn.utils._openmp_helpers._openmp_effective_n_threads}
      308    0.000    0.000    0.000    0.000 {built-in method sys.audit}
        8    0.000    0.000    0.000    0.000 {built-in method time.strftime}
       11    0.001    0.000    0.001    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 {function Random.seed at 0x0000020A3DAC9B80}
        5    0.001    0.000    0.001    0.000 {function SeedSequence.generate_state at 0x0000020A3DAA5700}
        1    0.000    0.000    0.000    0.000 {method '__getitem__' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
       63    0.000    0.000    0.000    0.000 {method 'add' of 'pandas._libs.internals.BlockPlacement' objects}
  1242019    0.201    0.000    0.201    0.000 {method 'add' of 'set' objects}
      423    0.001    0.000    0.003    0.000 {method 'all' of 'numpy.generic' objects}
       18    0.000    0.000    0.001    0.000 {method 'all' of 'numpy.ndarray' objects}
      415    0.001    0.000    0.004    0.000 {method 'any' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
  1243985    0.173    0.000    0.173    0.000 {method 'append' of 'list' objects}
      141    0.001    0.000    0.001    0.000 {method 'argmin' of 'numpy.ndarray' objects}
       21    0.001    0.000    0.001    0.000 {method 'argsort' of 'numpy.ndarray' objects}
       54    0.003    0.000    0.003    0.000 {method 'astype' of 'numpy.ndarray' objects}
     2472    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
      112    0.000    0.000    0.000    0.000 {method 'capitalize' of 'str' objects}
       16    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
      141    0.000    0.000    0.009    0.000 {method 'clip' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
      393    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
      253    0.049    0.000    0.049    0.000 {method 'copy' of 'numpy.ndarray' objects}
      861    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
      222    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
      141    0.005    0.000    0.005    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
      222    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      373    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
      666    0.000    0.000    0.003    0.000 {method 'extend' of 'collections.deque' objects}
      139    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       10    0.003    0.000    0.003    0.000 {method 'factorize' of 'pandas._libs.hashtable.Int64HashTable' objects}
      188    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
       23    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
      451    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
     1269    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
       11    0.001    0.000    0.001    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
      144    0.000    0.000    0.000    0.000 {method 'get_loc' of 'pandas._libs.index.IndexEngine' objects}
     4237    0.001    0.000    0.001    0.000 {method 'getrandbits' of '_random.Random' objects}
      222    0.001    0.000    0.001    0.000 {method 'getvalue' of '_io.StringIO' objects}
      444    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      104    0.000    0.000    0.000    0.000 {method 'index' of 'range' objects}
       20    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
      385    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       35    0.000    0.000    0.000    0.000 {method 'is_dir' of 'nt.DirEntry' objects}
       12    0.000    0.000    0.000    0.000 {method 'isalpha' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
     6512    0.001    0.000    0.001    0.000 {method 'islower' of 'str' objects}
    11550    0.001    0.000    0.001    0.000 {method 'isupper' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
      422    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
    98576    0.049    0.000    0.049    0.000 {method 'items' of 'dict' objects}
4110/3146    0.004    0.000    0.063    0.000 {method 'join' of 'str' objects}
   663561    0.046    0.000    0.046    0.000 {method 'keys' of 'dict' objects}
     7870    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     1585    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
      916    0.013    0.000    0.013    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
      111    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
       71    0.005    0.000    0.005    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
     5663    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      666    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
      143    0.011    0.000    0.014    0.000 {method 'randint' of 'numpy.random.mtrand.RandomState' objects}
      141    0.002    0.000    0.002    0.000 {method 'random_sample' of 'numpy.random.mtrand.RandomState' objects}
       40    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        5    0.001    0.000    0.001    0.000 {method 'read' of '_io.BufferedReader' objects}
       16    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}
        1    0.136    0.136    0.164    0.164 {method 'read' of '_io.TextIOWrapper' objects}
     5346    0.099    0.000    0.099    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}
      381    0.001    0.000    0.001    0.000 {method 'remove' of 'list' objects}
  1242025    0.156    0.000    0.156    0.000 {method 'remove' of 'set' objects}
    12448    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
       16    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
      588    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      351    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       22    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
      141    0.001    0.000    0.001    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       62    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
      222    0.002    0.000    0.002    0.000 {method 'split' of 're.Pattern' objects}
      445    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
      984    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
       38    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
      214    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      234    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
     1475    0.002    0.000    0.017    0.000 {method 'sum' of 'numpy.ndarray' objects}
      236    0.005    0.000    0.005    0.000 {method 'take' of 'numpy.ndarray' objects}
       44    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        9    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       30    0.002    0.000    0.002    0.000 {method 'unique' of 'pandas._libs.hashtable.PyObjectHashTable' objects}
     2060    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
  2484253    0.348    0.000    0.348    0.000 {method 'upper' of 'str' objects}
      667    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'write' of '_io.BufferedWriter' objects}
     7770    0.001    0.000    0.001    0.000 {method 'write' of '_io.StringIO' objects}
      247    0.001    0.000    0.001    0.000 {pandas._libs.algos.ensure_int64}
       81    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
      137    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        5    0.001    0.000    0.001    0.000 {pandas._libs.algos.groupsort_indexer}
       17    0.002    0.000    0.002    0.000 {pandas._libs.algos.take_1d_int64_int64}
        5    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
       57    0.002    0.000    0.002    0.000 {pandas._libs.algos.take_2d_axis0_int32_int32}
        1    0.001    0.001    0.001    0.001 {pandas._libs.algos.take_2d_axis0_int64_int64}
        1    0.002    0.002    0.002    0.002 {pandas._libs.algos.take_2d_axis0_object_object}
       62    0.006    0.000    0.006    0.000 {pandas._libs.algos.take_2d_axis1_int64_int64}
       64    0.096    0.002    0.096    0.002 {pandas._libs.algos.take_2d_axis1_object_object}
       16    0.000    0.000    0.000    0.000 {pandas._libs.internals.get_blkno_placements}
       15    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.astype_intsafe}
       41    0.001    0.000    0.002    0.000 {pandas._libs.lib.clean_index_list}
        1    0.144    0.144    0.144    0.144 {pandas._libs.lib.dicts_to_array}
        1    0.130    0.130    0.500    0.500 {pandas._libs.lib.fast_unique_multiple_list_gen}
        5    0.001    0.000    0.001    0.000 {pandas._libs.lib.generate_slices}
       12    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
      171    0.148    0.001    0.149    0.001 {pandas._libs.lib.infer_dtype}
       65    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
      549    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
      336    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
      191    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
     1036    0.004    0.000    0.010    0.000 {pandas._libs.lib.is_list_like}
      946    0.001    0.000    0.001    0.000 {pandas._libs.lib.is_scalar}
      453    0.003    0.000    0.003    0.000 {pandas._libs.lib.item_from_zerodim}
      122    0.244    0.002    0.462    0.004 {pandas._libs.lib.map_infer}
        8    0.000    0.000    0.001    0.000 {pandas._libs.lib.maybe_convert_objects}
        5    0.002    0.000    0.106    0.021 {pandas._libs.reduction.apply_frame_axis0}
        4    0.002    0.000    0.007    0.002 {pandas._libs.tslib.array_with_unit_to_datetime}
      312    0.000    0.000    0.000    0.000 {shapely.speedups._speedups.coordseq_iter}
      446    0.104    0.000    2.417    0.005 {shapely.speedups._speedups.geos_linearring_from_py}
  1241973    8.266    0.000   14.870    0.000 {shapely.speedups._speedups.geos_linestring_from_py}


