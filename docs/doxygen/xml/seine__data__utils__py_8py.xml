<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="seine__data__utils__py_8py" kind="file" language="Python">
    <compoundname>seine_data_utils_py.py</compoundname>
    <innerclass refid="classseine__data__utils__py_1_1_point" prot="public">seine_data_utils_py::Point</innerclass>
    <innerclass refid="classseine__data__utils__py_1_1_segment" prot="public">seine_data_utils_py::Segment</innerclass>
    <innerclass refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" prot="public">seine_data_utils_py::Segment::DansLeSegmentNotError</innerclass>
    <innerclass refid="classseine__data__utils__py_1_1_frontiere" prot="public">seine_data_utils_py::Frontiere</innerclass>
    <innerclass refid="classseine__data__utils__py_1_1_frontiere_1_1_hors_de_la_frontiere_error" prot="public">seine_data_utils_py::Frontiere::HorsDeLaFrontiereError</innerclass>
    <innerclass refid="classseine__data__utils__py_1_1_frontiere_1_1_dans_la_frontiere_not_error" prot="public">seine_data_utils_py::Frontiere::DansLaFrontiereNotError</innerclass>
    <innernamespace refid="namespaceseine__data__utils__py">seine_data_utils_py</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceseine__data__utils__py" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>numba<sp/>import<sp/>jit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>numba.experimental<sp/>import<sp/>jitclass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>import<sp/>numba<sp/>as<sp/>nb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pas<sp/>besoin<sp/>de<sp/>ça<sp/>si<sp/>utilisé<sp/>comme<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pprint</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;On<sp/>va<sp/>utiliser<sp/>des<sp/>expressions<sp/>régulières<sp/>pour<sp/>récupérer</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">les<sp/>coordonnées<sp/>des<sp/>points<sp/>sur<sp/>la<sp/>Seine<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">https://regex101.com/r/4Dnyfh/1</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">FILE_PATH<sp/>=<sp/>Path(__file__).resolve()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">BASE_DIR<sp/>=<sp/>FILE_PATH.parent.parent.parent.parent</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">REGEX_COORDINATES<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceseine__data__utils__py_1a03f17ccf4dd04cf0088bd74e06393e43" kindref="member">get_KML_data</ref>(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(BASE_DIR/kml_filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>file:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seine_KML</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceseine__data__utils__py_1aca515e542513af5c4deddb8b4c02f761" kindref="member">get_coords</ref>(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>coordonnées<sp/>des<sp/>points<sp/>décrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ligne<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seine_KML:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;liste_coordonnees:<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceseine__data__utils__py_1af043a9063f8ac94fb434df66a1212fc3" kindref="member">calcul_droites</ref>(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>a<sp/>obtenu<sp/>toutes<sp/>les<sp/>coordonnees<sp/>des<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>maintenant<sp/>tracer<sp/>des<sp/>droites<sp/>entre<sp/>ces<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_droites_Seine:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_droites_Marne:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Seine.append((a,b))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord_1,<sp/>no_coord_2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord_1]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord_2]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Marne.append((a,b))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;liste_droites_Seine<sp/>:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;liste_droites_Marne<sp/>:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Marne)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>liste_droites_Seine,<sp/>liste_droites_Marne</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#<sp/>point_spec<sp/>=<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>(&apos;x&apos;,<sp/>nb.float64),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>(&apos;y&apos;,<sp/>nb.float64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@jitclass(point_spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classseine__data__utils__py_1_1_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_point" kindref="compound">Point</ref>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_point_1a1ea8ae7da0cdeaa565bbd53de905c1b6" kindref="member">__init__</ref>(self,<sp/>long:<sp/>float,<sp/>lat:<sp/>float)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_point_1af6c1f0da50a7cf15010dd8618abff3f7" kindref="member">x</ref>x<sp/>=<sp/>long</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_point_1a1a71dcd70db2970b873583ca8e1fdd12" kindref="member">y</ref>y<sp/>=<sp/>lat</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_point_1ab0df154d6ed6a5e61f87525b97bac69c" kindref="member">__repr__</ref>(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;Point({self.x:2.5f},<sp/>{self.y:2.5f})&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_point_1aaae3204cd61db8ded6622bd89742d17b" kindref="member">plot</ref>(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(self.<ref refid="classseine__data__utils__py_1_1_point_1af6c1f0da50a7cf15010dd8618abff3f7" kindref="member">x</ref>x,<sp/>self.<ref refid="classseine__data__utils__py_1_1_point_1a1a71dcd70db2970b873583ca8e1fdd12" kindref="member">y</ref>y,<sp/>marker=</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classseine__data__utils__py_1_1_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment" kindref="compound">Segment</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1a9f4bf7002aa1ed19fed8725b688802ac" kindref="member">__init__</ref>(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1af3a2a80a51d11ffc63593527d20aa5d3" kindref="member">point_gauche</ref>point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1aa415770ef02f825956fd4bd86b358008" kindref="member">point_droit</ref>point_droit<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1af3a2a80a51d11ffc63593527d20aa5d3" kindref="member">point_gauche</ref>point_gauche<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1aa415770ef02f825956fd4bd86b358008" kindref="member">point_droit</ref>point_droit<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1a2bd403ef3fc19bef6bf21403bdab70b7" kindref="member">b</ref>b<sp/>=<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1ae34cf1552f350ef7910b565f1eb72c0f" kindref="member">eq_droite</ref>eq_droite()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1ae34cf1552f350ef7910b565f1eb72c0f" kindref="member">eq_droite</ref>(self)<sp/>-&gt;<sp/>Tuple[float]:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Trouve<sp/>l&apos;équation<sp/>de<sp/>la<sp/>droite<sp/>porteuse<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Renvoie<sp/>(a,<sp/>b)<sp/>avec<sp/>y<sp/>=<sp/>a<sp/>*<sp/>x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1af3a2a80a51d11ffc63593527d20aa5d3" kindref="member">point_gauche</ref>point_gauche.x,<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1af3a2a80a51d11ffc63593527d20aa5d3" kindref="member">point_gauche</ref>point_gauche.y</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1aa415770ef02f825956fd4bd86b358008" kindref="member">point_droit</ref>point_droit.x,<sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1aa415770ef02f825956fd4bd86b358008" kindref="member">point_droit</ref>point_droit.y</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" kindref="compound">DansLeSegmentNotError</ref>(Exception):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error_1a55eaf1b0c20c50310bd65c09cee1a1e3" kindref="member">__init__</ref>(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error_1ac43503c10d2ace5734f4f409b4dd68c1" kindref="member">res</ref>res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1a0b3fdeb7dd84b2f3aca22f291665f7bc" kindref="member">en_dessous</ref>(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Détermine<sp/>si<sp/>le<sp/>segment<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donné</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_x<sp/>=<sp/>min(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi_x<sp/>=<sp/>max(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>point.x<sp/>&lt;<sp/>mini_x<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>maxi_x<sp/>&lt;<sp/>point.x:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>le<sp/>point<sp/>est<sp/>en-dehors<sp/>des<sp/>bornes<sp/>du<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>raise<sp/>self.HorsDuSegmentError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>point.y<sp/>&gt;<sp/>self.a<sp/>*<sp/>point.x<sp/>+<sp/>self.b:<sp/></highlight><highlight class="comment">#<sp/>le<sp/>point<sp/>est<sp/>au-dessus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" kindref="compound">Segment.DansLeSegmentNotError</ref>(1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" kindref="compound">Segment.DansLeSegmentNotError</ref>(0)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1abad98142329e5e981360f55f218a2fbc" kindref="member">__repr__</ref>(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;Segment<sp/>entre<sp/>{self.point_gauche}<sp/>et<sp/>{self.point_droit}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_segment_1a65510b9a296a2f8917d030ad16f973d9" kindref="member">plot</ref>(self,<sp/>couleur=&quot;darkblue&quot;):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/></highlight><highlight class="stringliteral">&quot;.-&quot;</highlight><highlight class="normal">,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_not_in_frontiere():</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_dans_la_frontiere():</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classseine__data__utils__py_1_1_frontiere" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1a6e7397fe71837fd0650b417a240138ca" kindref="member">__init__</ref>(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classseine__data__utils__py_1_1_frontiere_1_1_hors_de_la_frontiere_error" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1_1_hors_de_la_frontiere_error" kindref="compound">HorsDeLaFrontiereError</ref>(Exception):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classseine__data__utils__py_1_1_frontiere_1_1_dans_la_frontiere_not_error" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1_1_dans_la_frontiere_not_error" kindref="compound">DansLaFrontiereNotError</ref>(Exception):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1_1_dans_la_frontiere_not_error_1a6de4ed40cd11d70eea1f8281dd567782" kindref="member">__init__</ref>(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1a0580ca2740477b6c39cdb5ec62949926" kindref="member">en_dessous</ref>(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Détermine<sp/>si<sp/>la<sp/>frontière<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donné</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>frontière</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>segment<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classseine__data__utils__py_1_1_frontiere_1a44aa87f1387132303023aebac8348a5c" kindref="member">liste_segments</ref>liste_segments:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classseine__data__utils__py_1_1_segment_1_1_dans_le_segment_not_error" kindref="compound">Segment.DansLeSegmentNotError</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e.res</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>_dans_la_frontiere()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>raise<sp/>self.DansLaFrontiereNotError(e.res)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>_not_in_frontiere()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>self.<ref refid="classseine__data__utils__py_1_1_frontiere_1_1_hors_de_la_frontiere_error" kindref="compound">HorsDeLaFrontiereError</ref>HorsDeLaFrontiereError</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classseine__data__utils__py_1_1_frontiere_1a44aa87f1387132303023aebac8348a5c" kindref="member">liste_segments</ref>liste_segments:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classseine__data__utils__py_1_1_frontiere_1a57091e6e90fd4d8993887dda683ab505" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;Frontière<sp/>de<sp/>{self.liste_segments[0]}<sp/>à<sp/>{self.liste_segments[-1]}&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceseine__data__utils__py_1a903d42f6fbfa65c2be4ca663bb932caf" kindref="member">get_frontieres_utiles</ref>():</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>récupère<sp/>les<sp/>coordonnées</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/><ref refid="namespaceseine__data__utils__py_1aca515e542513af5c4deddb8b4c02f761" kindref="member">get_coords</ref>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>crée<sp/>les<sp/>objects<sp/>points<sp/>associés</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>p:<ref refid="classseine__data__utils__py_1_1_point" kindref="compound">Point</ref>(*p),<sp/>liste_coordonnees))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>ensuite<sp/>créer<sp/>les<sp/>bons<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(<ref refid="classseine__data__utils__py_1_1_segment" kindref="compound">Segment</ref>(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord_1,<sp/>no_coord_2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Marne.append(<ref refid="classseine__data__utils__py_1_1_segment" kindref="compound">Segment</ref>(liste_points[no_coord_1],<sp/>liste_points[no_coord_2]))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_frontieres<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[:5]),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[5:15]),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[15:16]),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[16:17]),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[17:31]),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[31:32]),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[32:33]),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[33:34]),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Marne)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>liste_frontieres</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>récupère<sp/>les<sp/>coordonnées</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/><ref refid="namespaceseine__data__utils__py_1aca515e542513af5c4deddb8b4c02f761" kindref="member">get_coords</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>crée<sp/>les<sp/>objects<sp/>points<sp/>associés</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>p:<ref refid="classseine__data__utils__py_1_1_point" kindref="compound">Point</ref>(*p),<sp/>liste_coordonnees))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>pprint.pprint(liste_points)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>ensuite<sp/>créer<sp/>les<sp/>bons<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>droites<sp/>décrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(<ref refid="classseine__data__utils__py_1_1_segment" kindref="compound">Segment</ref>(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_coord_1,<sp/>no_coord_2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Marne.append(<ref refid="classseine__data__utils__py_1_1_segment" kindref="compound">Segment</ref>(liste_points[no_coord_1],<sp/>liste_points[no_coord_2]))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pprint.pprint(liste_segments_Seine)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pprint.pprint(liste_segments_Marne)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>les<sp/>frontières</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>faire<sp/>en<sp/>sorte<sp/>que<sp/>chaque<sp/>frontière<sp/>soit<sp/>dans<sp/>le<sp/>bon<sp/>sens<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>liste_segments_Marne<sp/>+<sp/>liste_segments_Seine:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot()</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.axis(&quot;equal&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.xlim(2.2,<sp/>2.45)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.gca().set_aspect(</highlight><highlight class="stringliteral">&apos;equal&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>des<sp/>frontières</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[:5])</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_ouest.plot(</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Marne)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>frontiere_Marne.plot(</highlight><highlight class="stringliteral">&quot;violet&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[15:16]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[16:17]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;darkred&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[17:31]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[31:32]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[32:33]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseine__data__utils__py_1_1_frontiere" kindref="compound">Frontiere</ref>(liste_segments_Seine[33:34]).<ref refid="classseine__data__utils__py_1_1_frontiere_1a4e3db34d779cb829d8da49d8b4211710" kindref="member">plot</ref>(</highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.gca().set_aspect(</highlight><highlight class="stringliteral">&apos;equal&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;piche&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/><ref refid="namespaceseine__data__utils__py_1aca515e542513af5c4deddb8b4c02f761" kindref="member">get_coords</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/>=<sp/><ref refid="namespaceseine__data__utils__py_1af043a9063f8ac94fb434df66a1212fc3" kindref="member">calcul_droites</ref>(liste_coordonnees)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>trace<sp/>tout<sp/>ça<sp/>pour<sp/>vérifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(2.2,<sp/>2.45,<sp/>100)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a,<sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>linewidth=0.2)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x,<sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>liste_coordonnees:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(x,y,<sp/>color=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">,<sp/>marker=</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.axis(</highlight><highlight class="stringliteral">&quot;equal&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
    </programlisting>
    <location file="src/clusterizer/utils/seine_data_utils_py.py"/>
  </compounddef>
</doxygen>
