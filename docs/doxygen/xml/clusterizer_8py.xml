<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="clusterizer_8py" kind="file" language="Python">
    <compoundname>clusterizer.py</compoundname>
    <innernamespace refid="namespaceclusterizer">clusterizer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceclusterizer" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pprint<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pprint</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>geopandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>gpd</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>folium</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Pool,<sp/>Process,<sp/>Array,<sp/>RawArray</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cProfile</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">sys.path.append(</highlight><highlight class="stringliteral">&quot;../../&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.cluster<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>KMeans,<sp/>MiniBatchKMeans</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>shapely.geometry<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Polygon</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NAF_utils</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>clusterizer_utils</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils.clusterizer_utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>COLUMN_HULLS_NAME,<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>COLUMN_CLUSTER_INDEX_NAME,<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>COLUMN_CLUSTER_SIZE_NAME,<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>COLUMN_CENTROIDS_NAME,<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>COLUMN_DEFAULT_GEOMETRY_NAME,<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>COLUMN_CLUSTER_MASS_NAME</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils.seine_data_utils_py<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Frontiere,<sp/>get_frontieres_utiles,<sp/>Point</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">Clusterise<sp/>en<sp/>utilisant<sp/>l&apos;algorithme<sp/>des<sp/>k-moyennes.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">DEBUG_PLOT<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>pour<sp/>afficher<sp/>les<sp/>points<sp/>et<sp/>fronti√®res<sp/>(debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">f_seine_nord,<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="normal">f_seine_ouest,<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="normal">f_seine_petit_droite,<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="normal">f_seine_petit_gauche,<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="normal">f_seine_central,<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="normal">f_seine_alfort_1_gauche,\</highlight></codeline>
<codeline lineno="43"><highlight class="normal">f_seine_alfort_2_droite,\</highlight></codeline>
<codeline lineno="44"><highlight class="normal">f_seine_alfort_3_gauche,\</highlight></codeline>
<codeline lineno="45"><highlight class="normal">f_marne,\</highlight></codeline>
<codeline lineno="46"><highlight class="normal">=<sp/><ref refid="namespaceseine__data__utils__py_1a903d42f6fbfa65c2be4ca663bb932caf" kindref="member">get_frontieres_utiles</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">@np.vectorize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a1842efc97d44e8e752733c4d063f523a" kindref="member">rapport_a_la_seine</ref>(xy):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>TODO</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>xy:</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>point_etudie<sp/>=<sp/>Point(xy[0],<sp/>xy[1])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_seine_ouest.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_seine_ouest.en_dessous(point_etudie):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_seine_central.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_seine_central.en_dessous(point_etudie)<sp/>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_marne.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_marne.en_dessous(point_etudie)<sp/>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_seine_central.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>f_seine_central.en_dessous(point_etudie):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_seine_alfort_1_gauche.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_seine_alfort_1_gauche.en_dessous(point_etudie):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>f_seine_alfort_2_droite.en_dessous(point_etudie)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>except<sp/>Frontiere.DansLaFrontiereNotError<sp/>as<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>e.res:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f_seine_alfort_2_droite.en_dessous(point_etudie):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Frontiere.HorsDeLaFrontiereError:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_etudie.plot(</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a46c1c161d2d1f3c4da2b499b8b4077d8" kindref="member">process_rapport_a_la_seine</ref>(no_zone:int,<sp/>df:<sp/>pd.DataFrame,<sp/>shared_array:<sp/>Array)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>TODO</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>no_zone:</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>df:</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>shared_array:</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_array[no_zone]<sp/>=<sp/>df[no_zone<sp/>==<sp/><ref refid="namespaceclusterizer_1a1842efc97d44e8e752733c4d063f523a" kindref="member">rapport_a_la_seine</ref>(np.array(df.copy()[</highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">].apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[</highlight><highlight class="stringliteral">&apos;coordinates&apos;</highlight><highlight class="normal">])))].reset_index(drop=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1ada962bb8f1ec417142e11c0ca8cca63a" kindref="member">map_rapport_a_la_seine</ref>(args_tuple:<sp/>Tuple[int,<sp/>pd.DataFrame])<sp/>-&gt;<sp/>pd.DataFrame:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>TODO</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>args_tuple:</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>no_zone,<sp/>df<sp/>=<sp/>args_tuple</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df[no_zone<sp/>==<sp/><ref refid="namespaceclusterizer_1a1842efc97d44e8e752733c4d063f523a" kindref="member">rapport_a_la_seine</ref>(np.array(df.copy()[</highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">].apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[</highlight><highlight class="stringliteral">&apos;coordinates&apos;</highlight><highlight class="normal">])))].reset_index(drop=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1aeec4083b19ab1b2b6b1dece87329556d" kindref="member">nettoyer</ref>(df:<sp/>pd.DataFrame,<sp/>reduce:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>threshold:<sp/>int<sp/>=<sp/>1000,<sp/>column_geometry:<sp/>str<sp/>=<sp/>COLUMN_DEFAULT_GEOMETRY_NAME)<sp/>-&gt;<sp/>pd.DataFrame:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Nettoie<sp/>la<sp/>DataFrame.<sp/>Enl√®ve<sp/>les<sp/>na.</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Si<sp/>sp√©cifi√©,<sp/>ne<sp/>retient<sp/>que<sp/>les<sp/>premi√®res<sp/>donn√©es<sp/>de<sp/>la<sp/>DataFrame.</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>df:<sp/>La<sp/>DataFrame.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>reduce:<sp/>Si<sp/>True,<sp/>ne<sp/>prend<sp/>que<sp/>les<sp/>premi√®res<sp/>donn√©es.</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>threshold:<sp/>Dans<sp/>le<sp/>cas<sp/>o√π<sp/>reduce=True,<sp/>nombre<sp/>de<sp/>donn√©es<sp/>√†<sp/>s√©lectionner.</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>column_geometry:<sp/>A<sp/>sp√©cifier<sp/>si<sp/>la<sp/>colonne<sp/>contenant<sp/>les<sp/>points<sp/>n&apos;est<sp/>pas<sp/>la<sp/>colonne<sp/>par<sp/>d√©faut<sp/>(&quot;geometry&quot;)</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>Une<sp/>DataFrame<sp/>nettoy√©e.</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reduce<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>df.size<sp/>&gt;=<sp/>threshold:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>df[:threshold]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df.dropna(subset=[column_geometry]).reset_index(drop=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a3af79889960331fc4392936526bc8ad6" kindref="member">clusterize</ref>(df:<sp/>pd.DataFrame,<sp/>k:<sp/>int,<sp/>column_geometry:<sp/>str<sp/>=<sp/>COLUMN_DEFAULT_GEOMETRY_NAME,<sp/>is_dict:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>weight:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/>-&gt;<sp/>Tuple[pd.DataFrame,<sp/>pd.DataFrame]:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Clusterise<sp/>√†<sp/>l&apos;aide<sp/>de<sp/>l&apos;algorithme<sp/>des<sp/>k-moyennes.<sp/>Attention,<sp/>fait<sp/>du<sp/>en-place.</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>df:<sp/>La<sp/>(Geo)DataFrame<sp/>contenant<sp/>les<sp/>points<sp/>√†<sp/>clusteriser.</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>k:<sp/>Le<sp/>nombre<sp/>de<sp/>clusters<sp/>√†<sp/>calculer.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>column_geometry:<sp/>A<sp/>sp√©cifier<sp/>si<sp/>la<sp/>colonne<sp/>contenant<sp/>les<sp/>points<sp/>n&apos;est<sp/>pas<sp/>la<sp/>colonne<sp/>par<sp/>d√©faut<sp/>(&quot;geometry&quot;)</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>is_dict:<sp/>Indiquer<sp/>True<sp/>si<sp/>jamais<sp/>la<sp/>colonne<sp/>contenant<sp/>les<sp/>points<sp/>ne<sp/>contient<sp/>pas<sp/>d&apos;objets</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>shapely.geometry.Points,<sp/>mais<sp/>un<sp/>dictionnaire<sp/>(en<sp/>g√©n√©ral,<sp/>lorsque<sp/>le<sp/>fichier<sp/>provient<sp/>d&apos;un<sp/>GeoJSON)</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>Deux<sp/>GeoDataFrame.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>Une<sp/>premi√®re<sp/>GeoDataFrame<sp/>entr√©e<sp/>contenant<sp/>une<sp/>colonne<sp/>en<sp/>plus<sp/>(&quot;cluster&quot;)<sp/>:<sp/>celle-ci<sp/>permet<sp/>de<sp/>savoir<sp/>pour<sp/>chaque</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>point<sp/>le<sp/>num√©ro<sp/>du<sp/>cluster<sp/>qui<sp/>lui<sp/>a<sp/>√©t√©<sp/>affect√©.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>Une<sp/>deuxi√®me<sp/>GeoDataFrame<sp/>contenant<sp/>les<sp/>informations<sp/>d√©taill√©es<sp/>de<sp/>chaque<sp/>cluster<sp/>:<sp/>centre<sp/>de<sp/>masse<sp/>(&quot;centroids&quot;),</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>enveloppe<sp/>convexe<sp/>(&quot;hulls&quot;)<sp/>et<sp/>nombre<sp/>d&apos;√©tablissements<sp/>dans<sp/>le<sp/>cluster<sp/>(&quot;taille&quot;)</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Commen√ßons<sp/>par<sp/>faire<sp/>le<sp/>clustering<sp/>et<sp/>r√©cup√©rer<sp/>les<sp/>centres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>kmeans<sp/>=<sp/>KMeans(n_clusters=k,<sp/>random_state=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>mbk<sp/>=<sp/>MiniBatchKMeans(n_clusters=k,<sp/>random_state=0,<sp/>batch_size=2048)<sp/><sp/></highlight><highlight class="comment">#<sp/>√ßa<sp/>va<sp/>plus<sp/>vite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ceci<sp/>contient<sp/>des<sp/>coordonn√©es<sp/>(x,<sp/>y)<sp/>des<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1a4aab52450ec0e5c333c03f2cfa4694e2" kindref="member">clusterizer_utils.get_coords_from_object</ref>(df,<sp/>column_geometry,<sp/>is_dict)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(X)<sp/>&lt;<sp/>1:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Table<sp/>vide&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Y<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1affa7c2c6862dc269e97b6b0bfa95a4da" kindref="member">clusterizer_utils.vectorized_calculer_poids_code_NAF</ref>(df[</highlight><highlight class="stringliteral">&quot;apet700&quot;</highlight><highlight class="normal">])<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>weight<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>On<sp/>ajoute<sp/>√†<sp/>la<sp/>DataFrame<sp/>originale<sp/>les<sp/>num√©ros<sp/>de<sp/>cluster<sp/>pour<sp/>chaque<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>df_point_cluster<sp/>=<sp/>gpd.GeoDataFrame(mbk.fit_predict(X,<sp/>sample_weight=Y),<sp/>columns=[COLUMN_CLUSTER_INDEX_NAME],<sp/>dtype=int)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>df.join(df_point_cluster)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>La<sp/>DataFrame<sp/>&quot;df_infos_clusters&quot;<sp/>associe<sp/>√†<sp/>chaque<sp/>num√©ro<sp/>de<sp/>cluster<sp/>les<sp/>informations<sp/>correspondantes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>En<sp/>d√©tails<sp/>:<sp/>une<sp/>colonne<sp/>&quot;centroids&quot;<sp/>(centres<sp/>de<sp/>masse),<sp/>une<sp/>colonne<sp/>&quot;hulls&quot;<sp/>(enveloppes<sp/>convexes),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>une<sp/>colonne<sp/>&quot;taille&quot;<sp/>(nombre<sp/>d&apos;√©tablissements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>df_infos_clusters<sp/>=<sp/>pd.DataFrame(gpd.points_from_xy(mbk.cluster_centers_[:,<sp/>0],</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbk.cluster_centers_[:,<sp/>1]),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns=[COLUMN_CENTROIDS_NAME]</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>df_infos_clusters<sp/>=<sp/>df_infos_clusters.join(<ref refid="namespaceclusterizer__utils_1a1a09a2a4d0cb4435e9341da24dde35df" kindref="member">clusterizer_utils.get_infos_clusters_taille</ref>(df))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>df_infos_clusters<sp/>=<sp/>df_infos_clusters.join(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer__utils_1a67d3497ffce20f00b8670186e255a548" kindref="member">clusterizer_utils.get_infos_clusters_enveloppes_convexes</ref>(k,<sp/>df,<sp/>column_geometry,<sp/>is_dict))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>df_infos_clusters<sp/>=<sp/>df_infos_clusters.join(<ref refid="namespaceclusterizer__utils_1a5788fa8785e88a80e5a1e584c04ec05b" kindref="member">clusterizer_utils.get_infos_clusters_poids</ref>(df,<sp/></highlight><highlight class="stringliteral">&quot;apet700&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df,<sp/>df_infos_clusters</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a3347b353b00237f8b17fd025f019c50f" kindref="member">save_to_map</ref>(df_clusters:<sp/>pd.DataFrame,<sp/>map:<sp/>folium.folium.Map<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/>-&gt;<sp/>folium.folium.Map:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Sauvegarde<sp/>les<sp/>informations<sp/>des<sp/>clusters<sp/>dans<sp/>une<sp/>carte<sp/>Leaflet.</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Retourne<sp/>la<sp/>carte</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>df_clusters:<sp/>La<sp/>DataFrame<sp/>contenant<sp/>les<sp/>informations<sp/>de<sp/>chaque<sp/>cluster</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>(cf.<sp/>deuxi√®me<sp/>sortie<sp/>de<sp/>la<sp/>fonction<sp/>clusterize)</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>map:<sp/>la<sp/>carte<sp/>√†<sp/>utiliser</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>si<sp/>un<sp/>param√®tre<sp/>est<sp/>sp√©cifi√©<sp/>:<sp/>r√©ecrit<sp/>par<sp/>dessus.</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>si<sp/>rien<sp/>n&apos;est<sp/>sp√©cifi√©,<sp/>g√©n√®re<sp/>une<sp/>nouvelle<sp/>carte</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return<sp/>une<sp/>carte<sp/>compl√©t√©e.</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>map<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/>folium.Map(location=[48.844952,<sp/>2.339193],</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoom_start=10,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles=</highlight><highlight class="stringliteral">&quot;Stamen<sp/>Terrain&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>couleurs<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;darkslateblue&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;orange&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;darkred&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;purple&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;deeppink&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;green&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;darkgreen&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;maroon&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;darkblue&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;chocolate&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;red&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>centroids<sp/>=<sp/>df_clusters.loc[:,<sp/>COLUMN_CENTROIDS_NAME]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>hulls<sp/>=<sp/>df_clusters.loc[:,<sp/>COLUMN_HULLS_NAME]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes<sp/>=<sp/>df_clusters.loc[:,<sp/>COLUMN_CLUSTER_SIZE_NAME]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>poids<sp/>=<sp/>df_clusters.loc[:,<sp/>COLUMN_CLUSTER_MASS_NAME]</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(centroids):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;Centre<sp/>de<sp/>masse<sp/>du<sp/>cluster<sp/>{k}<sp/>:<sp/>{sizes[k]}<sp/>√©tablissements.<sp/>Poids<sp/>:<sp/>{poids[k]}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folium.CircleMarker(location=[point.y,<sp/>point.x],</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popup=title,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius=1</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>icon=folium.Icon(color=couleurs[k<sp/>%<sp/>len(couleurs)],<sp/>icon=&apos;info-sign&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).add_to(map)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>polygon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(hulls):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;Cluster<sp/>{k}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(polygon)<sp/>==<sp/>Polygon:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Notre<sp/>cluster<sp/>a<sp/>plus<sp/>de<sp/>trois<sp/>points<sp/>(autrement,<sp/>le<sp/>type<sp/>serait<sp/>Point<sp/>ou<sp/>LineString)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Donc<sp/>c&apos;est<sp/>utile<sp/>d&apos;afficher<sp/>l&apos;enveloppe<sp/>convexe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polygon<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1ab8828a4ec46c57e4c2fbcea7c314bb38" kindref="member">clusterizer_utils.swap_xy</ref>(polygon)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>polygon.exterior.coords</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folium.Polygon(locations=coords,<sp/>popup=title,<sp/>color=couleurs[k<sp/>%<sp/>len(couleurs)]).add_to(map)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>map.get_root().html.add_child(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>folium.Element(str(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;title&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(hulls))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>clusters&lt;/title&gt;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a786e8ab3d593d24c6ddf8cdb68f93d2b" kindref="member">test_geojson</ref>():</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Fonction<sp/>interne<sp/>(utilis√©e<sp/>pour<sp/>v√©rifier<sp/>le<sp/>bon<sp/>fonctionnement<sp/>de<sp/>la<sp/>clusterisation).</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceclusterizer_1aeec4083b19ab1b2b6b1dece87329556d" kindref="member">nettoyer</ref>(gpd.read_file(</highlight><highlight class="stringliteral">&quot;../../essais/gis/input/reducted.geojson&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>df,<sp/>df_clusters<sp/>=<sp/><ref refid="namespaceclusterizer_1a3af79889960331fc4392936526bc8ad6" kindref="member">clusterize</ref>(df,<sp/>10,<sp/>is_dict=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer_1a3347b353b00237f8b17fd025f019c50f" kindref="member">save_to_map</ref>(df_clusters).save(</highlight><highlight class="stringliteral">&quot;output/INSERT_NAME.html&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a1d9da37ce74295e212c2458159132e1a" kindref="member">calcule_nb_clusters_par_zone</ref>(liste_df,<sp/>nb_clusters):</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>TODO</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>liste_df:</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>nb_clusters:</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>poids_par_zone:<sp/>np.ndarray<sp/>=<sp/>np.zeros(len(liste_df))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(liste_df)):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poids_par_zone[i]<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1aba2719bff914168ef7fd424000278568" kindref="member">clusterizer_utils.calculer_poids_cluster</ref>(liste_df[i],<sp/></highlight><highlight class="stringliteral">&quot;apet700&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>poids_total<sp/>=<sp/>np.sum(poids_par_zone)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_par_zone<sp/>=<sp/>np.rint((poids_par_zone<sp/>/<sp/>poids_total<sp/>*<sp/>nb_clusters)).astype(int)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_par_zone<sp/>=<sp/>np.maximum(nb_par_zone,<sp/>np.ones(len(liste_df),<sp/>dtype=int))<sp/><sp/></highlight><highlight class="comment">#<sp/>il<sp/>faut<sp/>au<sp/>moins<sp/>un<sp/>cluster<sp/>par<sp/>zone<sp/>consid√©r√©e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_par_zone</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a3baf2ddde23e317d27bb6e1234a4a061" kindref="member">main_json</ref>(rayon:<sp/>int<sp/>=<sp/>8,<sp/>secteur_NAF:<sp/>List[str]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>nb_clusters:<sp/>int<sp/>=<sp/>50,<sp/>adresse_map:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output/clusterized_map_seine.html&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold:<sp/>int<sp/>=<sp/>1000)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Fonction<sp/>principale<sp/>√†<sp/>ex√©cuter<sp/>pour<sp/>successivement<sp/>ouvrir<sp/>la<sp/>DataFrame<sp/>contenant<sp/>les<sp/>donn√©es,</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>nettoyer<sp/>la<sp/>DataFrame,<sp/>filtrer<sp/>par<sp/>secteurs<sp/>NAF,<sp/>ne<sp/>garder<sp/>que<sp/>les<sp/>magasins<sp/>proche<sp/>du<sp/>centre<sp/>de<sp/>Paris,</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>s√©parer<sp/>par<sp/>la<sp/>Seine,<sp/>clusteriser<sp/>et<sp/>sauvegarder<sp/>dans<sp/>une<sp/>carte.</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>La<sp/>r√©partition<sp/>entre<sp/>les<sp/>secteurs<sp/>de<sp/>la<sp/>Seine<sp/>est<sp/>calcul√©e<sp/>automatiquement.</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>rayon:<sp/>le<sp/>rayon<sp/>(√†<sp/>partir<sp/>du<sp/>centre<sp/>de<sp/>Paris).</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>secteur_NAF:<sp/>les<sp/>secteurs<sp/>NAF<sp/>√†<sp/>s√©lectionner.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>nb_clusters:<sp/>le<sp/>nombre<sp/>de<sp/>clusters<sp/>√†<sp/>calculer.</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>adresse_map:<sp/>l&apos;adresse<sp/>de<sp/>la<sp/>carte<sp/>en<sp/>sortie.</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>reduce:<sp/>mettre<sp/>:code:`True`<sp/>pour<sp/>n&apos;utiliser<sp/>qu&apos;une<sp/>version<sp/>all√©g√©e<sp/>des<sp/>donn√©es<sp/>(plus<sp/>rapide).</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>threshold:<sp/>nombre<sp/>de<sp/>donn√©es<sp/>utilis√©es<sp/>si<sp/>reduce=<sp/>:code:`True`<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>:code:`None`<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Ouverture<sp/>de<sp/>la<sp/>DataFrame...&quot;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceclusterizer_1aeec4083b19ab1b2b6b1dece87329556d" kindref="member">nettoyer</ref>(pd.read_json(</highlight><highlight class="stringliteral">&quot;../../data/base_sirene_shortened.json&quot;</highlight><highlight class="normal">),<sp/>reduce=reduce,<sp/>threshold=threshold)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>secteur_NAF<sp/>!=<sp/>[</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">]<sp/>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_section<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>secteur<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>secteur_NAF<sp/>:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_section<sp/>=<sp/>list_section<sp/>+<sp/><ref refid="namespace_n_a_f__utils_1a1fe02847c67bcc048c209dbc79ac0880" kindref="member">NAF_utils.get_NAFs_by_section</ref>(secteur).tolist()</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespace_n_a_f__utils_1a0e7dd8fd0c6ec68d47f461d7e8819da2" kindref="member">NAF_utils.filter_by_naf</ref>(df,<sp/>list_section,<sp/></highlight><highlight class="stringliteral">&quot;apet700&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t2-t1:2.3f}<sp/>s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;On<sp/>ne<sp/>garde<sp/>que<sp/>les<sp/>donn√©es<sp/>du<sp/>centre...&quot;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1ae02c5cdf4a0f5c7987cb6eb76575b39d" kindref="member">clusterizer_utils.filter_nearby_paris</ref>(df,<sp/>radius=rayon,<sp/>is_dict=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t2-t1:2.3f}<sp/>s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;On<sp/>s√©pare<sp/>par<sp/>la<sp/>Seine...&quot;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>on<sp/>va<sp/>avoir<sp/>au<sp/>moins<sp/>4<sp/>zones:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rive<sp/>Gauche,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rive<sp/>Droite,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Maisons-Alfort,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Courbevoie-Asni√®res</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_zones<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_df<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_zone<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_zones):</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_df.append(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>df[numba_rapport_a_la_seine(np.array(df.copy()[&quot;geometry&quot;].apply(lambda<sp/>x:<sp/>x[&apos;coordinates&apos;])),<sp/>no_zone)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[no_zone<sp/>==<sp/><ref refid="namespaceclusterizer_1a1842efc97d44e8e752733c4d063f523a" kindref="member">rapport_a_la_seine</ref>(np.array(df.copy()[</highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">].apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[</highlight><highlight class="stringliteral">&apos;coordinates&apos;</highlight><highlight class="normal">])))].reset_index(drop=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(liste_df[0].head(5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;\n\n\n&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(liste_df[0].to_numpy())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>liste_df<sp/>=<sp/>RawArray(pd.DataFrame,<sp/>nb_zones)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>liste_processes<sp/>:<sp/>List[Process]<sp/>=<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>i<sp/>in<sp/>range(nb_zones):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>liste_processes.append(Process(target=process_rapport_a_la_seine,<sp/>args=<sp/>(i,<sp/>df,<sp/>liste_df)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>i<sp/>in<sp/>range(nb_zones):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>liste_processes[i].start()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>i<sp/>in<sp/>range(nb_zones):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>liste_processes[i].join()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>with<sp/>Pool(nb_zones)<sp/>as<sp/>p:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>liste_df<sp/>=<sp/>p.map(map_rapport_a_la_seine,<sp/>[(i,<sp/>df)<sp/>for<sp/>i<sp/>in<sp/>range(nb_zones)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t2-t1:2.3f}<sp/>s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Clusterisation...&quot;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>liste_df_clusters<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_clusters_par_zone<sp/>=<sp/><ref refid="namespaceclusterizer_1a1d9da37ce74295e212c2458159132e1a" kindref="member">calcule_nb_clusters_par_zone</ref>(liste_df,<sp/>nb_clusters)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pprint(nb_clusters_par_zone)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_zone<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_zones):</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_df_clusters.append(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer_1a3af79889960331fc4392936526bc8ad6" kindref="member">clusterize</ref>(liste_df[no_zone],<sp/>nb_clusters_par_zone[no_zone],<sp/>is_dict=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>weight=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t2-t1:2.3f}<sp/>s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;G√©n√©ration<sp/>de<sp/>la<sp/>carte<sp/>et<sp/>sauvegarde...&quot;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>map<sp/>=<sp/><ref refid="namespaceclusterizer_1a3347b353b00237f8b17fd025f019c50f" kindref="member">save_to_map</ref>(liste_df_clusters[0][1])</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>no_zone<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>len(liste_df_clusters)):</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/><ref refid="namespaceclusterizer_1a3347b353b00237f8b17fd025f019c50f" kindref="member">save_to_map</ref>(liste_df_clusters[no_zone][1],<sp/>map=map)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>map.save(adresse_map)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;{t2-t1:2.3f}<sp/>s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Termin√©<sp/>!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclusterizer_1a2a47baec99d0af254595a53d0a496c84" kindref="member">test_naf</ref>():</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Fonction<sp/>interne<sp/>(utilis√©e<sp/>pour<sp/>v√©rifier<sp/>le<sp/>bon<sp/>fonctionnement<sp/>du<sp/>filtrage<sp/>par<sp/>NAF).</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>print(<ref refid="namespace_n_a_f__utils_1a1fe02847c67bcc048c209dbc79ac0880" kindref="member">NAF_utils.get_NAFs_by_section</ref>(</highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>On<sp/>ex√©cute<sp/>le<sp/>programme<sp/>avec<sp/>la<sp/>base<sp/>SIRENE<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DEBUG_PLOT:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer_1a3baf2ddde23e317d27bb6e1234a4a061" kindref="member">main_json</ref>(reduce=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_nord.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_ouest.plot(couleur=</highlight><highlight class="stringliteral">&quot;purple&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_petit_droite.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_petit_gauche.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_central.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_alfort_1_gauche.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_alfort_2_droite.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_seine_alfort_3_gauche.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_marne.plot(couleur=</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer_1a3baf2ddde23e317d27bb6e1234a4a061" kindref="member">main_json</ref>(adresse_map=</highlight><highlight class="stringliteral">&quot;output/clusterized_map_improve_nb_clusters.html&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>main_json(reduce<sp/>=<sp/>True,<sp/>adresse_map=&quot;output/clusterized_map_optim_de_cython.html&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>main_json(adresse_map=&quot;output/clusterized_map_IHM.html&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cProfile.run(&apos;main_json(adresse_map=&quot;output/clusterized_map_optim_de_cython.html&quot;)&apos;)</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/clusterizer/clusterizer.py"/>
  </compounddef>
</doxygen>
