<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="seine__data__utils_8c" kind="file" language="C++">
    <compoundname>seine_data_utils.c</compoundname>
    <includes local="yes">Python.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/clusterizer/utils/seine_data_utils.c</label>
        <link refid="seine__data__utils_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Python.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="seine__data__utils_8c_1ac9efdaac9411d0868b715edccca3269d" prot="public" static="no">
        <name>PY_SSIZE_T_CLEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clusterizer/utils/seine_data_utils.c" line="20" column="9" bodyfile="src/clusterizer/utils/seine_data_utils.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Generated<sp/>by<sp/>Cython<sp/>0.29.21<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN:<sp/>Cython<sp/>Metadata</highlight></codeline>
<codeline lineno="4"><highlight class="comment">{</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;distutils&quot;:<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;include_dirs&quot;:<sp/>[</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.&quot;,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;..&quot;,</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;../..&quot;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;seine_data_utils&quot;,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;sources&quot;:<sp/>[</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;utils/seine_data_utils.pyx&quot;</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;module_name&quot;:<sp/>&quot;seine_data_utils&quot;</highlight></codeline>
<codeline lineno="17"><highlight class="comment">}</highlight></codeline>
<codeline lineno="18"><highlight class="comment">END:<sp/>Cython<sp/>Metadata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="seine__data__utils_8c_1ac9efdaac9411d0868b715edccca3269d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SSIZE_T_CLEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Python.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_PYTHON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Python<sp/>headers<sp/>needed<sp/>to<sp/>compile<sp/>C<sp/>extensions,<sp/>please<sp/>install<sp/>development<sp/>version<sp/>of<sp/>Python.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02060000<sp/>||<sp/>(0x03000000<sp/>&lt;=<sp/>PY_VERSION_HEX<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03030000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Cython<sp/>requires<sp/>Python<sp/>2.6+<sp/>or<sp/>Python<sp/>3.3+.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_ABI<sp/>&quot;0_29_21&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_HEX_VERSION<sp/>0x001D15F0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_FUTURE_DIVISION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>offsetof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>offsetof(type,<sp/>member)<sp/>(<sp/>(size_t)<sp/>&amp;<sp/>((type*)0)<sp/>-&gt;<sp/>member<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32)<sp/>&amp;&amp;<sp/>!defined(MS_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DL_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DL_IMPORT(t)<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DL_EXPORT(t)<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_COMMA<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PY_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_LONG_LONG<sp/>LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_HUGE_VAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_HUGE_VAL<sp/>HUGE_VAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PYPY_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYPY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYSTON<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_TYPE_SLOTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>CYTHON_USE_ASYNC_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_ASYNC_SLOTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>!defined(CYTHON_USE_ASYNC_SLOTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_ASYNC_SLOTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYLIST_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYLIST_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_UNICODE_WRITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_WRITER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYLONG_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_AVOID_BORROWED_REFS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_UNPACK_METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_UNPACK_METHODS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_FAST_THREAD_STATE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_FAST_PYCALL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_PEP489_MULTI_PHASE_INIT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_TP_FINALIZE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_DICT_VERSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_DICT_VERSIONS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_EXC_INFO_STACK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(PYSTON_VERSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYPY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYSTON<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_TYPE_SLOTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_ASYNC_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_ASYNC_SLOTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYLIST_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYLIST_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_INTERNALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_UNICODE_WRITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_WRITER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_PYLONG_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_AVOID_BORROWED_REFS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_UNPACK_METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_UNPACK_METHODS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_FAST_THREAD_STATE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_FAST_PYCALL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_PEP489_MULTI_PHASE_INIT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_TP_FINALIZE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_DICT_VERSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_DICT_VERSIONS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_USE_EXC_INFO_STACK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYPY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_PYSTON<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_TYPE_SLOTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>!defined(CYTHON_USE_PYTYPE_LOOKUP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>CYTHON_USE_ASYNC_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_ASYNC_SLOTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>!defined(CYTHON_USE_ASYNC_SLOTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_ASYNC_SLOTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_PYLONG_INTERNALS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>!defined(CYTHON_USE_PYLONG_INTERNALS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_PYLONG_INTERNALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_PYLIST_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_PYLIST_INTERNALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_INTERNALS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030300F0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>CYTHON_USE_UNICODE_WRITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_WRITER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>!defined(CYTHON_USE_UNICODE_WRITER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_UNICODE_WRITER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_AVOID_BORROWED_REFS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_UNPACK_METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_UNPACK_METHODS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FAST_THREAD_STATE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FAST_PYCALL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_PEP489_MULTI_PHASE_INIT<sp/>(PY_VERSION_HEX<sp/>&gt;=<sp/>0x03050000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_TP_FINALIZE<sp/>(PY_VERSION_HEX<sp/>&gt;=<sp/>0x030400a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_DICT_VERSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_DICT_VERSIONS<sp/>(PY_VERSION_HEX<sp/>&gt;=<sp/>0x030600B1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_USE_EXC_INFO_STACK<sp/>(PY_VERSION_HEX<sp/>&gt;=<sp/>0x030700A3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CYTHON_FAST_PYCCALL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_FAST_PYCCALL<sp/><sp/>(CYTHON_FAST_PYCALL<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030600B1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;longintrepr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>SHIFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>BASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>SIZEOF_VOID_P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>__pyx_check_sizeof_voidp<sp/>=<sp/>1<sp/>/<sp/>(int)(SIZEOF_VOID_P<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))<sp/>};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__has_attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__has_attribute(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__has_cpp_attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__has_cpp_attribute(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_RESTRICT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_RESTRICT<sp/>__restrict__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_RESTRICT<sp/>__restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined<sp/>(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_RESTRICT<sp/>restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_RESTRICT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!(defined(__cplusplus))<sp/>||<sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>CYTHON_UNUSED<sp/>__attribute__<sp/>((__unused__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>CYTHON_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__ICC)<sp/>||<sp/>(defined(__INTEL_COMPILER)<sp/>&amp;&amp;<sp/>!defined(_MSC_VER))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CYTHON_UNUSED<sp/>__attribute__<sp/>((__unused__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CYTHON_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_MAYBE_UNUSED_VAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CYTHON_MAYBE_UNUSED_VAR(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>CYTHON_MAYBE_UNUSED_VAR(x)<sp/>(void)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_NCP_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>CYTHON_NCP_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>CYTHON_NCP_UNUSED<sp/>CYTHON_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_void_to_None(void_result)<sp/>((void)(void_result),<sp/>Py_INCREF(Py_None),<sp/>Py_None)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>_MSC_STDINT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&lt;<sp/>1300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint8_t;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int8<sp/><sp/><sp/>uint8_t;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int32<sp/><sp/>uint32_t;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_cpp_attribute(fallthrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH<sp/>[[fallthrough]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>__has_cpp_attribute(clang::fallthrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH<sp/>[[clang::fallthrough]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>__has_cpp_attribute(gnu::fallthrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH<sp/>[[gnu::fallthrough]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>CYTHON_FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__has_attribute(fallthrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH<sp/>__attribute__((fallthrough))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__clang__<sp/>)<sp/>&amp;&amp;<sp/>defined(__apple_build_version__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>__apple_build_version__<sp/>&lt;<sp/>7000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/><sp/>CYTHON_FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>__inline__<sp/>__attribute__<sp/>((__unused__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>__inline__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined<sp/>(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02070600<sp/>&amp;&amp;<sp/>!defined(Py_OptimizeFlag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_OptimizeFlag<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_BUILD_PY_SSIZE_T<sp/>&quot;n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_FORMAT_SSIZE_T<sp/>&quot;z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;__builtin__&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCode_New(a,<sp/>k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyCode_New(a+k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DefaultClassType<sp/>PyClass_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;builtins&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800A4<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800B2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCode_New(a,<sp/>k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyCode_New(a,<sp/>0,<sp/>k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCode_New(a,<sp/>k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyCode_New(a,<sp/>k,<sp/>l,<sp/>s,<sp/>f,<sp/>code,<sp/>c,<sp/>n,<sp/>v,<sp/>fv,<sp/>cell,<sp/>fn,<sp/>name,<sp/>fline,<sp/>lnos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DefaultClassType<sp/>PyType_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_TPFLAGS_CHECKTYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_CHECKTYPES<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_TPFLAGS_HAVE_INDEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_INDEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_TPFLAGS_HAVE_NEWBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_NEWBUFFER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_TPFLAGS_HAVE_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_FINALIZE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>METH_STACKLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>METH_STACKLESS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;=<sp/>0x030700A3<sp/>||<sp/>!defined(METH_FASTCALL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>METH_FASTCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>#define<sp/>METH_FASTCALL<sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*__Pyx_PyCFunctionFast)<sp/>(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*args,<sp/>Py_ssize_t<sp/>nargs);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*__Pyx_PyCFunctionFastWithKeywords)<sp/>(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*args,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,<sp/>PyObject<sp/>*kwnames);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCFunctionFast<sp/>_PyCFunctionFast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCFunctionFastWithKeywords<sp/>_PyCFunctionFastWithKeywords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyFastCFunction_Check(func)\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((PyCFunction_Check(func)<sp/>&amp;&amp;<sp/>(METH_FASTCALL<sp/>==<sp/>(PyCFunction_GET_FLAGS(func)<sp/>&amp;<sp/>~(METH_CLASS<sp/>|<sp/>METH_STATIC<sp/>|<sp/>METH_COEXIST<sp/>|<sp/>METH_KEYWORDS<sp/>|<sp/>METH_STACKLESS)))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyFastCFunction_Check(func)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(PyObject_Malloc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_Malloc(s)<sp/><sp/><sp/>PyMem_Malloc(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_Free(p)<sp/><sp/><sp/><sp/><sp/>PyMem_Free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_Realloc(p)<sp/><sp/>PyMem_Realloc(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030400A1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyMem_RawMalloc(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMem_Malloc(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyMem_RawRealloc(p,<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMem_Realloc(p,<sp/>n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyMem_RawFree(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMem_Free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYSTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCode_HasFreeVars(co)<sp/><sp/>PyCode_HasFreeVars(co)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyFrame_SetLineNumber(frame,<sp/>lineno)<sp/>PyFrame_SetLineNumber(frame,<sp/>lineno)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyCode_HasFreeVars(co)<sp/><sp/>(PyCode_GetNumFree(co)<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyFrame_SetLineNumber(frame,<sp/>lineno)<sp/><sp/>(frame)-&gt;f_lineno<sp/>=<sp/>(lineno)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_FAST_THREAD_STATE<sp/>||<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyThreadState_Current<sp/>PyThreadState_GET()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x03060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyThreadState_Current<sp/>_PyThreadState_UncheckedGet()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyThreadState_Current<sp/>PyThreadState_GET()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyThreadState_Current<sp/>_PyThreadState_Current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030700A2<sp/>&amp;&amp;<sp/>!defined(PyThread_tss_create)<sp/>&amp;&amp;<sp/>!defined(Py_tss_NEEDS_INIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pythread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_tss_NEEDS_INIT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Py_tss_t;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyThread_tss_create(Py_tss_t<sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>*key<sp/>=<sp/>PyThread_create_key();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>Py_tss_t<sp/>*<sp/>PyThread_tss_alloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>Py_tss_t<sp/>*key<sp/>=<sp/>(Py_tss_t<sp/>*)PyObject_Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_tss_t));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>*key<sp/>=<sp/>Py_tss_NEEDS_INIT;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PyThread_tss_free(Py_tss_t<sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>PyObject_Free(key);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyThread_tss_is_created(Py_tss_t<sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*key<sp/>!=<sp/>Py_tss_NEEDS_INIT;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PyThread_tss_delete(Py_tss_t<sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>PyThread_delete_key(*key);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>*key<sp/>=<sp/>Py_tss_NEEDS_INIT;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyThread_tss_set(Py_tss_t<sp/>*key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyThread_set_key_value(*key,<sp/>value);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>PyThread_tss_get(Py_tss_t<sp/>*key)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyThread_get_key_value(*key);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>||<sp/>defined(_PyDict_NewPresized)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyDict_NewPresized(n)<sp/><sp/>((n<sp/>&lt;=<sp/>8)<sp/>?<sp/>PyDict_New()<sp/>:<sp/>_PyDict_NewPresized(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyDict_NewPresized(n)<sp/><sp/>PyDict_New()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3<sp/>||<sp/>CYTHON_FUTURE_DIVISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_TrueDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_InPlaceDivide(x,y)<sp/><sp/>PyNumber_InPlaceTrueDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Divide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_InPlaceDivide(x,y)<sp/><sp/>PyNumber_InPlaceDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030500A1<sp/>&amp;&amp;<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyDict_GetItemStr(dict,<sp/>name)<sp/><sp/>_PyDict_GetItem_KnownHash(dict,<sp/>name,<sp/>((PyASCIIObject<sp/>*)<sp/>name)-&gt;hash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyDict_GetItemStr(dict,<sp/>name)<sp/><sp/>PyDict_GetItem(dict,<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;<sp/>0x03030000<sp/>&amp;&amp;<sp/>defined(PyUnicode_KIND)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_PEP393_ENABLED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READY(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(likely(PyUnicode_IS_READY(op))<sp/>?\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>:<sp/>_PyUnicode_Ready((PyObject<sp/>*)(op)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_GET_LENGTH(u)<sp/><sp/><sp/>PyUnicode_GET_LENGTH(u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READ_CHAR(u,<sp/>i)<sp/>PyUnicode_READ_CHAR(u,<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_MAX_CHAR_VALUE(u)<sp/><sp/><sp/>PyUnicode_MAX_CHAR_VALUE(u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_KIND(u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_KIND(u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_DATA(u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_DATA(u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READ(k,<sp/>d,<sp/>i)<sp/><sp/><sp/>PyUnicode_READ(k,<sp/>d,<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_WRITE(k,<sp/>d,<sp/>i,<sp/>ch)<sp/><sp/>PyUnicode_WRITE(k,<sp/>d,<sp/>i,<sp/>ch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(PyUnicode_IS_READY)<sp/>&amp;&amp;<sp/>defined(PyUnicode_GET_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_IS_TRUE(u)<sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>!=<sp/>(likely(PyUnicode_IS_READY(u))<sp/>?<sp/>PyUnicode_GET_LENGTH(u)<sp/>:<sp/>PyUnicode_GET_SIZE(u)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_IS_TRUE(u)<sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>!=<sp/>PyUnicode_GET_LENGTH(u))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_PEP393_ENABLED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyUnicode_1BYTE_KIND<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyUnicode_2BYTE_KIND<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyUnicode_4BYTE_KIND<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READY(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_GET_LENGTH(u)<sp/><sp/><sp/>PyUnicode_GET_SIZE(u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READ_CHAR(u,<sp/>i)<sp/>((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_MAX_CHAR_VALUE(u)<sp/><sp/><sp/>((sizeof(Py_UNICODE)<sp/>==<sp/>2)<sp/>?<sp/>65535<sp/>:<sp/>1114111)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_KIND(u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sizeof(Py_UNICODE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_DATA(u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void*)PyUnicode_AS_UNICODE(u))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_READ(k,<sp/>d,<sp/>i)<sp/><sp/><sp/>((void)(k),<sp/>(Py_UCS4)(((Py_UNICODE*)d)[i]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_WRITE(k,<sp/>d,<sp/>i,<sp/>ch)<sp/><sp/>(((void)(k)),<sp/>((Py_UNICODE*)d)[i]<sp/>=<sp/>ch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_IS_TRUE(u)<sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>!=<sp/>PyUnicode_GET_SIZE(u))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_Concat(a,<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Add(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_ConcatSafe(a,<sp/>b)<sp/><sp/>PyNumber_Add(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_Concat(a,<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Concat(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyUnicode_ConcatSafe(a,<sp/>b)<sp/><sp/>((unlikely((a)<sp/>==<sp/>Py_None)<sp/>||<sp/>unlikely((b)<sp/>==<sp/>Py_None))<sp/>?\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Add(a,<sp/>b)<sp/>:<sp/>__Pyx_PyUnicode_Concat(a,<sp/>b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(PyUnicode_Contains)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyUnicode_Contains(u,<sp/>s)<sp/><sp/>PySequence_Contains(u,<sp/>s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(PyByteArray_Check)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyByteArray_Check(obj)<sp/><sp/>PyObject_TypeCheck(obj,<sp/>&amp;PyByteArray_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(PyObject_Format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_Format(obj,<sp/>fmt)<sp/><sp/>PyObject_CallMethod(obj,<sp/>&quot;__format__&quot;</highlight><highlight class="normal">,<sp/>&quot;O&quot;,<sp/>fmt)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyString_FormatSafe(a,<sp/>b)<sp/><sp/><sp/>((unlikely((a)<sp/>==<sp/>Py_None<sp/>||<sp/>(PyString_Check(b)<sp/>&amp;&amp;<sp/>!PyString_CheckExact(b))))<sp/>?<sp/>PyNumber_Remainder(a,<sp/>b)<sp/>:<sp/>__Pyx_PyString_Format(a,<sp/>b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FormatSafe(a,<sp/>b)<sp/><sp/>((unlikely((a)<sp/>==<sp/>Py_None<sp/>||<sp/>(PyUnicode_Check(b)<sp/>&amp;&amp;<sp/>!PyUnicode_CheckExact(b))))<sp/>?<sp/>PyNumber_Remainder(a,<sp/>b)<sp/>:<sp/>PyUnicode_Format(a,<sp/>b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyString_Format(a,<sp/>b)<sp/><sp/>PyUnicode_Format(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyString_Format(a,<sp/>b)<sp/><sp/>PyString_Format(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>!defined(PyObject_ASCII)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_ASCII(o)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_Repr(o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBaseString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyStringObject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicodeObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_Check<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_CheckExact<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_CheckExact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PyObject_Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyObject_Unicode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_Str</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyBaseString_Check(obj)<sp/>PyUnicode_Check(obj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyBaseString_CheckExact(obj)<sp/>PyUnicode_CheckExact(obj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyBaseString_Check(obj)<sp/>(PyString_Check(obj)<sp/>||<sp/>PyUnicode_Check(obj))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyBaseString_CheckExact(obj)<sp/>(PyString_CheckExact(obj)<sp/>||<sp/>PyUnicode_CheckExact(obj))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PySet_CheckExact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PySet_CheckExact(obj)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Py_TYPE(obj)<sp/>==<sp/>&amp;PySet_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030900A4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SET_REFCNT(obj,<sp/>refcnt)<sp/>Py_SET_REFCNT(obj,<sp/>refcnt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SET_SIZE(obj,<sp/>size)<sp/>Py_SET_SIZE(obj,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SET_REFCNT(obj,<sp/>refcnt)<sp/>Py_REFCNT(obj)<sp/>=<sp/>(refcnt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SET_SIZE(obj,<sp/>size)<sp/>Py_SIZE(obj)<sp/>=<sp/>(size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PySequence_SIZE(seq)<sp/><sp/>Py_SIZE(seq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PySequence_SIZE(seq)<sp/><sp/>PySequence_Size(seq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyIntObject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLongObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Check(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Check(op)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_CheckExact(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_CheckExact(op)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromUnicode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromUnicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AS_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AS_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongMask<sp/><sp/><sp/><sp/><sp/>PyLong_AsUnsignedLongMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongLongMask<sp/>PyLong_AsUnsignedLongLongMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyNumber_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBoolObject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLongObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>PyUnicode_InternFromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PyUnicode_InternFromString(s)<sp/>PyUnicode_FromString(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030200A4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Py_hash_t;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyInt_FromHash_t<sp/>PyInt_FromLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyInt_AsHash_t<sp/><sp/><sp/>PyInt_AsLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyInt_FromHash_t<sp/>PyInt_FromSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyInt_AsHash_t<sp/><sp/><sp/>PyInt_AsSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyMethod_New(func,<sp/>self,<sp/>klass)<sp/>((self)<sp/>?<sp/>((void)(klass),<sp/>PyMethod_New(func,<sp/>self))<sp/>:<sp/>__Pyx_NewRef(func))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyMethod_New(func,<sp/>self,<sp/>klass)<sp/>PyMethod_New(func,<sp/>self,<sp/>klass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_ASYNC_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030500B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyAsyncMethodsStruct<sp/>PyAsyncMethods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyType_AsAsync(obj)<sp/>(Py_TYPE(obj)-&gt;tp_as_async)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyType_AsAsync(obj)<sp/>((__Pyx_PyAsyncMethodsStruct*)<sp/>(Py_TYPE(obj)-&gt;tp_reserved))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyType_AsAsync(obj)<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__Pyx_PyAsyncMethodsStruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unaryfunc<sp/>am_await;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unaryfunc<sp/>am_aiter;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unaryfunc<sp/>am_anext;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>__Pyx_PyAsyncMethodsStruct;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)<sp/>||<sp/>defined(MS_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_NAN()<sp/>((float)<sp/>NAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>__PYX_NAN()<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>memset(&amp;value,<sp/>0xFF,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CYGWIN__)<sp/>&amp;&amp;<sp/>defined(_LDBL_EQ_DBL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_truncl<sp/>trunc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_truncl<sp/>truncl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_MARK_ERR_POS(f_index,<sp/>lineno)<sp/>\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>__pyx_filename<sp/>=<sp/>__pyx_f[f_index];<sp/>(void)__pyx_filename;<sp/>__pyx_lineno<sp/>=<sp/>lineno;<sp/>(void)__pyx_lineno;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/>(void)__pyx_clineno;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_ERR(f_index,<sp/>lineno,<sp/>Ln_error)<sp/>\</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>__PYX_MARK_ERR_POS(f_index,<sp/>lineno)<sp/>goto<sp/>Ln_error;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__PYX_EXTERN_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__PYX_EXTERN_C<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__PYX_EXTERN_C<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_HAVE__seine_data_utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_HAVE_API__seine_data_utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Early<sp/>includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_OPENMP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PYREX_WITHOUT_ASSERTIONS)<sp/>&amp;&amp;<sp/>!defined(CYTHON_WITHOUT_ASSERTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYTHON_WITHOUT_ASSERTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{PyObject<sp/>**p;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>n;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetraitement__base__sirene_1aecd62cd1d368f0424ec4b14d82186e62" kindref="member">encoding</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_unicode;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_str;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intern;<sp/>}<sp/>__Pyx_StringTabEntry;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_UTF8<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_DEFAULT_STRING_ENCODING<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_FromString<sp/>__Pyx_PyBytes_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_FromStringAndSize<sp/>__Pyx_PyBytes_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_uchar_cast(c)<sp/>((unsigned<sp/>char)c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_long_cast(x)<sp/>((long)x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_fits_Py_ssize_t(v,<sp/>type,<sp/>is_signed)<sp/><sp/>(\</highlight></codeline>
<codeline lineno="645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(sizeof(type)<sp/>&lt;<sp/>sizeof(Py_ssize_t))<sp/><sp/>||\</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(sizeof(type)<sp/>&gt;<sp/>sizeof(Py_ssize_t)<sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likely(v<sp/>&lt;<sp/>(type)PY_SSIZE_T_MAX<sp/>||\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>==<sp/>(type)PY_SSIZE_T_MAX)<sp/><sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!is_signed<sp/>||<sp/>likely(v<sp/>&gt;<sp/>(type)PY_SSIZE_T_MIN<sp/>||\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>==<sp/>(type)PY_SSIZE_T_MIN)))<sp/><sp/>||\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(sizeof(type)<sp/>==<sp/>sizeof(Py_ssize_t)<sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_signed<sp/>||<sp/>likely(v<sp/>&lt;<sp/>(type)PY_SSIZE_T_MAX<sp/>||\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>==<sp/>(type)PY_SSIZE_T_MAX)))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_is_valid_index(Py_ssize_t<sp/>i,<sp/>Py_ssize_t<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>i<sp/>&lt;<sp/>(size_t)<sp/>limit;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>std::abs(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZEOF_INT<sp/>&gt;=<sp/>SIZEOF_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>abs(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZEOF_LONG<sp/>&gt;=<sp/>SIZEOF_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>labs(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>((Py_ssize_t)_abs64(value))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>llabs(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>__builtin_llabs(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_sst_abs(value)<sp/>((value&lt;0)<sp/>?<sp/>-value<sp/>:<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyObject_AsString(PyObject*);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyObject_AsStringAndSize(PyObject*,<sp/>Py_ssize_t*<sp/>length);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyByteArray_FromString(s)<sp/>PyByteArray_FromStringAndSize((const<sp/>char*)s,<sp/>strlen((const<sp/>char*)s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyByteArray_FromStringAndSize(s,<sp/>l)<sp/>PyByteArray_FromStringAndSize((const<sp/>char*)s,<sp/>l)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromStringAndSize<sp/>PyBytes_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyUnicode_FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyStr_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyBytes_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyStr_FromStringAndSize<sp/>__Pyx_PyBytes_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyStr_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyUnicode_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__Pyx_PyStr_FromStringAndSize<sp/>__Pyx_PyUnicode_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsWritableString(s)<sp/><sp/><sp/><sp/><sp/>((char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsWritableSString(s)<sp/><sp/><sp/><sp/>((signed<sp/>char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsWritableUString(s)<sp/><sp/><sp/><sp/>((unsigned<sp/>char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsString(s)<sp/><sp/><sp/><sp/><sp/>((const<sp/>char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsSString(s)<sp/><sp/><sp/><sp/>((const<sp/>signed<sp/>char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsUString(s)<sp/><sp/><sp/><sp/>((const<sp/>unsigned<sp/>char*)<sp/>PyBytes_AS_STRING(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_AsWritableString(s)<sp/><sp/><sp/><sp/>((char*)<sp/>__Pyx_PyObject_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_AsWritableSString(s)<sp/><sp/><sp/><sp/>((signed<sp/>char*)<sp/>__Pyx_PyObject_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_AsWritableUString(s)<sp/><sp/><sp/><sp/>((unsigned<sp/>char*)<sp/>__Pyx_PyObject_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_AsSString(s)<sp/><sp/><sp/><sp/>((const<sp/>signed<sp/>char*)<sp/>__Pyx_PyObject_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_AsUString(s)<sp/><sp/><sp/><sp/>((const<sp/>unsigned<sp/>char*)<sp/>__Pyx_PyObject_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_FromCString(s)<sp/><sp/>__Pyx_PyObject_FromString((const<sp/>char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromCString(s)<sp/><sp/><sp/>__Pyx_PyBytes_FromString((const<sp/>char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyByteArray_FromCString(s)<sp/><sp/><sp/>__Pyx_PyByteArray_FromString((const<sp/>char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyStr_FromCString(s)<sp/><sp/><sp/><sp/><sp/>__Pyx_PyStr_FromString((const<sp/>char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FromCString(s)<sp/>__Pyx_PyUnicode_FromString((const<sp/>char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__Pyx_Py_UNICODE_strlen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_UNICODE<sp/>*u)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_UNICODE<sp/>*u_end<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*u_end++)<sp/>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(u_end<sp/>-<sp/>u<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FromUnicode(u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_FromUnicode(u,<sp/>__Pyx_Py_UNICODE_strlen(u))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FromUnicodeAndLength<sp/>PyUnicode_FromUnicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_AsUnicode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_AsUnicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_NewRef(obj)<sp/>(Py_INCREF(obj),<sp/>obj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_Owned_Py_None(b)<sp/>__Pyx_NewRef(Py_None)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyBool_FromLong(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrueAndDecref(PyObject*);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_IntOrLong(PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PySequence_Tuple(obj)\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(likely(PyTuple_CheckExact(obj))<sp/>?<sp/>__Pyx_NewRef(obj)<sp/>:<sp/>PySequence_Tuple(obj))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__pyx_PyFloat_AsDouble(x)<sp/>(PyFloat_CheckExact(x)<sp/>?<sp/>PyFloat_AS_DOUBLE(x)<sp/>:<sp/>PyFloat_AsDouble(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__pyx_PyFloat_AsDouble(x)<sp/>PyFloat_AsDouble(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__pyx_PyFloat_AsFloat(x)<sp/>((float)<sp/>__pyx_PyFloat_AsDouble(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyNumber_Int(x)<sp/>(PyLong_CheckExact(x)<sp/>?<sp/>__Pyx_NewRef(x)<sp/>:<sp/>PyNumber_Long(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyNumber_Int(x)<sp/>(PyInt_CheckExact(x)<sp/>?<sp/>__Pyx_NewRef(x)<sp/>:<sp/>PyNumber_Int(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyNumber_Float(x)<sp/>(PyFloat_CheckExact(x)<sp/>?<sp/>__Pyx_NewRef(x)<sp/>:<sp/>PyNumber_Float(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_sys_getdefaultencoding_not_ascii;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_init_sys_getdefaultencoding_params(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>sys;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>default_encoding<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>ascii_chars_u<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>ascii_chars_b<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>default_encoding_c;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>PyImport_ImportModule(</highlight><highlight class="stringliteral">&quot;sys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sys)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>default_encoding<sp/>=<sp/>PyObject_CallMethod(sys,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;getdefaultencoding&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(sys);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!default_encoding)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>default_encoding_c<sp/>=<sp/>PyBytes_AsString(default_encoding);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!default_encoding_c)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(default_encoding_c,<sp/></highlight><highlight class="stringliteral">&quot;ascii&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_sys_getdefaultencoding_not_ascii<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ascii_chars[128];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref><sp/>=<sp/>0;<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref><sp/>&lt;<sp/>128;<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii_chars[<ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>]<sp/>=<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_sys_getdefaultencoding_not_ascii<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii_chars_u<sp/>=<sp/>PyUnicode_DecodeASCII(ascii_chars,<sp/>128,<sp/>NULL);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ascii_chars_u)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii_chars_b<sp/>=<sp/>PyUnicode_AsEncodedString(ascii_chars_u,<sp/>default_encoding_c,<sp/>NULL);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ascii_chars_b<sp/>||<sp/>!PyBytes_Check(ascii_chars_b)<sp/>||<sp/>memcmp(ascii_chars,<sp/>PyBytes_AS_STRING(ascii_chars_b),<sp/>128)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>module<sp/>compiled<sp/>with<sp/>c_string_encoding=ascii,<sp/>but<sp/>default<sp/>encoding<sp/>&apos;%.200s&apos;<sp/>is<sp/>not<sp/>a<sp/>superset<sp/>of<sp/>ascii.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_encoding_c);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(ascii_chars_u);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(ascii_chars_b);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(default_encoding);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(default_encoding);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(ascii_chars_u);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(ascii_chars_b);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT<sp/>&amp;&amp;<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FromStringAndSize(c_str,<sp/>size)<sp/>PyUnicode_DecodeUTF8(c_str,<sp/>size,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyUnicode_FromStringAndSize(c_str,<sp/>size)<sp/>PyUnicode_Decode(c_str,<sp/>size,<sp/>__PYX_DEFAULT_STRING_ENCODING,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__PYX_DEFAULT_STRING_ENCODING;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_init_sys_getdefaultencoding_params(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>sys;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>default_encoding<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>default_encoding_c;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>PyImport_ImportModule(</highlight><highlight class="stringliteral">&quot;sys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sys)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>default_encoding<sp/>=<sp/>PyObject_CallMethod(sys,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;getdefaultencoding&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(sys);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!default_encoding)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>default_encoding_c<sp/>=<sp/>PyBytes_AsString(default_encoding);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!default_encoding_c)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_DEFAULT_STRING_ENCODING<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(strlen(default_encoding_c)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__PYX_DEFAULT_STRING_ENCODING)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(__PYX_DEFAULT_STRING_ENCODING,<sp/>default_encoding_c);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(default_encoding);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(default_encoding);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>GCC<sp/>&gt;<sp/>2.95<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(__GNUC__<sp/>&gt;<sp/>2<sp/>||<sp/>(__GNUC__<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>(__GNUC_MINOR__<sp/>&gt;<sp/>95)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>likely(x)<sp/><sp/><sp/>__builtin_expect(!!(x),<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>unlikely(x)<sp/>__builtin_expect(!!(x),<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!__GNUC__<sp/>or<sp/>GCC<sp/>&lt;<sp/>2.95<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>likely(x)<sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>unlikely(x)<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_pretend_to_initialize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)<sp/>{<sp/>(void)ptr;<sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_m<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_d;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_b;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_cython_runtime<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_tuple;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_bytes;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_unicode;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>__pyx_cfilenm=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_f[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;utils\\seine_data_utils.pyx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;stringsource&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="835"><highlight class="normal">};</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">/*---<sp/>Type<sp/>declarations<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_DansLeSegmentNotError;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_ctuple_double__and_double;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_ctuple_double__and_double<sp/>__pyx_ctuple_double__and_double;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:125</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.b<sp/>=<sp/>self.eq_droite()</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>(double,<sp/>double)<sp/>eq_droite(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>def<sp/>eq_droite(self)<sp/>-&gt;<sp/>Tuple[float]:</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Trouve<sp/>l&apos;quation<sp/>de<sp/>la<sp/>droite<sp/>porteuse<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_ctuple_double__and_double<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f1;</highlight></codeline>
<codeline lineno="854"><highlight class="normal">};</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:92</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*<sp/>#<sp/>@jitclass(point_spec)</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Point:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>x,<sp/>y</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceseine__data__utils__py_1af61fede4a3a0bfa27d2dff12ba677bfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">};</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:105</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(self.x,<sp/>self.y,<sp/>marker=&quot;.&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>DansLeSegmentNotError(Exception):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>int<sp/>res</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>int<sp/>value):</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>PyBaseExceptionObject<sp/>__pyx_base;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="880"><highlight class="normal">};</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:110</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Segment:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>object<sp/>point_gauche,<sp/>point_droit</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_vtabstruct_16seine_data_utils_Segment<sp/>*__pyx_vtab;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>PyObject<sp/>*point_gauche;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>PyObject<sp/>*point_droit;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">};</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_vtabstruct_16seine_data_utils_Segment<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>__pyx_ctuple_double__and_double<sp/>(*eq_droite)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*);</highlight></codeline>
<codeline lineno="903"><highlight class="normal">};</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_vtabstruct_16seine_data_utils_Segment<sp/>*__pyx_vtabptr_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>Runtime<sp/>support<sp/>code<sp/>(head)<sp/>---<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Refnanny.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_REFNANNY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*INCREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*DECREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*GOTREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*GIVEREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*SetupContext)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*FinishContext)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}<sp/>__Pyx_RefNannyAPIStruct;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefNannyAPIStruct<sp/>*__Pyx_RefNanny<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefNannyAPIStruct<sp/>*__Pyx_RefNannyImportAPI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*modname);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyDeclarations<sp/>void<sp/>*__pyx_refnanny<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannySetupContext(name,<sp/>acquire_gil)\</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(acquire_gil)<sp/>{\</highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_STATE<sp/>__pyx_gilstate_save<sp/>=<sp/>PyGILState_Ensure();\</highlight></codeline>
<codeline lineno="927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_refnanny<sp/>=<sp/>__Pyx_RefNanny-&gt;SetupContext((name),<sp/>__LINE__,<sp/>__FILE__);\</highlight></codeline>
<codeline lineno="928"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(__pyx_gilstate_save);\</highlight></codeline>
<codeline lineno="929"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_refnanny<sp/>=<sp/>__Pyx_RefNanny-&gt;SetupContext((name),<sp/>__LINE__,<sp/>__FILE__);\</highlight></codeline>
<codeline lineno="931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannySetupContext(name,<sp/>acquire_gil)\</highlight></codeline>
<codeline lineno="934"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_refnanny<sp/>=<sp/>__Pyx_RefNanny-&gt;SetupContext((name),<sp/>__LINE__,<sp/>__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyFinishContext()\</highlight></codeline>
<codeline lineno="937"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RefNanny-&gt;FinishContext(&amp;__pyx_refnanny)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_INCREF(r)<sp/><sp/>__Pyx_RefNanny-&gt;INCREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DECREF(r)<sp/><sp/>__Pyx_RefNanny-&gt;DECREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GOTREF(r)<sp/><sp/>__Pyx_RefNanny-&gt;GOTREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GIVEREF(r)<sp/>__Pyx_RefNanny-&gt;GIVEREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XINCREF(r)<sp/><sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_INCREF(r);<sp/>}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XDECREF(r)<sp/><sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_DECREF(r);<sp/>}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XGOTREF(r)<sp/><sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_GOTREF(r);<sp/>}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XGIVEREF(r)<sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_GIVEREF(r);}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyDeclarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannySetupContext(name,<sp/>acquire_gil)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyFinishContext()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_INCREF(r)<sp/>Py_INCREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DECREF(r)<sp/>Py_DECREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GOTREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GIVEREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XINCREF(r)<sp/>Py_XINCREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XDECREF(r)<sp/>Py_XDECREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XGOTREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XGIVEREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XDECREF_SET(r,<sp/>v)<sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="960"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>(PyObject<sp/>*)<sp/>r;\</highlight></codeline>
<codeline lineno="961"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>v;<sp/>__Pyx_XDECREF(tmp);\</highlight></codeline>
<codeline lineno="962"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_DECREF_SET(r,<sp/>v)<sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="964"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>(PyObject<sp/>*)<sp/>r;\</highlight></codeline>
<codeline lineno="965"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>v;<sp/>__Pyx_DECREF(tmp);\</highlight></codeline>
<codeline lineno="966"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CLEAR(r)<sp/><sp/><sp/><sp/>do<sp/>{<sp/>PyObject*<sp/>tmp<sp/>=<sp/>((PyObject*)(r));<sp/>r<sp/>=<sp/>NULL;<sp/>__Pyx_DECREF(tmp);}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XCLEAR(r)<sp/><sp/><sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{PyObject*<sp/>tmp<sp/>=<sp/>((PyObject*)(r));<sp/>r<sp/>=<sp/>NULL;<sp/>__Pyx_DECREF(tmp);}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetAttrStr.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetAttrStr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_GetAttrStr(o,n)<sp/>PyObject_GetAttr(o,n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetBuiltinName.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetBuiltinName(PyObject<sp/>*name);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCall.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_Call(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg,<sp/>PyObject<sp/>*kw);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_Call(func,<sp/>arg,<sp/>kw)<sp/>PyObject_Call(func,<sp/>arg,<sp/>kw)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseDoubleKeywords.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/>PyObject*<sp/>kw_name);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ParseKeywords.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(PyObject<sp/>*kwds,<sp/>PyObject<sp/>**argnames[],\</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,<sp/>PyObject<sp/>*values[],<sp/>Py_ssize_t<sp/>num_pos_args,\</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseArgTupleInvalid.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,<sp/>Py_ssize_t<sp/>num_max,<sp/>Py_ssize_t<sp/>num_found);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyDictVersioning.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_DICT_VERSIONS<sp/>&amp;&amp;<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_DICT_VERSION_INIT<sp/><sp/>((PY_UINT64_T)<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_GET_DICT_VERSION(dict)<sp/><sp/>(((PyDictObject*)(dict))-&gt;ma_version_tag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_UPDATE_DICT_CACHE(dict,<sp/>value,<sp/>cache_var,<sp/>version_var)\</highlight></codeline>
<codeline lineno="1004"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(version_var)<sp/>=<sp/>__PYX_GET_DICT_VERSION(dict);\</highlight></codeline>
<codeline lineno="1005"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(cache_var)<sp/>=<sp/>(value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR,<sp/>DICT,<sp/>LOOKUP)<sp/>{\</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>PY_UINT64_T<sp/>__pyx_dict_version<sp/>=<sp/>0;\</highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>PyObject<sp/>*__pyx_dict_cached_value<sp/>=<sp/>NULL;\</highlight></codeline>
<codeline lineno="1009"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(likely(__PYX_GET_DICT_VERSION(DICT)<sp/>==<sp/>__pyx_dict_version))<sp/>{\</highlight></codeline>
<codeline lineno="1010"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VAR)<sp/>=<sp/>__pyx_dict_cached_value;\</highlight></codeline>
<codeline lineno="1011"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="1012"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VAR)<sp/>=<sp/>__pyx_dict_cached_value<sp/>=<sp/>(LOOKUP);\</highlight></codeline>
<codeline lineno="1013"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_dict_version<sp/>=<sp/>__PYX_GET_DICT_VERSION(DICT);\</highlight></codeline>
<codeline lineno="1014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1015"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_UINT64_T<sp/>__Pyx_get_tp_dict_version(PyObject<sp/>*obj);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_UINT64_T<sp/>__Pyx_get_object_dict_version(PyObject<sp/>*obj);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_object_dict_version_matches(PyObject*<sp/>obj,<sp/>PY_UINT64_T<sp/>tp_dict_version,<sp/>PY_UINT64_T<sp/>obj_dict_version);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_GET_DICT_VERSION(dict)<sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_UPDATE_DICT_CACHE(dict,<sp/>value,<sp/>cache_var,<sp/>version_var)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR,<sp/>DICT,<sp/>LOOKUP)<sp/><sp/>(VAR)<sp/>=<sp/>(LOOKUP);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetModuleGlobalName.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_DICT_VERSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetModuleGlobalName(var,<sp/>name)<sp/><sp/>{\</highlight></codeline>
<codeline lineno="1028"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>PY_UINT64_T<sp/>__pyx_dict_version<sp/>=<sp/>0;\</highlight></codeline>
<codeline lineno="1029"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>PyObject<sp/>*__pyx_dict_cached_value<sp/>=<sp/>NULL;\</highlight></codeline>
<codeline lineno="1030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(likely(__pyx_dict_version<sp/>==<sp/>__PYX_GET_DICT_VERSION(__pyx_d)))<sp/>?\</highlight></codeline>
<codeline lineno="1031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(likely(__pyx_dict_cached_value)<sp/>?<sp/>__Pyx_NewRef(__pyx_dict_cached_value)<sp/>:<sp/>__Pyx_GetBuiltinName(name))<sp/>:\</highlight></codeline>
<codeline lineno="1032"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx__GetModuleGlobalName(name,<sp/>&amp;__pyx_dict_version,<sp/>&amp;__pyx_dict_cached_value);\</highlight></codeline>
<codeline lineno="1033"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetModuleGlobalNameUncached(var,<sp/>name)<sp/><sp/>{\</highlight></codeline>
<codeline lineno="1035"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PY_UINT64_T<sp/>__pyx_dict_version;\</highlight></codeline>
<codeline lineno="1036"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PyObject<sp/>*__pyx_dict_cached_value;\</highlight></codeline>
<codeline lineno="1037"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>__Pyx__GetModuleGlobalName(name,<sp/>&amp;__pyx_dict_version,<sp/>&amp;__pyx_dict_cached_value);\</highlight></codeline>
<codeline lineno="1038"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx__GetModuleGlobalName(PyObject<sp/>*name,<sp/>PY_UINT64_T<sp/>*dict_version,<sp/>PyObject<sp/>**dict_cached_value);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetModuleGlobalName(var,<sp/>name)<sp/><sp/>(var)<sp/>=<sp/>__Pyx__GetModuleGlobalName(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetModuleGlobalNameUncached(var,<sp/>name)<sp/><sp/>(var)<sp/>=<sp/>__Pyx__GetModuleGlobalName(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx__GetModuleGlobalName(PyObject<sp/>*name);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectLookupSpecial.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>&amp;&amp;<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_LookupSpecial(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*res;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject<sp/>*tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyInstance_Check(obj)))</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetAttrStr(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_PyType_Lookup(tp,<sp/>attr_name);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(res))<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descrgetfunc<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>Py_TYPE(res)-&gt;tp_descr_get;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(res);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>(res,<sp/>obj,<sp/>(PyObject<sp/>*)tp);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetObject(PyExc_AttributeError,<sp/>attr_name);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_LookupSpecial(o,n)<sp/>__Pyx_PyObject_GetAttrStr(o,n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyFunctionFastCall.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyFunction_FastCall(func,<sp/>args,<sp/>nargs)\</highlight></codeline>
<codeline lineno="1075"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__Pyx_PyFunction_FastCallDict((func),<sp/>(args),<sp/>(nargs),<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1<sp/>||<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030600B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_PyFunction_FastCallDict(PyObject<sp/>*func,<sp/>PyObject<sp/>**args,<sp/>Py_ssize_t<sp/>nargs,<sp/>PyObject<sp/>*kwargs);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyFunction_FastCallDict(func,<sp/>args,<sp/>nargs,<sp/>kwargs)<sp/>_PyFunction_FastCallDict(func,<sp/>args,<sp/>nargs,<sp/>kwargs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_BUILD_ASSERT_EXPR(cond)\</highlight></codeline>
<codeline lineno="1082"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(sizeof(char<sp/>[1<sp/>-<sp/>2*!(cond)])<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_MEMBER_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_MEMBER_SIZE(type,<sp/>member)<sp/>sizeof(((type<sp/>*)0)-&gt;member)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__pyx_pyframe_localsplus_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;frameobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pxy_PyFrame_Initialize_Offsets()\</highlight></codeline>
<codeline lineno="1089"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject)<sp/>==<sp/>offsetof(PyFrameObject,<sp/>f_localsplus)<sp/>+<sp/>Py_MEMBER_SIZE(PyFrameObject,<sp/>f_localsplus)),\</highlight></codeline>
<codeline lineno="1090"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(void)(__pyx_pyframe_localsplus_offset<sp/>=<sp/>((size_t)PyFrame_Type.tp_basicsize)<sp/>-<sp/>Py_MEMBER_SIZE(PyFrameObject,<sp/>f_localsplus)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyFrame_GetLocalsplus(frame)\</highlight></codeline>
<codeline lineno="1092"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(assert(__pyx_pyframe_localsplus_offset),<sp/>(PyObject<sp/>**)(((char<sp/>*)(frame))<sp/>+<sp/>__pyx_pyframe_localsplus_offset))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallMethO.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallMethO(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallNoArg.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallNoArg(PyObject<sp/>*func);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_CallNoArg(func)<sp/>__Pyx_PyObject_Call(func,<sp/>__pyx_empty_tuple,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyCFunctionFastCall.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyCFunction_FastCall(PyObject<sp/>*func,<sp/>PyObject<sp/>**args,<sp/>Py_ssize_t<sp/>nargs);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyCFunction_FastCall(func,<sp/>args,<sp/>nargs)<sp/><sp/>(assert(0),<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallOneArg.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallOneArg(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetTopmostException.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_PyErr_StackItem<sp/>*<sp/>__Pyx_PyErr_GetTopmostException(PyThreadState<sp/>*tstate);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyThreadStateGet.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyThreadState_declare<sp/><sp/>PyThreadState<sp/>*__pyx_tstate;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyThreadState_assign<sp/><sp/>__pyx_tstate<sp/>=<sp/>__Pyx_PyThreadState_Current;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_Occurred()<sp/><sp/>__pyx_tstate-&gt;curexc_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyThreadState_declare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyThreadState_assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_Occurred()<sp/><sp/>PyErr_Occurred()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SaveResetException.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ExceptionSave(type,<sp/>value,<sp/>tb)<sp/><sp/>__Pyx__ExceptionSave(__pyx_tstate,<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx__ExceptionSave(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ExceptionReset(type,<sp/>value,<sp/>tb)<sp/><sp/>__Pyx__ExceptionReset(__pyx_tstate,<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx__ExceptionReset(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ExceptionSave(type,<sp/>value,<sp/>tb)<sp/><sp/><sp/>PyErr_GetExcInfo(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ExceptionReset(type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_SetExcInfo(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetException.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetException(type,<sp/>value,<sp/>tb)<sp/><sp/>__Pyx__GetException(__pyx_tstate,<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx__GetException(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_GetException(PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyErrFetchRestore.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_Clear()<sp/>__Pyx_ErrRestore(NULL,<sp/>NULL,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrRestoreWithState(type,<sp/>value,<sp/>tb)<sp/><sp/>__Pyx_ErrRestoreInState(PyThreadState_GET(),<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrFetchWithState(type,<sp/>value,<sp/>tb)<sp/><sp/><sp/><sp/>__Pyx_ErrFetchInState(PyThreadState_GET(),<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrRestore(type,<sp/>value,<sp/>tb)<sp/><sp/>__Pyx_ErrRestoreInState(__pyx_tstate,<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrFetch(type,<sp/>value,<sp/>tb)<sp/><sp/><sp/><sp/>__Pyx_ErrFetchInState(__pyx_tstate,<sp/>type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestoreInState(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetchInState(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_SetNone(exc)<sp/>(Py_INCREF(exc),<sp/>__Pyx_ErrRestore((exc),<sp/>NULL,<sp/>NULL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_SetNone(exc)<sp/>PyErr_SetNone(exc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_Clear()<sp/>PyErr_Clear()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_SetNone(exc)<sp/>PyErr_SetNone(exc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrRestoreWithState(type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Restore(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrFetchWithState(type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Fetch(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrRestoreInState(tstate,<sp/>type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Restore(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrFetchInState(tstate,<sp/>type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Fetch(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrRestore(type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Restore(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ErrFetch(type,<sp/>value,<sp/>tb)<sp/><sp/>PyErr_Fetch(type,<sp/>value,<sp/>tb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>None.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseUnboundLocalError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varname);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCall2Args.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_UNUSED<sp/>PyObject*<sp/>__Pyx_PyObject_Call2Args(PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>PyObject*<sp/>arg1,<sp/>PyObject*<sp/>arg2);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ListAppend.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLIST_INTERNALS<sp/>&amp;&amp;<sp/>CYTHON_ASSUME_SAFE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyList_Append(PyObject*<sp/>list,<sp/>PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>PyListObject*<sp/>L<sp/>=<sp/>(PyListObject*)<sp/>list;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>len<sp/>=<sp/>Py_SIZE(list);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(L-&gt;allocated<sp/>&gt;<sp/>len)<sp/>&amp;<sp/>likely(len<sp/>&gt;<sp/>(L-&gt;allocated<sp/>&gt;&gt;<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(list,<sp/>len,<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_SET_SIZE(list,<sp/>len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyList_Append(list,<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyList_Append(L,x)<sp/>PyList_Append(L,x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IncludeStringH.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BytesEquals.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyBytes_Equals(PyObject*<sp/>s1,<sp/>PyObject*<sp/>s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equals);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UnicodeEquals.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyUnicode_Equals(PyObject*<sp/>s1,<sp/>PyObject*<sp/>s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equals);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>StrEquals.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyString_Equals<sp/>__Pyx_PyUnicode_Equals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyString_Equals<sp/>__Pyx_PyBytes_Equals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetItemInt.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt(o,<sp/>i,<sp/>type,<sp/>is_signed,<sp/>to_py_func,<sp/>is_list,<sp/>wraparound,<sp/>boundscheck)\</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__Pyx_fits_Py_ssize_t(i,<sp/>type,<sp/>is_signed)<sp/>?\</highlight></codeline>
<codeline lineno="1219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Fast(o,<sp/>(Py_ssize_t)i,<sp/>is_list,<sp/>wraparound,<sp/>boundscheck)<sp/>:\</highlight></codeline>
<codeline lineno="1220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(is_list<sp/>?<sp/>(PyErr_SetString(PyExc_IndexError,<sp/>&quot;list<sp/>index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">),<sp/>(PyObject*)NULL)<sp/>:\</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i))))</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_List(o,<sp/>i,<sp/>type,<sp/>is_signed,<sp/>to_py_func,<sp/>is_list,<sp/>wraparound,<sp/>boundscheck)\</highlight></codeline>
<codeline lineno="1223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__Pyx_fits_Py_ssize_t(i,<sp/>type,<sp/>is_signed)<sp/>?\</highlight></codeline>
<codeline lineno="1224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_List_Fast(o,<sp/>(Py_ssize_t)i,<sp/>wraparound,<sp/>boundscheck)<sp/>:\</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(PyErr_SetString(PyExc_IndexError,<sp/>&quot;list<sp/>index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">),<sp/>(PyObject*)NULL))</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_List_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_Tuple(o,<sp/>i,<sp/>type,<sp/>is_signed,<sp/>to_py_func,<sp/>is_list,<sp/>wraparound,<sp/>boundscheck)\</highlight></codeline>
<codeline lineno="1229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__Pyx_fits_Py_ssize_t(i,<sp/>type,<sp/>is_signed)<sp/>?\</highlight></codeline>
<codeline lineno="1230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Tuple_Fast(o,<sp/>(Py_ssize_t)i,<sp/>wraparound,<sp/>boundscheck)<sp/>:\</highlight></codeline>
<codeline lineno="1231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(PyErr_SetString(PyExc_IndexError,<sp/>&quot;tuple<sp/>index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">),<sp/>(PyObject*)NULL))</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Tuple_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetItemInt_Generic(PyObject<sp/>*o,<sp/>PyObject*<sp/><ref refid="namespacetraitement__base__sirene_1a8bfe8f63a1abb11de330f2184461ec6b" kindref="member">j</ref>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ObjectGetItem.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyObject_GetItem(PyObject<sp/>*obj,<sp/>PyObject*<sp/>key);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_GetItem(obj,<sp/>key)<sp/><sp/>PyObject_GetItem(obj,<sp/>key)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseTooManyValuesToUnpack.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseTooManyValuesError(Py_ssize_t<sp/>expected);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseNeedMoreValuesToUnpack.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseNeedMoreValuesError(Py_ssize_t<sp/>index);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IterFinish.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IterFinish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UnpackItemEndCheck.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IternextUnpackEndCheck(PyObject<sp/>*retval,<sp/>Py_ssize_t<sp/>expected);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyIntBinop.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyInt_AddObjC(PyObject<sp/>*op1,<sp/>PyObject<sp/>*op2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>intval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inplace,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zerodivision_check);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyInt_AddObjC(op1,<sp/>op2,<sp/>intval,<sp/>inplace,<sp/>zerodivision_check)\</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(inplace<sp/>?<sp/>PyNumber_InPlaceAdd(op1,<sp/>op2)<sp/>:<sp/>PyNumber_Add(op1,<sp/>op2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyErrExceptionMatches.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_ExceptionMatches(err)<sp/>__Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate,<sp/>err)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_ExceptionMatchesInState(PyThreadState*<sp/>tstate,<sp/>PyObject*<sp/>err);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_ExceptionMatches(err)<sp/><sp/>PyErr_ExceptionMatches(err)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetAttr.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetAttr(PyObject<sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetAttr3.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetAttr3(PyObject<sp/>*,<sp/>PyObject<sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ArgTypeTest.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ArgTypeTest(obj,<sp/>type,<sp/>none_allowed,<sp/>name,<sp/>exact)\</highlight></codeline>
<codeline lineno="1281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((likely((Py_TYPE(obj)<sp/>==<sp/>type)<sp/>|<sp/>(none_allowed<sp/>&amp;&amp;<sp/>(obj<sp/>==<sp/>Py_None))))<sp/>?<sp/>1<sp/>:\</highlight></codeline>
<codeline lineno="1282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx__ArgTypeTest(obj,<sp/>type,<sp/>name,<sp/>exact))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx__ArgTypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseException.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb,<sp/>PyObject<sp/>*cause);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WriteUnraisableException.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_WriteUnraisable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clineno,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_traceback,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nogil);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectSetAttrStr.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_DelAttrStr(o,n)<sp/>__Pyx_PyObject_SetAttrStr(o,<sp/>n,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_SetAttrStr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name,<sp/>PyObject*<sp/>value);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_DelAttrStr(o,n)<sp/><sp/><sp/>PyObject_DelAttr(o,n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_SetAttrStr(o,n,v)<sp/>PyObject_SetAttr(o,n,v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FetchCommonType.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject*<sp/>__Pyx_FetchCommonType(PyTypeObject*<sp/>type);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CythonFunctionShared.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_USED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CYFUNCTION_STATICMETHOD<sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CYFUNCTION_CLASSMETHOD<sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CYFUNCTION_CCLASS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_GetClosure(f)\</highlight></codeline>
<codeline lineno="1311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((__pyx_CyFunctionObject<sp/>*)<sp/>(f))-&gt;func_closure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_GetClassObj(f)\</highlight></codeline>
<codeline lineno="1313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((__pyx_CyFunctionObject<sp/>*)<sp/>(f))-&gt;func_classobj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_Defaults(type,<sp/>f)\</highlight></codeline>
<codeline lineno="1315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((type<sp/>*)(((__pyx_CyFunctionObject<sp/>*)<sp/>(f))-&gt;defaults))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_SetDefaultsGetter(f,<sp/>g)\</highlight></codeline>
<codeline lineno="1317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((__pyx_CyFunctionObject<sp/>*)<sp/>(f))-&gt;defaults_getter<sp/>=<sp/>(g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunctionObject<sp/>func;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030500A0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_weakreflist;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_dict;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_name;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_qualname;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_doc;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_globals;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_code;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_closure;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_classobj;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*defaults;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaults_pyobjects;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>defaults_size;<sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>FusedFunction<sp/>for<sp/>copying<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*defaults_tuple;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*defaults_kwdict;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*(*defaults_getter)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*func_annotations;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}<sp/>__pyx_CyFunctionObject;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_CyFunctionType<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_Check(obj)<sp/><sp/>(__Pyx_TypeCheck(obj,<sp/>__pyx_CyFunctionType))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_Init(__pyx_CyFunctionObject*<sp/>op,<sp/>PyMethodDef<sp/>*ml,</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>PyObject*<sp/>qualname,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*module,<sp/>PyObject<sp/>*globals,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>code);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__Pyx_CyFunction_InitDefaults(PyObject<sp/>*m,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pyobjects);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetDefaultsTuple(PyObject<sp/>*m,</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tuple);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetDefaultsKwDict(PyObject<sp/>*m,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*dict);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetAnnotationsDict(PyObject<sp/>*m,</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*dict);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_CyFunction_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CythonFunction.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_New(PyMethodDef<sp/>*ml,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>PyObject*<sp/>qualname,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*closure,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*module,<sp/>PyObject<sp/>*globals,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>code);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SliceTupleAndList.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyList_GetSlice(PyObject*<sp/>src,<sp/>Py_ssize_t<sp/>start,<sp/>Py_ssize_t<sp/>stop);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyTuple_GetSlice(PyObject*<sp/>src,<sp/>Py_ssize_t<sp/>start,<sp/>Py_ssize_t<sp/>stop);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyList_GetSlice(seq,<sp/>start,<sp/>stop)<sp/><sp/><sp/>PySequence_GetSlice(seq,<sp/>start,<sp/>stop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyTuple_GetSlice(seq,<sp/>start,<sp/>stop)<sp/><sp/>PySequence_GetSlice(seq,<sp/>start,<sp/>stop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Import.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Import(PyObject<sp/>*name,<sp/>PyObject<sp/>*from_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ImportFrom.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_ImportFrom(PyObject*<sp/>module,<sp/>PyObject*<sp/>name);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>HasAttr.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_HasAttr(PyObject<sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObject_GenericGetAttrNoDict.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GenericGetAttrNoDict(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_GenericGetAttrNoDict<sp/>PyObject_GenericGetAttr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObject_GenericGetAttr.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyObject_GenericGetAttr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyObject_GenericGetAttr<sp/>PyObject_GenericGetAttr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetAttrStrNoError.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetAttrStrNoError(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetupReduce.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_setup_reduce(PyObject*<sp/>type_obj);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetVTable.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_SetVtable(PyObject<sp/>*dict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*vtable);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetNameInClass.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030500A1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_SetNameInClass(ns,<sp/>name,<sp/>value)\</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(likely(PyDict_CheckExact(ns))<sp/>?<sp/>_PyDict_SetItem_KnownHash(ns,<sp/>name,<sp/>value,<sp/>((PyASCIIObject<sp/>*)<sp/>name)-&gt;hash)<sp/>:<sp/>PyObject_SetItem(ns,<sp/>name,<sp/>value))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_SetNameInClass(ns,<sp/>name,<sp/>value)\</highlight></codeline>
<codeline lineno="1412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(likely(PyDict_CheckExact(ns))<sp/>?<sp/>PyDict_SetItem(ns,<sp/>name,<sp/>value)<sp/>:<sp/>PyObject_SetItem(ns,<sp/>name,<sp/>value))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_SetNameInClass(ns,<sp/>name,<sp/>value)<sp/><sp/>PyObject_SetItem(ns,<sp/>name,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CalculateMetaclass.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CalculateMetaclass(PyTypeObject<sp/>*metaclass,<sp/>PyObject<sp/>*bases);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py3ClassCreate.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Py3MetaclassPrepare(PyObject<sp/>*metaclass,<sp/>PyObject<sp/>*bases,<sp/>PyObject<sp/>*name,<sp/>PyObject<sp/>*qualname,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*mkw,<sp/>PyObject<sp/>*modname,<sp/>PyObject<sp/>*doc);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Py3ClassCreate(PyObject<sp/>*metaclass,<sp/>PyObject<sp/>*name,<sp/>PyObject<sp/>*bases,<sp/>PyObject<sp/>*dict,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*mkw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calculate_metaclass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_py2_metaclass);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetMethod.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetMethod(PyObject<sp/>*obj,<sp/>PyObject<sp/>*name,<sp/>PyObject<sp/>**method);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallMethod1.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyObject_CallMethod1(PyObject*<sp/>obj,<sp/>PyObject*<sp/>method_name,<sp/>PyObject*<sp/>arg);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>append.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_Append(PyObject*<sp/>L,<sp/>PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SliceObject.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetSlice(</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>obj,<sp/>Py_ssize_t<sp/>cstart,<sp/>Py_ssize_t<sp/>cstop,</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject**<sp/>py_start,<sp/>PyObject**<sp/>py_stop,<sp/>PyObject**<sp/>py_slice,</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_cstart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_cstop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CLineInTraceback.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CYTHON_CLINE_IN_TRACEBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CLineForTraceback(tstate,<sp/>c_line)<sp/><sp/>(((CYTHON_CLINE_IN_TRACEBACK))<sp/>?<sp/>c_line<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_CLineForTraceback(PyThreadState<sp/>*tstate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_line);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CodeObjectCache.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject*<sp/>code_object;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">}<sp/>__Pyx_CodeObjectCacheEntry;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__Pyx_CodeObjectCache<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CodeObjectCacheEntry*<sp/>entries;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__Pyx_CodeObjectCache<sp/>__pyx_code_cache<sp/>=<sp/>{0,0,NULL};</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry*<sp/>entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyCodeObject<sp/>*__pyx_find_code_object(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_insert_code_object(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line,<sp/>PyCodeObject*<sp/>code_object);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>AddTraceback.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_line,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntToPy.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyInt_From_int(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Print.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject*,<sp/>PyObject<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>||<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__pyx_print<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__pyx_print_kwargs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntToPy.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyInt_From_long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntFromPy.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_As_int(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntFromPy.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_As_long(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PrintOne.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject*<sp/>stream,<sp/>PyObject<sp/>*o);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FastTypeChecks.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_TypeCheck(obj,<sp/>type)<sp/>__Pyx_IsSubtype(Py_TYPE(obj),<sp/>(PyTypeObject<sp/>*)type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IsSubtype(PyTypeObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyTypeObject<sp/>*b);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatches(PyObject<sp/>*err,<sp/>PyObject<sp/>*type);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatches2(PyObject<sp/>*err,<sp/>PyObject<sp/>*type1,<sp/>PyObject<sp/>*type2);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_TypeCheck(obj,<sp/>type)<sp/>PyObject_TypeCheck(obj,<sp/>(PyTypeObject<sp/>*)type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_GivenExceptionMatches(err,<sp/>type)<sp/>PyErr_GivenExceptionMatches(err,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyErr_GivenExceptionMatches2(err,<sp/>type1,<sp/>type2)<sp/>(PyErr_GivenExceptionMatches(err,<sp/>type1)<sp/>||<sp/>PyErr_GivenExceptionMatches(err,<sp/>type2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyException_Check(obj)<sp/>__Pyx_TypeCheck(obj,<sp/>PyExc_Exception)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CheckBinaryVersion.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_check_binary_version(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>InitStrings.proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(__Pyx_StringTabEntry<sp/>*t);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__pyx_ctuple_double__and_double<sp/>__pyx_f_16seine_data_utils_7Segment_eq_droite(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>declarations<sp/>from<sp/>&apos;seine_data_utils&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_16seine_data_utils_Point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_16seine_data_utils_DansLeSegmentNotError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_16seine_data_utils_Segment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_Point__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*,<sp/>PyObject<sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_DansLeSegmentNotError__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*,<sp/>PyObject<sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_Segment__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*,<sp/>PyObject<sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_MODULE_NAME<sp/>&quot;seine_data_utils&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_module_is_main_seine_data_utils;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_module_is_main_seine_data_utils<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Implementation<sp/>of<sp/>&apos;seine_data_utils&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_map;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_range;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_zip;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_open;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_ZeroDivisionError;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_a[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_b[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_e[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_r[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_x[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_y[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__3[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__5[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__8[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__9[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_np[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;np&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_re[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;re&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_doc[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_end[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_gca[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gca&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_int[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_lat[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_map[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_new[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__new__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_plt[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;plt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_red[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_res[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;res&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_seg[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;seg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_x_1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x_1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_x_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x_2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_y_1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;y_1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_y_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;y_2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_zip[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;zip&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_List[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;List&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Path[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Path&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_axis[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;axis&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_dict[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__dict__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_exit[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__exit__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_file[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__file__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_init[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_main[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_name[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_open[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_plot[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_self[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_show[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;show&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_test[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__test__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_utf8[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;utf8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_xlim[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;xlim&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_ylim[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ylim&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Point[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Point&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Tuple[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tuple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_black[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_color[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_enter[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__enter__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_equal[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;equal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_green[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_group[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_ligne[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ligne&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_match[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;match&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_numpy[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;numpy&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_piche[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;piche&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_point[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_print[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_range[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_split[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;split&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_value[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_append[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_coords[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coords&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_file_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_import[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__import__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_lambda[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;lambda&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_marker[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;marker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_module[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_orange[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_parent[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;parent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pickle[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pickle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pprint[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pprint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_reduce[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_return[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;return&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_search[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;search&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_typing[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;typing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_update[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_violet[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;violet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Segment[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Segment&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_compile[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;compile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_couleur[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;couleur&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_darkred[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;darkred&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pathlib[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pathlib&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_point_1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;point_1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_point_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;point_2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_prepare[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__prepare__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_resolve[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;resolve&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_scatter[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scatter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_segment[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;segment&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_BASE_DIR[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BASE_DIR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_darkblue[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;darkblue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_encoding[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;encoding&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_getstate[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__getstate__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_linspace[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linspace&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_longueur[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;longueur&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_no_coord[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;no_coord&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_type[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_qualname[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__qualname__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_setstate[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__setstate__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_FILE_PATH[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE_PATH&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_linewidth[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linewidth&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_metaclass[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__metaclass__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_state[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_state&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_readlines[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readlines&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_reduce_ex[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__reduce_ex__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_seine_KML[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;seine_KML&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_en_dessous[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_get_coords[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_coords&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_no_coord_1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;no_coord_1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_no_coord_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;no_coord_2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_result[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_result&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_vtable[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_vtable__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_set_aspect[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set_aspect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_str_coords[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;str_coords&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_PickleError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PickleError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_get_KML_data[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_KML_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_kml_filename[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;kml_filename&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_points[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_points&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_checksum[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_checksum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_stringsource[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stringsource&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_tight_layout[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tight_layout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_reduce_cython[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere_plot[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.plot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_calcul_droites[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;calcul_droites&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_frontiere_nord[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;frontiere_nord&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_segments[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_segments&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_frontiere_Marne[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;frontiere_Marne&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_frontiere_ouest[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;frontiere_ouest&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_PickleError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_PickleError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_setstate_cython[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere___init[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.__init__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_frontieres[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_frontieres&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_not_in_frontiere[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_not_in_frontiere&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_seine_data_utils[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_REGEX_COORDINATES[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;REGEX_COORDINATES&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_ZeroDivisionError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ZeroDivisionError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_dans_la_frontiere[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_dans_la_frontiere&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_coordonnees[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_coordonnees:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_matplotlib_pyplot[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;matplotlib.pyplot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_cline_in_traceback[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cline_in_traceback&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_unpickle_Point[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_coordonnees_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_coordonnees&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_droites_Marne[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_droites_Marne<sp/>:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_droites_Seine[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_droites_Seine<sp/>:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere_en_dessous[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.en_dessous&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_data_trace_seine_kml[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data/trace_seine.kml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_segments_Marne[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_segments_Marne&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_segments_Seine[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_segments_Seine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_unpickle_Segment[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_DansLeSegmentNotError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DansLeSegmentNotError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_get_frontieres_utiles[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_frontieres_utiles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_droites_Marne_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_droites_Marne&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_liste_droites_Seine_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;liste_droites_Seine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_HorsDeLaFrontiereError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HorsDeLaFrontiereError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_DansLaFrontiereNotError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DansLaFrontiereNotError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_coordinates_0_coordinates[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\\/coordinates&gt;))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_utils_seine_data_utils_pyx[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;utils\\seine_data_utils.pyx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_pyx_unpickle_DansLeSegmentNotE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere_DansLaFrontiereNotErro[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.DansLaFrontiereNotError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere_HorsDeLaFrontiereError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.HorsDeLaFrontiereError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Incompatible_checksums_s_vs_0x71[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Incompatible_checksums_s_vs_0x9b[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Incompatible_checksums_s_vs_0xc8[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_get_frontieres_utiles_locals_lam[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_frontieres_utiles.&lt;locals&gt;.&lt;lambda&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_Frontiere_DansLaFrontiereNotErro_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Frontiere.DansLaFrontiereNotError.__init__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_BASE_DIR;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_DansLaFrontiereNotError;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_DansLeSegmentNotError;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_FILE_PATH;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere_DansLaFrontiereNotErro;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere_DansLaFrontiereNotErro_2;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere_HorsDeLaFrontiereError;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere___init;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere_en_dessous;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Frontiere_plot;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_HorsDeLaFrontiereError;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_Incompatible_checksums_s_vs_0x71;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_Incompatible_checksums_s_vs_0x9b;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_Incompatible_checksums_s_vs_0xc8;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_List;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Path;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_PickleError;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Point;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_u_Point;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_REGEX_COORDINATES;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Segment;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_Tuple;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_ZeroDivisionError;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s__3;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s__5;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s__8;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__9;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_a;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_append;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_axis;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_b;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_black;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_calcul_droites;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_cline_in_traceback;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_color;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_compile;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_coordinates_0_coordinates;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_coords;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_couleur;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_dans_la_frontiere;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_darkblue;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_darkred;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_data_trace_seine_kml;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_dict;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_doc;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_e;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_en_dessous;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_encoding;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_end;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_enter;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_equal;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_exit;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_file;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_file_2;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_frontiere_Marne;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_frontiere_nord;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_frontiere_ouest;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_gca;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_get_KML_data;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_get_coords;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_get_frontieres_utiles;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_get_frontieres_utiles_locals_lam;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_getstate;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_green;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_group;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_import;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_init;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_u_int;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_kml_filename;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_lambda;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_lat;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_ligne;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_linewidth;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_linspace;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_liste_coordonnees;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_coordonnees_2;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_liste_droites_Marne;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_droites_Marne_2;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_liste_droites_Seine;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_droites_Seine_2;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_frontieres;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_points;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_segments;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_segments_Marne;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_liste_segments_Seine;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_longueur;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_main;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_map;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_marker;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_match;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_matplotlib_pyplot;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_metaclass;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_module;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_name;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_new;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_no_coord;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_no_coord_1;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_no_coord_2;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_not_in_frontiere;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_np;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_numpy;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_open;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_orange;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_parent;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pathlib;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_piche;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pickle;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_plot;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_plt;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_point;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_point_1;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_point_2;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pprint;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_prepare;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_print;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_PickleError;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_checksum;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_result;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_state;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_type;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_unpickle_DansLeSegmentNotE;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_unpickle_Point;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_unpickle_Segment;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_pyx_vtable;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_qualname;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_r;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_range;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_re;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_readlines;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_red;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_reduce;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_reduce_cython;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_reduce_ex;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_res;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_resolve;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_return;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_scatter;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_search;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_seg;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_segment;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_seine_KML;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_seine_data_utils;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_self;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_set_aspect;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_setstate;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_setstate_cython;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_show;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_split;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_str_coords;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_stringsource;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_test;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_tight_layout;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_typing;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_update;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_utf8;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_utils_seine_data_utils_pyx;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_value;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_violet;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_x;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_x_1;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_x_2;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_xlim;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_y;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_y_1;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_y_2;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_ylim;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_zip;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_lambda_funcdef_16seine_data_utils_lambda1(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_get_KML_data(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_kml_filename);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_2get_coords(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_seine_KML);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_4calcul_droites(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_liste_coordonnees);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_longueur,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_lat);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_2plot(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_1x___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point_1x_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_1y___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point_1y_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_4__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_6__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_2__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_4__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_1,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_2);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_2en_dessous(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_4plot(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_12point_gauche___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_4__del__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_11point_droit___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_4__del__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_1a___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_1a_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_1b___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_1b_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_6__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_8__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_6_not_in_frontiere(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_8_dans_la_frontiere(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere___init__(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_liste_segments);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_23DansLaFrontiereNotError___init__(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere_2en_dessous(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere_4plot(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_lambda_funcdef_lambda(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_10get_frontieres_utiles(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_12__pyx_unpickle_Point(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_14__pyx_unpickle_DansLeSegmentNotError(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_16__pyx_unpickle_Segment(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_Point(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyObject<sp/>*k);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_DansLeSegmentNotError(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyObject<sp/>*k);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_Segment(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyObject<sp/>*k);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_0_2;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_2_2;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_2_45;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_48_75;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_48_76;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_float_48_97;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_1;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_2;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_3;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_5;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_15;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_16;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_17;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_31;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_32;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_33;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_34;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_49;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_100;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_118661799;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_162662166;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_210574057;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_k__2;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_k__4;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple_;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__6;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__7;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__32;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__33;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__36;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__38;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__40;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__41;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__43;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_slice__44;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__10;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__11;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__13;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__15;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__19;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__21;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__23;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__25;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__27;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__28;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__30;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__31;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__34;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__35;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__37;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__39;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__42;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__45;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__46;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__47;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__48;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__50;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tuple__52;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__12;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__14;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__16;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__17;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__18;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__20;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__22;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__24;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__26;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__29;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__49;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__51;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_codeobj__53;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Late<sp/>includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:245</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_points)</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_18lambda1(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_18lambda1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;lambda1&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_18lambda1,<sp/>METH_O,<sp/>0};</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_18lambda1(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;lambda1<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_lambda_funcdef_16seine_data_utils_lambda1(__pyx_self,<sp/>((PyObject<sp/>*)__pyx_v_p));</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_lambda_funcdef_16seine_data_utils_lambda1(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;lambda1&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PySequence_Tuple(__pyx_v_p);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Point),<sp/>__pyx_t_1,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.lambda1&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:25</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_1get_KML_data(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_1get_KML_data<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;get_KML_data&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_1get_KML_data,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_1get_KML_data(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_kml_filename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_KML_data<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_kml_filename,0};</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>((PyObject<sp/>*)__pyx_kp_s_data_trace_seine_kml);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_kml_filename);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[0]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;get_KML_data&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_kml_filename<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;get_KML_data&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_KML_data&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_get_KML_data(__pyx_self,<sp/>__pyx_v_kml_filename);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_get_KML_data(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_kml_filename)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_seine_KML<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_10;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_11;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_KML_data&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:28</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>open(BASE_DIR/kml_filename,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="2130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*with:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_BASE_DIR);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyNumber_Divide(__pyx_t_1,<sp/>__pyx_v_kml_filename);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_n_s_r);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_r);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_n_s_r);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyDict_NewPresized(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_2,<sp/>__pyx_n_s_encoding,<sp/>__pyx_n_s_utf8)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_open,<sp/>__pyx_t_1,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_LookupSpecial(__pyx_t_3,<sp/>__pyx_n_s_exit);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_LookupSpecial(__pyx_t_3,<sp/>__pyx_n_s_enter);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_1);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_1,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_5)<sp/>:<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*try:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionSave(&amp;__pyx_t_6,<sp/>&amp;__pyx_t_7,<sp/>&amp;__pyx_t_8);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*try:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_file<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:29</highlight></codeline>
<codeline lineno="2187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>open(BASE_DIR/kml_filename,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2189"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2190"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="2191"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_file,<sp/>__pyx_n_s_readlines);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>29,<sp/>__pyx_L7_error)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_3)))<sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_3);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_3,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_2)<sp/>?<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_3,<sp/>__pyx_t_2)<sp/>:<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_3);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>29,<sp/>__pyx_L7_error)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_seine_KML<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:28</highlight></codeline>
<codeline lineno="2214"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>open(BASE_DIR/kml_filename,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L12_try_end;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L7_error:;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*except:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_KML_data&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_GetException(&amp;__pyx_t_1,<sp/>&amp;__pyx_t_3,<sp/>&amp;__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L9_except_error)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_Pack(3,<sp/>__pyx_t_1,<sp/>__pyx_t_3,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L9_except_error)</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_4,<sp/>__pyx_t_5,<sp/>NULL);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L9_except_error)</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_9);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_10<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L9_except_error)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>((!(__pyx_t_10<sp/>!=<sp/>0))<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_11)<sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ErrRestoreWithState(__pyx_t_1,<sp/>__pyx_t_3,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;<sp/>__pyx_t_3<sp/>=<sp/>0;<sp/>__pyx_t_2<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L9_except_error)</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_exception_handled;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L9_except_error:;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionReset(__pyx_t_6,<sp/>__pyx_t_7,<sp/>__pyx_t_8);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8_exception_handled:;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionReset(__pyx_t_6,<sp/>__pyx_t_7,<sp/>__pyx_t_8);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L12_try_end:;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*finally:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*normal<sp/>exit:*/</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_4,<sp/>__pyx_tuple_,<sp/>NULL);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L16;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L16:;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:30</highlight></codeline>
<codeline lineno="2295"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>open(BASE_DIR/kml_filename,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_v_seine_KML))<sp/>{<sp/>__Pyx_RaiseUnboundLocalError(</highlight><highlight class="stringliteral">&quot;seine_KML&quot;</highlight><highlight class="normal">);<sp/>__PYX_ERR(0,<sp/>30,<sp/>__pyx_L1_error)<sp/>}</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_seine_KML);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_seine_KML;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:25</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)</highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2312"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_KML_data&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_file);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_seine_KML);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:32</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2334"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2335"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="2336"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2337"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_3get_coords(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_3get_coords<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;get_coords&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_3get_coords,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_3get_coords(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_seine_KML<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_coords<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_seine_KML,0};</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>__pyx_k__2;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_seine_KML);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[0]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;get_coords&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_seine_KML<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;get_coords&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_coords&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_2get_coords(__pyx_self,<sp/>__pyx_v_seine_KML);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_2get_coords(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_seine_KML)<sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_coordonnees<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_ligne<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_match<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_str_coords<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_coords<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_3)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_7;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_coords&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:33</highlight></codeline>
<codeline lineno="2421"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2422"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:</highlight></codeline>
<codeline lineno="2423"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2424"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>ligne<sp/>in<sp/>seine_KML:</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>33,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/>__pyx_v_liste_coordonnees<sp/>=<sp/>((PyObject*)__pyx_t_1);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:35</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2435"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>ligne<sp/>in<sp/>seine_KML:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2436"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)</highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_v_seine_KML))<sp/>||<sp/>PyTuple_CheckExact(__pyx_v_seine_KML))<sp/>{</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_v_seine_KML;<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>-1;<sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetIter(__pyx_v_seine_KML);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>Py_TYPE(__pyx_t_1)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_3))<sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_4);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_4);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_3(__pyx_t_1);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>35,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_ligne,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:36</highlight></codeline>
<codeline lineno="2482"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>ligne<sp/>in<sp/>seine_KML:</highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>match:</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_REGEX_COORDINATES);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>36,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_5,<sp/>__pyx_n_s_search);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>36,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_6,<sp/>__pyx_t_5,<sp/>__pyx_v_ligne)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_v_ligne);</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>36,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_match,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:38</highlight></codeline>
<codeline lineno="2512"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2514"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>match:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2515"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)</highlight></codeline>
<codeline lineno="2516"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(&quot;,&quot;)))</highlight></codeline>
<codeline lineno="2517"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_v_match);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>38,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_7)<sp/>{</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:39</highlight></codeline>
<codeline lineno="2522"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>match:</highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(&quot;,&quot;)))</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)</highlight></codeline>
<codeline lineno="2527"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_match,<sp/>__pyx_n_s_group);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>39,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_6,<sp/>__pyx_t_5,<sp/>__pyx_int_0)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>39,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_str_coords,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:40</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>match:</highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)</highlight></codeline>
<codeline lineno="2551"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(&quot;,&quot;)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2552"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)</highlight></codeline>
<codeline lineno="2553"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2554"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_str_coords,<sp/>__pyx_n_s_split);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>40,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_6,<sp/>__pyx_t_5,<sp/>__pyx_kp_s__3)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_kp_s__3);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>40,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>40,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)(&amp;PyFloat_Type)));</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)(&amp;PyFloat_Type)));</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>((PyObject<sp/>*)(&amp;PyFloat_Type)));</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_map,<sp/>__pyx_t_6,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>40,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PySequence_Tuple(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>40,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_coords,<sp/>((PyObject*)__pyx_t_6));</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:41</highlight></codeline>
<codeline lineno="2590"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)</highlight></codeline>
<codeline lineno="2591"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(&quot;,&quot;)))</highlight></codeline>
<codeline lineno="2592"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2593"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2594"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="2595"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyList_Append(__pyx_v_liste_coordonnees,<sp/>__pyx_v_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_8<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>41,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:38</highlight></codeline>
<codeline lineno="2599"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)</highlight></codeline>
<codeline lineno="2600"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2601"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>match:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2602"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_coords<sp/>=<sp/>match.group(0)</highlight></codeline>
<codeline lineno="2603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>tuple(map(float,<sp/>str_coords.split(&quot;,&quot;)))</highlight></codeline>
<codeline lineno="2604"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:35</highlight></codeline>
<codeline lineno="2608"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="2609"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2610"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>ligne<sp/>in<sp/>seine_KML:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2611"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>REGEX_COORDINATES.search(ligne)</highlight></codeline>
<codeline lineno="2612"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2613"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:43</highlight></codeline>
<codeline lineno="2618"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)</highlight></codeline>
<codeline lineno="2619"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2620"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_coordonnees:<sp/>&quot;)</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_name);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>43,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/>__pyx_t_7<sp/>=<sp/>(__Pyx_PyString_Equals(__pyx_t_1,<sp/>__pyx_n_s_main,<sp/>Py_EQ));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>43,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_7)<sp/>{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:44</highlight></codeline>
<codeline lineno="2631"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2632"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="2633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_coordonnees:<sp/>&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)</highlight></codeline>
<codeline lineno="2635"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2636"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(0,<sp/>__pyx_kp_s_liste_coordonnees)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>44,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:45</highlight></codeline>
<codeline lineno="2640"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="2641"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_coordonnees:<sp/>&quot;)</highlight></codeline>
<codeline lineno="2642"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2643"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2644"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>45,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>45,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_4)))<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_4);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_4,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_6)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_4,<sp/>__pyx_t_6,<sp/>__pyx_v_liste_coordonnees)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_4,<sp/>__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>45,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:43</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_coordonnees.append(coords)</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_coordonnees:<sp/>&quot;)</highlight></codeline>
<codeline lineno="2673"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)</highlight></codeline>
<codeline lineno="2674"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:47</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_coordonnees)</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2680"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2681"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/>*<sp/>def<sp/>calcul_droites(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:</highlight></codeline>
<codeline lineno="2683"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_liste_coordonnees;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:32</highlight></codeline>
<codeline lineno="2690"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="2691"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2692"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2693"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="2694"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2695"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_coords&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_ligne);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_match);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_str_coords);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_coords);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:49</highlight></codeline>
<codeline lineno="2717"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="2718"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/>*<sp/>def<sp/>calcul_droites(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2721"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>a<sp/>obtenu<sp/>toutes<sp/>les<sp/>coordonnees<sp/>des<sp/>points</highlight></codeline>
<codeline lineno="2722"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5calcul_droites(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_5calcul_droites<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;calcul_droites&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_5calcul_droites,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5calcul_droites(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_coordonnees<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;calcul_droites<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_liste_coordonnees_2,0};</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>__pyx_k__4;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_liste_coordonnees_2);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[0]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;calcul_droites&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_liste_coordonnees<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;calcul_droites&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.calcul_droites&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_4calcul_droites(__pyx_self,<sp/>__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_4calcul_droites(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_liste_coordonnees)<sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_droites_Seine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_droites_Marne<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_x_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_y_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_x_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_y_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_a<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_b<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_4)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_8)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_9;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_10;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;calcul_droites&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:54</highlight></codeline>
<codeline lineno="2814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>tracer<sp/>des<sp/>droites<sp/>entre<sp/>ces<sp/>points</highlight></codeline>
<codeline lineno="2815"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2816"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2817"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Marne:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="2818"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2819"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>54,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>__pyx_v_liste_droites_Seine<sp/>=<sp/>((PyObject*)__pyx_t_1);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:55</highlight></codeline>
<codeline lineno="2826"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2827"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Marne:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2829"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2830"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="2831"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>55,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/>__pyx_v_liste_droites_Marne<sp/>=<sp/>((PyObject*)__pyx_t_1);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:57</highlight></codeline>
<codeline lineno="2838"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Marne:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="2839"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2840"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2841"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="2842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord]</highlight></codeline>
<codeline lineno="2843"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Length(__pyx_v_liste_coordonnees);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_2<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromSsize_t((__pyx_t_2<sp/>-<sp/>1));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_int_3);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_range,<sp/>__pyx_t_3,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_3);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>-1;<sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>Py_TYPE(__pyx_t_3)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_3)))<sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_3))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_3,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_3,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_3))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_3,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_3,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_4(__pyx_t_3);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>57,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:59</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_coordonnees,<sp/>__pyx_v_no_coord);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_1)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_unpacking_failed;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_unpacking_failed;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6_unpacking_done;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L5_unpacking_failed:;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>59,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L6_unpacking_done:;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_x_1,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_y_1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:60</highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord]</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord<sp/>+<sp/>1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2965"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_AddObjC(__pyx_v_no_coord,<sp/>__pyx_int_1,<sp/>1,<sp/>0,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_coordonnees,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_6)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7_unpacking_failed;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7_unpacking_failed;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_unpacking_done;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L7_unpacking_failed:;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>60,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8_unpacking_done:;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_x_2,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_y_2,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:62</highlight></codeline>
<codeline lineno="3025"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="3026"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3027"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3028"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="3029"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3030"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyNumber_Subtract(__pyx_v_y_2,<sp/>__pyx_v_y_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>62,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyNumber_Subtract(__pyx_v_x_2,<sp/>__pyx_v_x_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>62,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyNumber_Divide(__pyx_t_6,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>62,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_a,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:63</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3044"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="3045"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3046"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3047"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Seine.append((a,b))</highlight></codeline>
<codeline lineno="3048"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_Multiply(__pyx_v_a,<sp/>__pyx_v_x_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>63,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyNumber_Subtract(__pyx_v_y_1,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>63,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_b,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:65</highlight></codeline>
<codeline lineno="3058"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="3059"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3060"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Seine.append((a,b))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3061"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3062"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="3063"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>65,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_a);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_a);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_v_a);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_b);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_b);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_v_b);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>__Pyx_PyList_Append(__pyx_v_liste_droites_Seine,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_9<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>65,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:57</highlight></codeline>
<codeline lineno="3076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Marne:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="3077"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3078"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3079"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="3080"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord]</highlight></codeline>
<codeline lineno="3081"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:67</highlight></codeline>
<codeline lineno="3086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Seine.append((a,b))</highlight></codeline>
<codeline lineno="3087"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3088"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3089"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="3090"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="3091"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_int_34);</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>2,<sp/>__pyx_int_2);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_zip,<sp/>__pyx_t_1,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_5))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_5;<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>-1;<sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>Py_TYPE(__pyx_t_1)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_5);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__Pyx_INCREF(__pyx_t_5);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_2);<sp/>__pyx_t_2++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_4(__pyx_t_1);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_5)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_5)))<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L11_unpacking_failed;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L11_unpacking_failed;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L12_unpacking_done;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L11_unpacking_failed:;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>67,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L12_unpacking_done:;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord_1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord_2,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:70</highlight></codeline>
<codeline lineno="3217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="3218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="3219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord_1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3220"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord_2]</highlight></codeline>
<codeline lineno="3221"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_coordonnees,<sp/>__pyx_v_no_coord_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_5)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_5)))<sp/>{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L13_unpacking_failed;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L13_unpacking_failed;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L14_unpacking_done;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L13_unpacking_failed:;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>70,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L14_unpacking_done:;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_x_1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_y_1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:71</highlight></codeline>
<codeline lineno="3277"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="3278"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>liste_coordonnees[no_coord_1]</highlight></codeline>
<codeline lineno="3279"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord_2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3280"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3281"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="3282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_coordonnees,<sp/>__pyx_v_no_coord_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_5)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_5)))<sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L15_unpacking_failed;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_8(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L15_unpacking_failed;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L16_unpacking_done;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L15_unpacking_failed:;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>71,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L16_unpacking_done:;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_x_2,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_y_2,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:73</highlight></codeline>
<codeline lineno="3337"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>liste_coordonnees[no_coord_2]</highlight></codeline>
<codeline lineno="3338"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3339"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3340"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="3341"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3342"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyNumber_Subtract(__pyx_v_y_2,<sp/>__pyx_v_y_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>73,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyNumber_Subtract(__pyx_v_x_2,<sp/>__pyx_v_x_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>73,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyNumber_Divide(__pyx_t_5,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>73,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_a,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:74</highlight></codeline>
<codeline lineno="3355"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3356"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="3357"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3358"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3359"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Marne.append((a,b))</highlight></codeline>
<codeline lineno="3360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyNumber_Multiply(__pyx_v_a,<sp/>__pyx_v_x_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>74,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyNumber_Subtract(__pyx_v_y_1,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>74,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_b,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:76</highlight></codeline>
<codeline lineno="3370"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="3371"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3372"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Marne.append((a,b))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3373"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3374"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="3375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>76,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_a);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_a);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>__pyx_v_a);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_b);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_b);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>__pyx_v_b);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>__Pyx_PyList_Append(__pyx_v_liste_droites_Marne,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_9<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>76,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:67</highlight></codeline>
<codeline lineno="3388"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Seine.append((a,b))</highlight></codeline>
<codeline lineno="3389"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3390"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3391"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="3392"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="3393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:78</highlight></codeline>
<codeline lineno="3398"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Marne.append((a,b))</highlight></codeline>
<codeline lineno="3399"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3400"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Seine<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="3403"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_name);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>78,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>__pyx_t_10<sp/>=<sp/>(__Pyx_PyString_Equals(__pyx_t_1,<sp/>__pyx_n_s_main,<sp/>Py_EQ));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_10<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>78,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_10)<sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:79</highlight></codeline>
<codeline lineno="3411"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3412"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="3413"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Seine<sp/>:&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3414"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="3415"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Marne<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3416"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(0,<sp/>__pyx_kp_s_liste_droites_Seine)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>79,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:80</highlight></codeline>
<codeline lineno="3420"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="3421"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Seine<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3422"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3423"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Marne<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3424"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Marne)</highlight></codeline>
<codeline lineno="3425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>80,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>80,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_3)))<sp/>{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_3);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_3,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_6)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_3,<sp/>__pyx_t_6,<sp/>__pyx_v_liste_droites_Seine)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_3,<sp/>__pyx_v_liste_droites_Seine);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>80,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:81</highlight></codeline>
<codeline lineno="3449"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Seine<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3450"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="3451"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Marne<sp/>:&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Marne)</highlight></codeline>
<codeline lineno="3453"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3454"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(0,<sp/>__pyx_kp_s_liste_droites_Marne)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>81,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:82</highlight></codeline>
<codeline lineno="3458"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="3459"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Marne<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3460"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Marne)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3461"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3462"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_droites_Seine,<sp/>liste_droites_Marne</highlight></codeline>
<codeline lineno="3463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_3,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>82,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_3,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>82,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_3))<sp/>{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_3)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_6,<sp/>__pyx_t_3,<sp/>__pyx_v_liste_droites_Marne)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_v_liste_droites_Marne);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>82,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:78</highlight></codeline>
<codeline lineno="3487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_droites_Marne.append((a,b))</highlight></codeline>
<codeline lineno="3488"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3489"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3490"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;liste_droites_Seine<sp/>:&quot;)</highlight></codeline>
<codeline lineno="3491"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Seine)</highlight></codeline>
<codeline lineno="3492"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:84</highlight></codeline>
<codeline lineno="3496"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_droites_Marne)</highlight></codeline>
<codeline lineno="3497"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3498"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3499"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3500"><highlight class="comment"><sp/>*<sp/>#<sp/>point_spec<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="3501"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>84,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_liste_droites_Seine);</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_liste_droites_Seine);</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_liste_droites_Seine);</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_liste_droites_Marne);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_liste_droites_Marne);</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_v_liste_droites_Marne);</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:49</highlight></codeline>
<codeline lineno="3516"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="3517"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3518"><highlight class="comment"><sp/>*<sp/>def<sp/>calcul_droites(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3519"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3520"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>a<sp/>obtenu<sp/>toutes<sp/>les<sp/>coordonnees<sp/>des<sp/>points</highlight></codeline>
<codeline lineno="3521"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.calcul_droites&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_droites_Seine);</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_droites_Marne);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord);</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_x_1);</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_y_1);</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_x_2);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_y_2);</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_a);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_b);</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord_1);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord_2);</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:95</highlight></codeline>
<codeline lineno="3550"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>x,<sp/>y</highlight></codeline>
<codeline lineno="3551"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3552"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>double<sp/>longueur,<sp/>double<sp/>lat):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3553"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.x<sp/>=<sp/>longueur</highlight></codeline>
<codeline lineno="3554"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.y<sp/>=<sp/>lat</highlight></codeline>
<codeline lineno="3555"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_longueur;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_lat;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_longueur,&amp;__pyx_n_s_lat,0};</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_longueur))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_lat))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>__PYX_ERR(0,<sp/>95,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>95,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_longueur<sp/>=<sp/>__pyx_PyFloat_AsDouble(values[0]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v_longueur<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>95,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_lat<sp/>=<sp/>__pyx_PyFloat_AsDouble(values[1]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v_lat<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>95,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>95,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point___init__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self),<sp/>__pyx_v_longueur,<sp/>__pyx_v_lat);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_longueur,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_lat)<sp/>{</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:96</highlight></codeline>
<codeline lineno="3627"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3628"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>double<sp/>longueur,<sp/>double<sp/>lat):</highlight></codeline>
<codeline lineno="3629"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.x<sp/>=<sp/>longueur<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3630"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.y<sp/>=<sp/>lat</highlight></codeline>
<codeline lineno="3631"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3632"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;x<sp/>=<sp/>__pyx_v_longueur;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:97</highlight></codeline>
<codeline lineno="3636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>double<sp/>longueur,<sp/>double<sp/>lat):</highlight></codeline>
<codeline lineno="3637"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.x<sp/>=<sp/>longueur</highlight></codeline>
<codeline lineno="3638"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.y<sp/>=<sp/>lat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3639"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3640"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/>def<sp/>__repr__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="3641"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;y<sp/>=<sp/>__pyx_v_lat;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:95</highlight></codeline>
<codeline lineno="3645"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>x,<sp/>y</highlight></codeline>
<codeline lineno="3646"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3647"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>double<sp/>longueur,<sp/>double<sp/>lat):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3648"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.x<sp/>=<sp/>longueur</highlight></codeline>
<codeline lineno="3649"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.y<sp/>=<sp/>lat</highlight></codeline>
<codeline lineno="3650"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:102</highlight></codeline>
<codeline lineno="3659"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Point({self.x:2.5f},<sp/>{self.y:2.5f})&quot;</highlight></codeline>
<codeline lineno="3660"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3661"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(self.x,<sp/>self.y,<sp/>marker=&quot;.&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="3663"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3664"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_3plot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_3plot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_couleur<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_couleur,0};</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>((PyObject<sp/>*)__pyx_n_s_red);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_couleur);</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[0]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>102,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_couleur<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>102,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_2plot(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self),<sp/>__pyx_v_couleur);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_2plot(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur)<sp/>{</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:103</highlight></codeline>
<codeline lineno="3738"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3739"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="3740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(self.x,<sp/>self.y,<sp/>marker=&quot;.&quot;,<sp/>color=couleur)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3741"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3742"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>DansLeSegmentNotError(Exception):</highlight></codeline>
<codeline lineno="3743"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_scatter);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyDict_NewPresized(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_3,<sp/>__pyx_n_s_marker,<sp/>__pyx_kp_s__5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_3,<sp/>__pyx_n_s_color,<sp/>__pyx_v_couleur)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_t_4,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>103,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:102</highlight></codeline>
<codeline lineno="3773"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Point({self.x:2.5f},<sp/>{self.y:2.5f})&quot;</highlight></codeline>
<codeline lineno="3774"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3775"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3776"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(self.x,<sp/>self.y,<sp/>marker=&quot;.&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="3777"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3778"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:93</highlight></codeline>
<codeline lineno="3797"><highlight class="comment"><sp/>*<sp/>#<sp/>@jitclass(point_spec)</highlight></codeline>
<codeline lineno="3798"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Point:</highlight></codeline>
<codeline lineno="3799"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>x,<sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3800"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3801"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>double<sp/>longueur,<sp/>double<sp/>lat):</highlight></codeline>
<codeline lineno="3802"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_1x_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_1x_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_1x___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_1x___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>93,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.x.__get__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1x_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1x_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_1x_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point_1x_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>93,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;x<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.x.__set__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_1y_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_1y_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_1y___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_1y___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>93,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.y.__get__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1y_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1y_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_1y_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_5Point_1y_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>93,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;y<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.y.__set__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="3953"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3954"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="3955"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="3956"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_5__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_5__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_4__reduce_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_4__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v__dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_use_setstate;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="3988"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="3989"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="3990"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.x,<sp/>self.y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3991"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="3992"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="3993"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/>__pyx_v_state<sp/>=<sp/>((PyObject*)__pyx_t_3);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="4010"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="4011"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.x,<sp/>self.y)</highlight></codeline>
<codeline lineno="4012"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4013"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4014"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4015"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_GetAttr3(((PyObject<sp/>*)__pyx_v_self),<sp/>__pyx_n_s_dict,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/>__pyx_v__dict<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="4022"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.x,<sp/>self.y)</highlight></codeline>
<codeline lineno="4023"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4024"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4025"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4026"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4027"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v__dict<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>(__pyx_t_4<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="4033"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4034"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4035"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4036"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4037"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4038"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_v__dict);</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_InPlaceAdd(__pyx_v_state,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_v_state,<sp/>((PyObject*)__pyx_t_2));</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="4051"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4052"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4053"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4054"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4055"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4056"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="4060"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.x,<sp/>self.y)</highlight></codeline>
<codeline lineno="4061"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4062"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4063"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4064"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4065"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="4070"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4071"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4072"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4073"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="4074"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4075"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/>__pyx_L3:;</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="4082"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4083"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4084"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4085"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4087"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>(__pyx_v_use_setstate<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="4092"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4093"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="4094"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>None),<sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4095"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4096"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>state)</highlight></codeline>
<codeline lineno="4097"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_pyx_unpickle_Point);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(Py_None);</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>Py_None);</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="4128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:15</highlight></codeline>
<codeline lineno="4137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4140"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="4141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4142"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_pyx_unpickle_Point);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_int_210574057);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="4172"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4173"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="4174"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="4175"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="4193"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4194"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>state)</highlight></codeline>
<codeline lineno="4195"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4196"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4197"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_7__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_5Point_7__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_5Point_6__setstate_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v___pyx_state));</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_5Point_6__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:17</highlight></codeline>
<codeline lineno="4222"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>state)</highlight></codeline>
<codeline lineno="4223"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="4224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(self,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_Point__set_state(__pyx_v_self,<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="4232"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Point,<sp/>(type(self),<sp/>0xc8d1ae9,<sp/>state)</highlight></codeline>
<codeline lineno="4234"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4236"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Point.__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:107</highlight></codeline>
<codeline lineno="4252"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>DansLeSegmentNotError(Exception):</highlight></codeline>
<codeline lineno="4253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>int<sp/>res</highlight></codeline>
<codeline lineno="4254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>int<sp/>value):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4255"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="4256"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4257"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_value,0};</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_value))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>107,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_value<sp/>=<sp/>__Pyx_PyInt_As_int(values[0]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v_value<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>107,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>107,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError___init__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v_self),<sp/>__pyx_v_value);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:108</highlight></codeline>
<codeline lineno="4318"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>int<sp/>res</highlight></codeline>
<codeline lineno="4319"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>int<sp/>value):</highlight></codeline>
<codeline lineno="4320"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4321"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4322"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Segment:</highlight></codeline>
<codeline lineno="4323"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;res<sp/>=<sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:107</highlight></codeline>
<codeline lineno="4327"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>DansLeSegmentNotError(Exception):</highlight></codeline>
<codeline lineno="4328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>int<sp/>res</highlight></codeline>
<codeline lineno="4329"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>int<sp/>value):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4330"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="4331"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4332"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:106</highlight></codeline>
<codeline lineno="4341"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4342"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>DansLeSegmentNotError(Exception):</highlight></codeline>
<codeline lineno="4343"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>int<sp/>res<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4344"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>int<sp/>value):</highlight></codeline>
<codeline lineno="4345"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="4346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_From_int(__pyx_v_self-&gt;res);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>106,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError.res.__get__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_3res_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_As_int(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>106,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;res<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError.res.__set__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="4423"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4424"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="4425"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="4426"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_2__reduce_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_2__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v__dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_use_setstate;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="4458"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="4459"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="4460"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.res,)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4461"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4462"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_From_int(__pyx_v_self-&gt;res);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/>__pyx_v_state<sp/>=<sp/>((PyObject*)__pyx_t_2);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="4475"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="4476"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.res,)</highlight></codeline>
<codeline lineno="4477"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4478"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4480"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttr3(((PyObject<sp/>*)__pyx_v_self),<sp/>__pyx_n_s_dict,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/>__pyx_v__dict<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"></highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="4487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.res,)</highlight></codeline>
<codeline lineno="4488"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4489"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4490"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4491"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4492"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v__dict<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_3<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="4498"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4499"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4500"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4501"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4502"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4503"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_v__dict);</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_InPlaceAdd(__pyx_v_state,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_v_state,<sp/>((PyObject*)__pyx_t_1));</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="4516"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="4517"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4518"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4519"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4520"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4521"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="4525"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.res,)</highlight></codeline>
<codeline lineno="4526"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="4527"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4528"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="4529"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4530"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="4535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="4536"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4537"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4538"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="4539"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/>__pyx_L3:;</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="4547"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4548"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4549"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4550"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4551"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_use_setstate<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"></highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="4557"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4558"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="4559"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>None),<sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4560"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4561"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>state)</highlight></codeline>
<codeline lineno="4562"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_pyx_unpickle_DansLeSegmentNotE);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(Py_None);</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>2,<sp/>Py_None);</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="4593"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4594"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>False</highlight></codeline>
<codeline lineno="4595"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4596"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4597"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4598"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:15</highlight></codeline>
<codeline lineno="4602"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="4603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4604"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4605"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="4606"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4607"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_pyx_unpickle_DansLeSegmentNotE);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_int_162662166);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="4637"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4638"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="4639"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="4640"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError.__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="4658"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4659"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>state)</highlight></codeline>
<codeline lineno="4660"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4661"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4662"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_5__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_5__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_4__setstate_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v___pyx_state));</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_21DansLeSegmentNotError_4__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:17</highlight></codeline>
<codeline lineno="4687"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>state)</highlight></codeline>
<codeline lineno="4688"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="4689"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(self,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4690"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_DansLeSegmentNotError__set_state(__pyx_v_self,<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="4697"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4698"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_DansLeSegmentNotError,<sp/>(type(self),<sp/>0x9b20716,<sp/>state)</highlight></codeline>
<codeline lineno="4699"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4700"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="4701"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"></highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError.__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:115</highlight></codeline>
<codeline lineno="4717"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>cdef<sp/>dict<sp/>__dict__</highlight></codeline>
<codeline lineno="4718"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4719"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4720"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:</highlight></codeline>
<codeline lineno="4721"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4722"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1__init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_point_1,&amp;__pyx_n_s_point_2,0};</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_point_1))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_point_2))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>__PYX_ERR(0,<sp/>115,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>115,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_point_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*)values[0]);</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_point_2<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*)values[1]);</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>115,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_point_1),<sp/>__pyx_ptype_16seine_data_utils_Point,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;point_1&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>__PYX_ERR(0,<sp/>115,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_point_2),<sp/>__pyx_ptype_16seine_data_utils_Point,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;point_2&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>__PYX_ERR(0,<sp/>115,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment___init__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>__pyx_v_point_1,<sp/>__pyx_v_point_2);</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment___init__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_1,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point_2)<sp/>{</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/>__pyx_ctuple_double__and_double<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:116</highlight></codeline>
<codeline lineno="4804"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4805"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="4806"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4807"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4808"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4809"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((__pyx_v_point_1-&gt;x<sp/>&lt;=<sp/>__pyx_v_point_2-&gt;x)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:117</highlight></codeline>
<codeline lineno="4814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="4815"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:</highlight></codeline>
<codeline lineno="4816"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4817"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4818"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4819"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_point_1));</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_point_1));</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self-&gt;point_gauche<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_point_1);</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"></highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:118</highlight></codeline>
<codeline lineno="4827"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:</highlight></codeline>
<codeline lineno="4828"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4829"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4830"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4831"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4832"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_point_2));</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_point_2));</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self-&gt;point_droit<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_point_2);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:116</highlight></codeline>
<codeline lineno="4840"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4841"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="4842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4843"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4844"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4845"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3;</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:120</highlight></codeline>
<codeline lineno="4850"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4851"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4852"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4853"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4854"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4855"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_point_2));</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_point_2));</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self-&gt;point_gauche<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_point_2);</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:121</highlight></codeline>
<codeline lineno="4864"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="4865"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_2</highlight></codeline>
<codeline lineno="4866"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4867"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4868"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.b<sp/>=<sp/>self.eq_droite()</highlight></codeline>
<codeline lineno="4869"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_point_1));</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_point_1));</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self-&gt;point_droit<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_point_1);</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/>__pyx_L3:;</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"></highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:123</highlight></codeline>
<codeline lineno="4879"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_droit<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4880"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4881"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.b<sp/>=<sp/>self.eq_droite()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4882"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4883"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>(double,<sp/>double)<sp/>eq_droite(self):</highlight></codeline>
<codeline lineno="4884"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_vtabstruct_16seine_data_utils_Segment<sp/>*)__pyx_v_self-&gt;__pyx_vtab)-&gt;eq_droite(__pyx_v_self);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_2.f0;</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_2.f1;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;a<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;b<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:115</highlight></codeline>
<codeline lineno="4892"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>cdef<sp/>dict<sp/>__dict__</highlight></codeline>
<codeline lineno="4893"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4894"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>point_1:<sp/>Point,<sp/>point_2:<sp/>Point)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4895"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point_1.x<sp/>&lt;=<sp/>point_2.x:</highlight></codeline>
<codeline lineno="4896"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.point_gauche<sp/>=<sp/>point_1</highlight></codeline>
<codeline lineno="4897"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:125</highlight></codeline>
<codeline lineno="4906"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.b<sp/>=<sp/>self.eq_droite()</highlight></codeline>
<codeline lineno="4907"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4908"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>(double,<sp/>double)<sp/>eq_droite(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>def<sp/>eq_droite(self)<sp/>-&gt;<sp/>Tuple[float]:</highlight></codeline>
<codeline lineno="4910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Trouve<sp/>l&apos;quation<sp/>de<sp/>la<sp/>droite<sp/>porteuse<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="4911"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__pyx_ctuple_double__and_double<sp/>__pyx_f_16seine_data_utils_7Segment_eq_droite(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_x_1;</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_y_1;</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_x_2;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_y_2;</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_a;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_b;</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/>__pyx_ctuple_double__and_double<sp/>__pyx_r;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/>__pyx_ctuple_double__and_double<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;eq_droite&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:132</highlight></codeline>
<codeline lineno="4933"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>x_1,<sp/>y_1,<sp/>x_2,<sp/>y_2,<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="4934"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4935"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>self.point_gauche.x,<sp/>self.point_gauche.y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4936"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.point_droit.x,<sp/>self.point_droit.y</highlight></codeline>
<codeline lineno="4937"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4938"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>132,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>132,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>132,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_3<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>132,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/>__pyx_v_x_1<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/>__pyx_v_y_1<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:133</highlight></codeline>
<codeline lineno="4951"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4952"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>self.point_gauche.x,<sp/>self.point_gauche.y</highlight></codeline>
<codeline lineno="4953"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.point_droit.x,<sp/>self.point_droit.y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4954"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4955"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>x_1<sp/>==<sp/>x_2:</highlight></codeline>
<codeline lineno="4956"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>133,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_3<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>133,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>133,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>133,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/>__pyx_v_x_2<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/>__pyx_v_y_2<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:135</highlight></codeline>
<codeline lineno="4969"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.point_droit.x,<sp/>self.point_droit.y</highlight></codeline>
<codeline lineno="4970"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4971"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>x_1<sp/>==<sp/>x_2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4972"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ZeroDivisionError</highlight></codeline>
<codeline lineno="4973"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4974"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>((__pyx_v_x_1<sp/>==<sp/>__pyx_v_x_2)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:136</highlight></codeline>
<codeline lineno="4979"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4980"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>x_1<sp/>==<sp/>x_2:</highlight></codeline>
<codeline lineno="4981"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ZeroDivisionError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4982"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4983"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="4984"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_ZeroDivisionError,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>136,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:135</highlight></codeline>
<codeline lineno="4989"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.point_droit.x,<sp/>self.point_droit.y</highlight></codeline>
<codeline lineno="4990"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4991"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>x_1<sp/>==<sp/>x_2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4992"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ZeroDivisionError</highlight></codeline>
<codeline lineno="4993"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4994"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:138</highlight></codeline>
<codeline lineno="4998"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ZeroDivisionError</highlight></codeline>
<codeline lineno="4999"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5000"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5001"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="5002"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5003"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_v_y_2<sp/>-<sp/>__pyx_v_y_1);</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v_x_2<sp/>-<sp/>__pyx_v_x_1);</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ZeroDivisionError,<sp/></highlight><highlight class="stringliteral">&quot;float<sp/>division&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>138,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/>__pyx_v_a<sp/>=<sp/>(__pyx_t_2<sp/>/<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:139</highlight></codeline>
<codeline lineno="5013"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5014"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="5015"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5016"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5017"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="5018"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>__pyx_v_b<sp/>=<sp/>(__pyx_v_y_1<sp/>-<sp/>(__pyx_v_a<sp/>*<sp/>__pyx_v_x_1));</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:141</highlight></codeline>
<codeline lineno="5022"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_1<sp/>-<sp/>a*x_1</highlight></codeline>
<codeline lineno="5023"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5024"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a,<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5025"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5026"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="5027"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/>__pyx_t_5.f0<sp/>=<sp/>__pyx_v_a;</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/>__pyx_t_5.f1<sp/>=<sp/>__pyx_v_b;</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:125</highlight></codeline>
<codeline lineno="5034"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.a,<sp/>self.b<sp/>=<sp/>self.eq_droite()</highlight></codeline>
<codeline lineno="5035"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5036"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>(double,<sp/>double)<sp/>eq_droite(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5037"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>def<sp/>eq_droite(self)<sp/>-&gt;<sp/>Tuple[float]:</highlight></codeline>
<codeline lineno="5038"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Trouve<sp/>l&apos;quation<sp/>de<sp/>la<sp/>droite<sp/>porteuse<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5039"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/>__Pyx_WriteUnraisable(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.eq_droite&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/>__Pyx_pretend_to_initialize(&amp;__pyx_r);</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:143</highlight></codeline>
<codeline lineno="5052"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="5053"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5054"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>int:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5055"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>le<sp/>segment<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="5056"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5057"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5058"><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_3en_dessous(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_point);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_16seine_data_utils_7Segment_2en_dessous[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;D\303\251termine<sp/>si<sp/>le<sp/>segment<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn\303\251\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>du<sp/>segment\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_3en_dessous(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_point)<sp/>{</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;en_dessous<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_point),<sp/>__pyx_ptype_16seine_data_utils_Point,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>__PYX_ERR(0,<sp/>143,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_2en_dessous(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v_point));</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"></highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_2en_dessous(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point)<sp/>{</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_mini_x<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_maxi_x<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:147</highlight></codeline>
<codeline lineno="5098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5099"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="5100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_x<sp/>=<sp/>min(self.point_gauche.x,<sp/>self.point_droit.x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi_x<sp/>=<sp/>max(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="5102"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>147,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>147,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_RichCompare(__pyx_t_1,<sp/>__pyx_t_2,<sp/>Py_LT);<sp/>__Pyx_XGOTREF(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>147,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>147,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/>__pyx_v_mini_x<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:148</highlight></codeline>
<codeline lineno="5127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="5128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_x<sp/>=<sp/>min(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="5129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi_x<sp/>=<sp/>max(self.point_gauche.x,<sp/>self.point_droit.x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5130"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.x<sp/>&lt;<sp/>mini_x<sp/>or<sp/>maxi_x<sp/>&lt;<sp/>point.x:</highlight></codeline>
<codeline lineno="5132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>148,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>148,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_RichCompare(__pyx_t_1,<sp/>__pyx_t_3,<sp/>Py_GT);<sp/>__Pyx_XGOTREF(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>148,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>148,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/>__pyx_v_maxi_x<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:150</highlight></codeline>
<codeline lineno="5156"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi_x<sp/>=<sp/>max(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="5157"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.x<sp/>&lt;<sp/>mini_x<sp/>or<sp/>maxi_x<sp/>&lt;<sp/>point.x:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5159"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>le<sp/>point<sp/>est<sp/>en-dehors<sp/>des<sp/>bornes<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5160"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0</highlight></codeline>
<codeline lineno="5161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_point-&gt;x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_t_1,<sp/>__pyx_v_mini_x,<sp/>Py_LT);<sp/>__Pyx_XGOTREF(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_6<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_bool_binop_done;</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_point-&gt;x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_RichCompare(__pyx_v_maxi_x,<sp/>__pyx_t_2,<sp/>Py_LT);<sp/>__Pyx_XGOTREF(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_6<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>150,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/>__pyx_L4_bool_binop_done:;</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"></highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:152</highlight></codeline>
<codeline lineno="5184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.x<sp/>&lt;<sp/>mini_x<sp/>or<sp/>maxi_x<sp/>&lt;<sp/>point.x:</highlight></codeline>
<codeline lineno="5185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>le<sp/>point<sp/>est<sp/>en-dehors<sp/>des<sp/>bornes<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5186"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>raise<sp/>self.HorsDuSegmentError</highlight></codeline>
<codeline lineno="5188"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5189"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_int_0;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:150</highlight></codeline>
<codeline lineno="5196"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi_x<sp/>=<sp/>max(self.point_gauche.x,<sp/>self.point_droit.x)</highlight></codeline>
<codeline lineno="5197"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5198"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.x<sp/>&lt;<sp/>mini_x<sp/>or<sp/>maxi_x<sp/>&lt;<sp/>point.x:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>le<sp/>point<sp/>est<sp/>en-dehors<sp/>des<sp/>bornes<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0</highlight></codeline>
<codeline lineno="5201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:156</highlight></codeline>
<codeline lineno="5205"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5207"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.y<sp/>&gt;<sp/>self.a<sp/>*<sp/>point.x<sp/>+<sp/>self.b:<sp/>#<sp/>le<sp/>point<sp/>est<sp/>au-dessus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5208"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>1</highlight></codeline>
<codeline lineno="5209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(1)</highlight></codeline>
<codeline lineno="5210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>((__pyx_v_point-&gt;y<sp/>&gt;<sp/>((__pyx_v_self-&gt;a<sp/>*<sp/>__pyx_v_point-&gt;x)<sp/>+<sp/>__pyx_v_self-&gt;b))<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"></highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:158</highlight></codeline>
<codeline lineno="5216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.y<sp/>&gt;<sp/>self.a<sp/>*<sp/>point.x<sp/>+<sp/>self.b:<sp/>#<sp/>le<sp/>point<sp/>est<sp/>au-dessus</highlight></codeline>
<codeline lineno="5217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>1</highlight></codeline>
<codeline lineno="5218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5220"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="5221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_DansLeSegmentNotError),<sp/>__pyx_tuple__6,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>158,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_1,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>158,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"></highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:156</highlight></codeline>
<codeline lineno="5229"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5230"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5231"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.y<sp/>&gt;<sp/>self.a<sp/>*<sp/>point.x<sp/>+<sp/>self.b:<sp/>#<sp/>le<sp/>point<sp/>est<sp/>au-dessus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5232"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>1</highlight></codeline>
<codeline lineno="5233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(1)</highlight></codeline>
<codeline lineno="5234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:161</highlight></codeline>
<codeline lineno="5238"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="5240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5241"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5242"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/>def<sp/>__repr__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="5243"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_DansLeSegmentNotError),<sp/>__pyx_tuple__7,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>161,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_1,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>161,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:143</highlight></codeline>
<codeline lineno="5254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="5255"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>int:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5257"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>le<sp/>segment<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="5258"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>du<sp/>segment</highlight></codeline>
<codeline lineno="5259"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.en_dessous&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_mini_x);</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_maxi_x);</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:166</highlight></codeline>
<codeline lineno="5278"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Segment<sp/>entre<sp/>{self.point_gauche}<sp/>et<sp/>{self.point_droit}&quot;</highlight></codeline>
<codeline lineno="5279"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5280"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;darkblue&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5281"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="5282"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5283"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5284"><highlight class="normal"></highlight></codeline>
<codeline lineno="5285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_5plot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_5plot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_couleur<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_couleur,0};</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>((PyObject<sp/>*)__pyx_n_s_darkblue);</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_couleur);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[0]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>166,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_couleur<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>166,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_4plot(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>__pyx_v_couleur);</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"></highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_4plot(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur)<sp/>{</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:167</highlight></codeline>
<codeline lineno="5358"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5359"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;darkblue&quot;):</highlight></codeline>
<codeline lineno="5360"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5361"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5362"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():</highlight></codeline>
<codeline lineno="5363"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_4,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_gauche,<sp/>__pyx_n_s_y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self-&gt;point_droit,<sp/>__pyx_n_s_y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_kp_s__8);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_kp_s__8);</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>2,<sp/>__pyx_kp_s__8);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyDict_NewPresized(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_5,<sp/>__pyx_n_s_color,<sp/>__pyx_v_couleur)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_t_1,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>167,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:166</highlight></codeline>
<codeline lineno="5415"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Segment<sp/>entre<sp/>{self.point_gauche}<sp/>et<sp/>{self.point_droit}&quot;</highlight></codeline>
<codeline lineno="5416"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5417"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;darkblue&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5418"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="5419"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"></highlight></codeline>
<codeline lineno="5439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:111</highlight></codeline>
<codeline lineno="5440"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5441"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Segment:</highlight></codeline>
<codeline lineno="5442"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>object<sp/>point_gauche,<sp/>point_droit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5443"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>a,<sp/>b</highlight></codeline>
<codeline lineno="5444"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>cdef<sp/>dict<sp/>__dict__</highlight></codeline>
<codeline lineno="5445"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5446"><highlight class="normal"></highlight></codeline>
<codeline lineno="5447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_12point_gauche_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_12point_gauche_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"></highlight></codeline>
<codeline lineno="5460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_12point_gauche___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self-&gt;point_gauche;</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"></highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_value);</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_value);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;point_gauche<sp/>=<sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_5__del__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_5__del__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__del__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_4__del__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"></highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_12point_gauche_4__del__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(Py_None);</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;point_gauche<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"></highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"></highlight></codeline>
<codeline lineno="5534"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_11point_droit_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_11point_droit_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"></highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_11point_droit___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self-&gt;point_droit;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"></highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"></highlight></codeline>
<codeline lineno="5576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_value);</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_value);</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;point_droit<sp/>=<sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_5__del__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_5__del__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__del__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_4__del__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"></highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"></highlight></codeline>
<codeline lineno="5605"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_11point_droit_4__del__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(Py_None);</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;point_droit<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"></highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"></highlight></codeline>
<codeline lineno="5621"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:112</highlight></codeline>
<codeline lineno="5622"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Segment:</highlight></codeline>
<codeline lineno="5623"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>object<sp/>point_gauche,<sp/>point_droit</highlight></codeline>
<codeline lineno="5624"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>public<sp/>double<sp/>a,<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5625"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>cdef<sp/>dict<sp/>__dict__</highlight></codeline>
<codeline lineno="5626"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5627"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_1a_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5631"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_1a_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_1a___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_1a___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>112,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"></highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.a.__get__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1a_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1a_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_1a_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"></highlight></codeline>
<codeline lineno="5681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_1a_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>112,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;a<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"></highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.a.__set__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_1b_1__get__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_1b_1__get__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_1b___get__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"></highlight></codeline>
<codeline lineno="5716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_1b___get__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__get__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;b);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>112,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"></highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.b.__get__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"></highlight></codeline>
<codeline lineno="5742"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1b_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1b_3__set__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_1b_2__set__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v_value));</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"></highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_16seine_data_utils_7Segment_1b_2__set__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__set__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(0,<sp/>112,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/>__pyx_v_self-&gt;b<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.b.__set__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="5778"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5779"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="5780"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="5781"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"></highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_7__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_7__reduce_cython__(PyObject<sp/>*__pyx_v_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_6__reduce_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self));</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"></highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="5794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"></highlight></codeline>
<codeline lineno="5796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_6__reduce_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v__dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_use_setstate;</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="5814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="5815"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="5816"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.a,<sp/>self.b,<sp/>self.point_droit,<sp/>self.point_gauche)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5817"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="5818"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="5819"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_self-&gt;b);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>__pyx_v_self-&gt;point_droit);</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>3,<sp/>__pyx_v_self-&gt;point_gauche);</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/>__pyx_v_state<sp/>=<sp/>((PyObject*)__pyx_t_3);</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="5842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>bint<sp/>use_setstate</highlight></codeline>
<codeline lineno="5843"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.a,<sp/>self.b,<sp/>self.point_droit,<sp/>self.point_gauche)</highlight></codeline>
<codeline lineno="5844"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5845"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="5846"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="5847"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_GetAttr3(((PyObject<sp/>*)__pyx_v_self),<sp/>__pyx_n_s_dict,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/>__pyx_v__dict<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="5854"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.a,<sp/>self.b,<sp/>self.point_droit,<sp/>self.point_gauche)</highlight></codeline>
<codeline lineno="5855"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="5856"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5857"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="5858"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="5859"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v__dict<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>(__pyx_t_4<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="5865"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="5866"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="5867"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5868"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="5869"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5870"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_v__dict);</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_InPlaceAdd(__pyx_v_state,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>8,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_v_state,<sp/>((PyObject*)__pyx_t_2));</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"></highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="5883"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="5884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="5885"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5886"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5887"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>self.point_droit<sp/>is<sp/>not<sp/>None<sp/>or<sp/>self.point_gauche<sp/>is<sp/>not<sp/>None</highlight></codeline>
<codeline lineno="5888"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"></highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="5892"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(self.a,<sp/>self.b,<sp/>self.point_droit,<sp/>self.point_gauche)</highlight></codeline>
<codeline lineno="5893"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_dict<sp/>=<sp/>getattr(self,<sp/>&apos;__dict__&apos;,<sp/>None)</highlight></codeline>
<codeline lineno="5894"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>_dict<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5895"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>+=<sp/>(_dict,)</highlight></codeline>
<codeline lineno="5896"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="5897"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3;</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="5902"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="5903"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5904"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>self.point_droit<sp/>is<sp/>not<sp/>None<sp/>or<sp/>self.point_gauche<sp/>is<sp/>not<sp/>None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="5906"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="5907"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_self-&gt;point_droit<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_4<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_bool_binop_done;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_v_self-&gt;point_gauche<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_6<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L4_bool_binop_done:;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_use_setstate<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/>__pyx_L3:;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="5925"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5926"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>self.point_droit<sp/>is<sp/>not<sp/>None<sp/>or<sp/>self.point_gauche<sp/>is<sp/>not<sp/>None</highlight></codeline>
<codeline lineno="5927"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5928"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="5929"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5930"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>(__pyx_v_use_setstate<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"></highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="5935"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>self.point_droit<sp/>is<sp/>not<sp/>None<sp/>or<sp/>self.point_gauche<sp/>is<sp/>not<sp/>None</highlight></codeline>
<codeline lineno="5936"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:</highlight></codeline>
<codeline lineno="5937"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>None),<sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5938"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5939"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>state)</highlight></codeline>
<codeline lineno="5940"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_pyx_unpickle_Segment);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(Py_None);</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>Py_None);</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"></highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="5971"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5972"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_setstate<sp/>=<sp/>self.point_droit<sp/>is<sp/>not<sp/>None<sp/>or<sp/>self.point_gauche<sp/>is<sp/>not<sp/>None</highlight></codeline>
<codeline lineno="5973"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>use_setstate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5974"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="5975"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5976"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"></highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:15</highlight></codeline>
<codeline lineno="5980"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>None),<sp/>state</highlight></codeline>
<codeline lineno="5981"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="5982"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="5983"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="5984"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="5985"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_pyx_unpickle_Segment);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>((PyObject<sp/>*)Py_TYPE(((PyObject<sp/>*)__pyx_v_self))));</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_int_118661799);</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>2,<sp/>__pyx_v_state);</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>15,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"></highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="6015"><highlight class="comment"><sp/>*<sp/>def<sp/>__reduce_cython__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6016"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>tuple<sp/>state</highlight></codeline>
<codeline lineno="6017"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>_dict</highlight></codeline>
<codeline lineno="6018"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"></highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_state);</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v__dict);</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="6036"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="6037"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>state)</highlight></codeline>
<codeline lineno="6038"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6039"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="6040"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_9__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7Segment_9__setstate_cython__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_7Segment_8__setstate_cython__(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v_self),<sp/>((PyObject<sp/>*)__pyx_v___pyx_state));</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_7Segment_8__setstate_cython__(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"></highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:17</highlight></codeline>
<codeline lineno="6065"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>state)</highlight></codeline>
<codeline lineno="6066"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="6067"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(self,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6068"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_Segment__set_state(__pyx_v_self,<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>17,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"></highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:16</highlight></codeline>
<codeline lineno="6075"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="6076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_unpickle_Segment,<sp/>(type(self),<sp/>0x712a2a7,<sp/>state)</highlight></codeline>
<codeline lineno="6077"><highlight class="comment"><sp/>*<sp/>def<sp/>__setstate_cython__(self,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6078"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(self,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="6079"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment.__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"></highlight></codeline>
<codeline lineno="6094"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:169</highlight></codeline>
<codeline lineno="6095"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="6096"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6097"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="6099"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():</highlight></codeline>
<codeline lineno="6100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6101"><highlight class="normal"></highlight></codeline>
<codeline lineno="6102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7_not_in_frontiere(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_7_not_in_frontiere<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;_not_in_frontiere&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_7_not_in_frontiere,<sp/>METH_NOARGS,<sp/>0};</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_7_not_in_frontiere(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_not_in_frontiere<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_6_not_in_frontiere(__pyx_self);</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"></highlight></codeline>
<codeline lineno="6116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_6_not_in_frontiere(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self)<sp/>{</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_not_in_frontiere&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"></highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:171</highlight></codeline>
<codeline lineno="6129"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():</highlight></codeline>
<codeline lineno="6130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="6131"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="6133"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9_dans_la_frontiere(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_9_dans_la_frontiere<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;_dans_la_frontiere&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_9_dans_la_frontiere,<sp/>METH_NOARGS,<sp/>0};</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9_dans_la_frontiere(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_dans_la_frontiere<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_8_dans_la_frontiere(__pyx_self);</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"></highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_8_dans_la_frontiere(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self)<sp/>{</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_dans_la_frontiere&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"></highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:175</highlight></codeline>
<codeline lineno="6163"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6164"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:</highlight></codeline>
<codeline lineno="6165"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6166"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="6167"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6168"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_1__init__(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_9Frontiere_1__init__<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_9Frontiere_1__init__,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_1__init__(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_self<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_segments<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_self,&amp;__pyx_n_s_liste_segments,0};</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_self))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_liste_segments))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_liste_segments<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_9Frontiere___init__(__pyx_self,<sp/>__pyx_v_self,<sp/>__pyx_v_liste_segments);</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"></highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight></codeline>
<codeline lineno="6235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere___init__(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_liste_segments)<sp/>{</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:176</highlight></codeline>
<codeline lineno="6244"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:</highlight></codeline>
<codeline lineno="6245"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="6246"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6247"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6248"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>HorsDeLaFrontiereError(Exception):</highlight></codeline>
<codeline lineno="6249"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PyObject_SetAttrStr(__pyx_v_self,<sp/>__pyx_n_s_liste_segments,<sp/>__pyx_v_liste_segments)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>176,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"></highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:175</highlight></codeline>
<codeline lineno="6253"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6254"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:</highlight></codeline>
<codeline lineno="6255"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="6257"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6258"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"></highlight></codeline>
<codeline lineno="6272"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:181</highlight></codeline>
<codeline lineno="6273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="6274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="6275"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6276"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="6277"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6279"><highlight class="normal"></highlight></codeline>
<codeline lineno="6280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6281"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_23DansLaFrontiereNotError_1__init__(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_23DansLaFrontiereNotError_1__init__<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_23DansLaFrontiereNotError_1__init__,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_23DansLaFrontiereNotError_1__init__(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_self<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_self,&amp;__pyx_n_s_value,0};</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_self))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_value))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_value<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLaFrontiereNotError.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_23DansLaFrontiereNotError___init__(__pyx_self,<sp/>__pyx_v_self,<sp/>__pyx_v_value);</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"></highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"></highlight></codeline>
<codeline lineno="6345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_23DansLaFrontiereNotError___init__(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_value)<sp/>{</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:182</highlight></codeline>
<codeline lineno="6354"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="6355"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="6356"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6357"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6358"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="6359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PyObject_SetAttrStr(__pyx_v_self,<sp/>__pyx_n_s_res,<sp/>__pyx_v_value)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>182,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:181</highlight></codeline>
<codeline lineno="6363"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="6364"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="6365"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6366"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="6367"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6368"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6369"><highlight class="normal"></highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLaFrontiereNotError.__init__&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:184</highlight></codeline>
<codeline lineno="6383"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="6384"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6385"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6386"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>la<sp/>frontire<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="6387"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>frontire</highlight></codeline>
<codeline lineno="6388"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6389"><highlight class="normal"></highlight></codeline>
<codeline lineno="6390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_3en_dessous(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6392"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_16seine_data_utils_9Frontiere_2en_dessous[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;D\303\251termine<sp/>si<sp/>la<sp/>fronti\303\250re<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn\303\251\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>fronti\303\250re\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_9Frontiere_3en_dessous<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_9Frontiere_3en_dessous,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>__pyx_doc_16seine_data_utils_9Frontiere_2en_dessous};</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_3en_dessous(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_self<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;en_dessous<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_self,&amp;__pyx_n_s_point,0};</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_self))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_point))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_point<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point<sp/>*)values[1]);</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.en_dessous&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_point),<sp/>__pyx_ptype_16seine_data_utils_Point,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_9Frontiere_2en_dessous(__pyx_self,<sp/>__pyx_v_self,<sp/>__pyx_v_point);</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"></highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"></highlight></codeline>
<codeline lineno="6461"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere_2en_dessous(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v_point)<sp/>{</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_segment<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_e<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_4)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_10;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"></highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:189</highlight></codeline>
<codeline lineno="6483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="6484"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6485"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6486"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="6487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6488"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self,<sp/>__pyx_n_s_liste_segments);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>-1;<sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>Py_TYPE(__pyx_t_2)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_4(__pyx_t_2);</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>189,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_segment,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"></highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:190</highlight></codeline>
<codeline lineno="6535"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6536"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6537"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6538"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6539"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:</highlight></codeline>
<codeline lineno="6540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionSave(&amp;__pyx_t_5,<sp/>&amp;__pyx_t_6,<sp/>&amp;__pyx_t_7);</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*try:*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6549"><highlight class="normal"></highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:191</highlight></codeline>
<codeline lineno="6551"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6552"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="6553"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6554"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:</highlight></codeline>
<codeline lineno="6555"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>e.res</highlight></codeline>
<codeline lineno="6556"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_segment,<sp/>__pyx_n_s_en_dessous);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>191,<sp/>__pyx_L5_error)</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_8)))<sp/>{</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_8);</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_8);</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_8,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_9)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_8,<sp/>__pyx_t_9,<sp/>((PyObject<sp/>*)__pyx_v_point))<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_8,<sp/>((PyObject<sp/>*)__pyx_v_point));</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>191,<sp/>__pyx_L5_error)</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"></highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:190</highlight></codeline>
<codeline lineno="6577"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6578"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6579"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6580"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6581"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:</highlight></codeline>
<codeline lineno="6582"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L12_try_end;</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L5_error:;</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"></highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:192</highlight></codeline>
<codeline lineno="6594"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="6595"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6596"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6597"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>e.res</highlight></codeline>
<codeline lineno="6598"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6599"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyErr_ExceptionMatches(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_DansLeSegmentNotError));</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_10)<sp/>{</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.en_dessous&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_GetException(&amp;__pyx_t_1,<sp/>&amp;__pyx_t_8,<sp/>&amp;__pyx_t_9)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>192,<sp/>__pyx_L7_except_error)</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_e<sp/>=<sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"></highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:193</highlight></codeline>
<codeline lineno="6611"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6612"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:</highlight></codeline>
<codeline lineno="6613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>e.res<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6614"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>_dans_la_frontiere()</highlight></codeline>
<codeline lineno="6616"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_e,<sp/>__pyx_n_s_res);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_11))<sp/>__PYX_ERR(0,<sp/>193,<sp/>__pyx_L7_except_error)</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_11;</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_except_return;</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7_except_error;</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L7_except_error:;</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"></highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:190</highlight></codeline>
<codeline lineno="6632"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6635"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>DansLeSegmentNotError<sp/>as<sp/>e:</highlight></codeline>
<codeline lineno="6637"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionReset(__pyx_t_5,<sp/>__pyx_t_6,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8_except_return:;</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XGIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ExceptionReset(__pyx_t_5,<sp/>__pyx_t_6,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L12_try_end:;</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"></highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:189</highlight></codeline>
<codeline lineno="6653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="6654"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6655"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>segment<sp/>in<sp/>self.liste_segments:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6656"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try:</highlight></codeline>
<codeline lineno="6657"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment.en_dessous(point)</highlight></codeline>
<codeline lineno="6658"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"></highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:198</highlight></codeline>
<codeline lineno="6663"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>raise<sp/>self.DansLaFrontiereNotError(e.res)</highlight></codeline>
<codeline lineno="6664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>_not_in_frontiere()</highlight></codeline>
<codeline lineno="6665"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>self.HorsDeLaFrontiereError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6666"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="6667"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6668"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self,<sp/>__pyx_n_s_HorsDeLaFrontiereError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>198,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/>__Pyx_Raise(__pyx_t_2,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/>__PYX_ERR(0,<sp/>198,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"></highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:184</highlight></codeline>
<codeline lineno="6676"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="6677"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6679"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>la<sp/>frontire<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="6680"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>frontire</highlight></codeline>
<codeline lineno="6681"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6682"><highlight class="normal"></highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.en_dessous&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_segment);</highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_e);</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:201</highlight></codeline>
<codeline lineno="6701"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="6702"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6703"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6704"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6705"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="6706"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6707"><highlight class="normal"></highlight></codeline>
<codeline lineno="6708"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_5plot(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_9Frontiere_5plot<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_9Frontiere_5plot,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_9Frontiere_5plot(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_self<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_couleur<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_self,&amp;__pyx_n_s_couleur,0};</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>((PyObject<sp/>*)((PyObject*)__pyx_n_s_red));</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_self))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_couleur);</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{<sp/>values[1]<sp/>=<sp/>value;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_self<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_couleur<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_9Frontiere_4plot(__pyx_self,<sp/>__pyx_v_self,<sp/>__pyx_v_couleur);</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"></highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_9Frontiere_4plot(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_couleur)<sp/>{</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_seg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_4)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:202</highlight></codeline>
<codeline lineno="6793"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6794"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="6795"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6796"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="6797"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6798"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_self,<sp/>__pyx_n_s_liste_segments);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>-1;<sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>Py_TYPE(__pyx_t_2)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_3);<sp/>__pyx_t_3++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_4(__pyx_t_2);</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>202,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_seg,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"></highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:203</highlight></codeline>
<codeline lineno="6845"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="6846"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6848"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6849"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/>def<sp/>__repr__(self):</highlight></codeline>
<codeline lineno="6850"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_v_seg,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>203,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_5)))<sp/>{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_5);</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_5,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_6)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_5,<sp/>__pyx_t_6,<sp/>__pyx_v_couleur)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_5,<sp/>__pyx_v_couleur);</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>203,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"></highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:202</highlight></codeline>
<codeline lineno="6871"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6872"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):</highlight></codeline>
<codeline lineno="6873"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6874"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="6875"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6876"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"></highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:201</highlight></codeline>
<codeline lineno="6881"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="6882"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6883"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="6885"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="6886"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"></highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.Frontiere.plot&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_seg);</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"></highlight></codeline>
<codeline lineno="6905"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:208</highlight></codeline>
<codeline lineno="6906"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Frontire<sp/>de<sp/>{self.liste_segments[0]}<sp/><sp/>{self.liste_segments[-1]}&quot;</highlight></codeline>
<codeline lineno="6907"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6908"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="6910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="6911"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6912"><highlight class="normal"></highlight></codeline>
<codeline lineno="6913"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_11get_frontieres_utiles(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6915"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_11get_frontieres_utiles<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;get_frontieres_utiles&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_11get_frontieres_utiles,<sp/>METH_NOARGS,<sp/>0};</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_11get_frontieres_utiles(PyObject<sp/>*__pyx_self,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_frontieres_utiles<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_10get_frontieres_utiles(__pyx_self);</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"></highlight></codeline>
<codeline lineno="6927"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:212</highlight></codeline>
<codeline lineno="6928"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="6929"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="6930"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6931"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="6932"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="6933"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6934"><highlight class="normal"></highlight></codeline>
<codeline lineno="6935"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21get_frontieres_utiles_lambda(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_21get_frontieres_utiles_lambda<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_21get_frontieres_utiles_lambda,<sp/>METH_O,<sp/>0};</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_21get_frontieres_utiles_lambda(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p)<sp/>{</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;lambda<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_lambda_funcdef_lambda(__pyx_self,<sp/>((PyObject<sp/>*)__pyx_v_p));</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"></highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_lambda_funcdef_lambda(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_p)<sp/>{</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PySequence_Tuple(__pyx_v_p);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Point),<sp/>__pyx_t_1,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_frontieres_utiles.lambda&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="6978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"></highlight></codeline>
<codeline lineno="6980"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:208</highlight></codeline>
<codeline lineno="6981"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Frontire<sp/>de<sp/>{self.liste_segments[0]}<sp/><sp/>{self.liste_segments[-1]}&quot;</highlight></codeline>
<codeline lineno="6982"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6983"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="6984"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="6985"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="6986"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6987"><highlight class="normal"></highlight></codeline>
<codeline lineno="6988"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_10get_frontieres_utiles(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self)<sp/>{</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_coordonnees<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_points<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_segments_Seine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_segments_Marne<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_no_coord_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_liste_frontieres<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_5)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_7;</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_9)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_10<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_12<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_13<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_14<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_15<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;get_frontieres_utiles&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"></highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:210</highlight></codeline>
<codeline lineno="7020"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():</highlight></codeline>
<codeline lineno="7021"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="7022"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7023"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="7024"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))</highlight></codeline>
<codeline lineno="7025"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_get_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>210,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_3))<sp/>{</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_3)<sp/>?<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_3)<sp/>:<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_2);</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>210,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/>__pyx_v_liste_coordonnees<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"></highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:212</highlight></codeline>
<codeline lineno="7047"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="7048"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="7049"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7050"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="7051"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7052"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_21get_frontieres_utiles_lambda,<sp/>0,<sp/>__pyx_n_s_get_frontieres_utiles_locals_lam,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_map,<sp/>__pyx_t_2,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_List(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>212,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/>__pyx_v_liste_points<sp/>=<sp/>((PyObject*)__pyx_t_2);</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"></highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:215</highlight></codeline>
<codeline lineno="7073"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="7074"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7075"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="7077"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7078"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>215,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/>__pyx_v_liste_segments_Seine<sp/>=<sp/>((PyObject*)__pyx_t_2);</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"></highlight></codeline>
<codeline lineno="7084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:216</highlight></codeline>
<codeline lineno="7085"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="7087"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7088"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7089"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="7090"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>216,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/>__pyx_v_liste_segments_Marne<sp/>=<sp/>((PyObject*)__pyx_t_2);</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:218</highlight></codeline>
<codeline lineno="7097"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="7098"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7099"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="7102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Length(__pyx_v_liste_coordonnees);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_4<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromSsize_t((__pyx_t_4<sp/>-<sp/>1));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_int_3);</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_range,<sp/>__pyx_t_1,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_2;<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>-1;<sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetIter(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>Py_TYPE(__pyx_t_1)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_4);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_4);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_4);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_4);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_5(__pyx_t_1);</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>218,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"></highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:220</highlight></codeline>
<codeline lineno="7161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="7162"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7163"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7164"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7165"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="7166"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_points,<sp/>__pyx_v_no_coord);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyInt_AddObjC(__pyx_v_no_coord,<sp/>__pyx_int_1,<sp/>1,<sp/>0,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_points,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment),<sp/>__pyx_t_3,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyList_Append(__pyx_v_liste_segments_Seine,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>220,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"></highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:218</highlight></codeline>
<codeline lineno="7189"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="7190"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7191"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7192"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7193"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="7194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"></highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:222</highlight></codeline>
<codeline lineno="7199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="7200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="7203"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="7204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_int_34);</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>2,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_6,<sp/>2,<sp/>__pyx_int_2);</highlight></codeline>
<codeline lineno="7227"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_zip,<sp/>__pyx_t_3,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_6))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_6;<sp/>__Pyx_INCREF(__pyx_t_3);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>-1;<sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetIter(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>Py_TYPE(__pyx_t_3)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_3)))<sp/>{</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_3))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_3,<sp/>__pyx_t_4);<sp/>__Pyx_INCREF(__pyx_t_6);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(__pyx_t_3,<sp/>__pyx_t_4);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_3))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_3,<sp/>__pyx_t_4);<sp/>__Pyx_INCREF(__pyx_t_6);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(__pyx_t_3,<sp/>__pyx_t_4);<sp/>__pyx_t_4++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_5(__pyx_t_3);</highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_6)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7286"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="7288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7296"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>PyObject_GetIter(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_8)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_9(__pyx_t_8);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7_unpacking_failed;</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_9(__pyx_t_8);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7_unpacking_failed;</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_unpacking_done;</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L7_unpacking_failed:;</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>222,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8_unpacking_done:;</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord_1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF_SET(__pyx_v_no_coord_2,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"></highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:225</highlight></codeline>
<codeline lineno="7330"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="7331"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="7332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Marne.append(Segment(liste_points[no_coord_1],<sp/>liste_points[no_coord_2]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7333"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7334"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_frontieres<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="7335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_points,<sp/>__pyx_v_no_coord_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>225,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_v_liste_points,<sp/>__pyx_v_no_coord_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>225,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>225,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment),<sp/>__pyx_t_1,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>225,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyList_Append(__pyx_v_liste_segments_Marne,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>225,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"></highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:222</highlight></codeline>
<codeline lineno="7355"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="7356"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="7357"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7358"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="7359"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="7360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"></highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:228</highlight></codeline>
<codeline lineno="7365"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7366"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_frontieres<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="7367"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[:5]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7368"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[5:15]),</highlight></codeline>
<codeline lineno="7369"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]),</highlight></codeline>
<codeline lineno="7370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>228,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>0,<sp/>5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>228,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_6))<sp/>{</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_6)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_6,<sp/>__pyx_t_1)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(0,<sp/>228,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"></highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:229</highlight></codeline>
<codeline lineno="7393"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_frontieres<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="7394"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[:5]),</highlight></codeline>
<codeline lineno="7395"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[5:15]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7396"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]),</highlight></codeline>
<codeline lineno="7397"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]),</highlight></codeline>
<codeline lineno="7398"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>229,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>5,<sp/>15);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>229,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/>__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_8))<sp/>{</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_1);</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_1,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_t_8)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_1,<sp/>__pyx_t_8,<sp/>__pyx_t_6)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>229,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"></highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:230</highlight></codeline>
<codeline lineno="7421"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[:5]),</highlight></codeline>
<codeline lineno="7422"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[5:15]),</highlight></codeline>
<codeline lineno="7423"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7424"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]),</highlight></codeline>
<codeline lineno="7425"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]),</highlight></codeline>
<codeline lineno="7426"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>230,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>15,<sp/>16);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>230,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/>__pyx_t_10<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_10))<sp/>{</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_10)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_6,<sp/>__pyx_t_10,<sp/>__pyx_t_8)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_t_8);</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>230,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"></highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:231</highlight></codeline>
<codeline lineno="7449"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[5:15]),</highlight></codeline>
<codeline lineno="7450"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]),</highlight></codeline>
<codeline lineno="7451"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]),</highlight></codeline>
<codeline lineno="7453"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]),</highlight></codeline>
<codeline lineno="7454"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_8,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>231,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>16,<sp/>17);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>__PYX_ERR(0,<sp/>231,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_8)))<sp/>{</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_11))<sp/>{</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_8);</highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_8,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_11)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_8,<sp/>__pyx_t_11,<sp/>__pyx_t_10)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_8,<sp/>__pyx_t_10);</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_11);<sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>231,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:232</highlight></codeline>
<codeline lineno="7477"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]),</highlight></codeline>
<codeline lineno="7478"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]),</highlight></codeline>
<codeline lineno="7479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]),</highlight></codeline>
<codeline lineno="7481"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]),</highlight></codeline>
<codeline lineno="7482"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_10,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>__PYX_ERR(0,<sp/>232,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/>__pyx_t_11<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>17,<sp/>31);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_11))<sp/>__PYX_ERR(0,<sp/>232,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/>__pyx_t_12<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_10)))<sp/>{</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_12<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_12))<sp/>{</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_10);</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_10,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/>__pyx_t_8<sp/>=<sp/>(__pyx_t_12)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_10,<sp/>__pyx_t_12,<sp/>__pyx_t_11)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_10,<sp/>__pyx_t_11);</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_12);<sp/>__pyx_t_12<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_11);<sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(0,<sp/>232,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"></highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:233</highlight></codeline>
<codeline lineno="7505"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]),</highlight></codeline>
<codeline lineno="7506"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]),</highlight></codeline>
<codeline lineno="7507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7508"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]),</highlight></codeline>
<codeline lineno="7509"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]),</highlight></codeline>
<codeline lineno="7510"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_11,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_11))<sp/>__PYX_ERR(0,<sp/>233,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/>__pyx_t_12<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>31,<sp/>32);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_12))<sp/>__PYX_ERR(0,<sp/>233,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/>__pyx_t_13<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_11)))<sp/>{</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_13<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_13))<sp/>{</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_11);</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_11,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/>__pyx_t_10<sp/>=<sp/>(__pyx_t_13)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_11,<sp/>__pyx_t_13,<sp/>__pyx_t_12)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_11,<sp/>__pyx_t_12);</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_13);<sp/>__pyx_t_13<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_12);<sp/>__pyx_t_12<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>__PYX_ERR(0,<sp/>233,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_11);<sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"></highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:234</highlight></codeline>
<codeline lineno="7533"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]),</highlight></codeline>
<codeline lineno="7534"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]),</highlight></codeline>
<codeline lineno="7535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7536"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]),</highlight></codeline>
<codeline lineno="7537"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="7538"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_12,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_12))<sp/>__PYX_ERR(0,<sp/>234,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/>__pyx_t_13<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>32,<sp/>33);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_13))<sp/>__PYX_ERR(0,<sp/>234,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/>__pyx_t_14<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_12)))<sp/>{</highlight></codeline>
<codeline lineno="7545"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_14<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_14))<sp/>{</highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_12);</highlight></codeline>
<codeline lineno="7548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_12,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/>__pyx_t_11<sp/>=<sp/>(__pyx_t_14)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_12,<sp/>__pyx_t_14,<sp/>__pyx_t_13)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_12,<sp/>__pyx_t_13);</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_14);<sp/>__pyx_t_14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_13);<sp/>__pyx_t_13<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_11))<sp/>__PYX_ERR(0,<sp/>234,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_12);<sp/>__pyx_t_12<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7559"><highlight class="normal"></highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:235</highlight></codeline>
<codeline lineno="7561"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]),</highlight></codeline>
<codeline lineno="7562"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]),</highlight></codeline>
<codeline lineno="7563"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7564"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="7565"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="7566"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7567"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_13,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_13))<sp/>__PYX_ERR(0,<sp/>235,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/>__pyx_t_14<sp/>=<sp/>__Pyx_PyList_GetSlice(__pyx_v_liste_segments_Seine,<sp/>33,<sp/>34);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_14))<sp/>__PYX_ERR(0,<sp/>235,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/>__pyx_t_15<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_13)))<sp/>{</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_15<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_15))<sp/>{</highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_13);</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_15);</highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_13,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/>__pyx_t_12<sp/>=<sp/>(__pyx_t_15)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_13,<sp/>__pyx_t_15,<sp/>__pyx_t_14)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_13,<sp/>__pyx_t_14);</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_15);<sp/>__pyx_t_15<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_14);<sp/>__pyx_t_14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_12))<sp/>__PYX_ERR(0,<sp/>235,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_13);<sp/>__pyx_t_13<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"></highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:236</highlight></codeline>
<codeline lineno="7589"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]),</highlight></codeline>
<codeline lineno="7590"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]),</highlight></codeline>
<codeline lineno="7591"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Marne)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7592"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="7593"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7594"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_14,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_14))<sp/>__PYX_ERR(0,<sp/>236,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/>__pyx_t_15<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_14)))<sp/>{</highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_15<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_15))<sp/>{</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_14);</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_15);</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_14,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/>__pyx_t_13<sp/>=<sp/>(__pyx_t_15)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_14,<sp/>__pyx_t_15,<sp/>__pyx_v_liste_segments_Marne)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_14,<sp/>__pyx_v_liste_segments_Marne);</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_15);<sp/>__pyx_t_15<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_13))<sp/>__PYX_ERR(0,<sp/>236,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_14);<sp/>__pyx_t_14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"></highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:227</highlight></codeline>
<codeline lineno="7614"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Marne.append(Segment(liste_points[no_coord_1],<sp/>liste_points[no_coord_2]))</highlight></codeline>
<codeline lineno="7615"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7616"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_frontieres<sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7617"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[:5]),</highlight></codeline>
<codeline lineno="7618"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[5:15]),</highlight></codeline>
<codeline lineno="7619"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/>__pyx_t_14<sp/>=<sp/>PyList_New(9);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_14))<sp/>__PYX_ERR(0,<sp/>227,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>0,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>2,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>3,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>4,<sp/>__pyx_t_8);</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>5,<sp/>__pyx_t_10);</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>6,<sp/>__pyx_t_11);</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>7,<sp/>__pyx_t_12);</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_14,<sp/>8,<sp/>__pyx_t_13);</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/>__pyx_t_12<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/>__pyx_t_13<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/>__pyx_v_liste_frontieres<sp/>=<sp/>((PyObject*)__pyx_t_14);</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/>__pyx_t_14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"></highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:239</highlight></codeline>
<codeline lineno="7653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="7654"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7655"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_frontieres<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7656"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7657"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="7658"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_liste_frontieres);</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_liste_frontieres;</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"></highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:208</highlight></codeline>
<codeline lineno="7665"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Frontire<sp/>de<sp/>{self.liste_segments[0]}<sp/><sp/>{self.liste_segments[-1]}&quot;</highlight></codeline>
<codeline lineno="7666"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7667"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7668"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="7669"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="7670"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7671"><highlight class="normal"></highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_12);</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_13);</highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_14);</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_15);</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.get_frontieres_utiles&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_coordonnees);</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_points);</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_segments_Seine);</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_segments_Marne);</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord);</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord_1);</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_no_coord_2);</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v_liste_frontieres);</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="7699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"></highlight></codeline>
<codeline lineno="7701"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="7702"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Point(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7703"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7704"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7705"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7706"><highlight class="normal"></highlight></codeline>
<codeline lineno="7707"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_13__pyx_unpickle_Point(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_13__pyx_unpickle_Point<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_13__pyx_unpickle_Point,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_13__pyx_unpickle_Point(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum;</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_pyx_type,&amp;__pyx_n_s_pyx_checksum,&amp;__pyx_n_s_pyx_state,0};</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[3]<sp/>=<sp/>{0,0,0};</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>3:<sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_type))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="7740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_checksum))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>1);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[2]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_state))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>2);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_type<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_checksum<sp/>=<sp/>__Pyx_PyInt_As_long(values[1]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v___pyx_checksum<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_state<sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7775"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="7776"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_12__pyx_unpickle_Point(__pyx_self,<sp/>__pyx_v___pyx_type,<sp/>__pyx_v___pyx_checksum,<sp/>__pyx_v___pyx_state);</highlight></codeline>
<codeline lineno="7777"><highlight class="normal"></highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7779"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="7781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7782"><highlight class="normal"></highlight></codeline>
<codeline lineno="7783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_12__pyx_unpickle_Point(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_PickleError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7785"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"></highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="7800"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7801"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7802"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0xc8d1ae9:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7803"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7805"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((__pyx_v___pyx_checksum<sp/>!=<sp/>0xc8d1ae9)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"></highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="7810"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7811"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0xc8d1ae9:</highlight></codeline>
<codeline lineno="7812"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7813"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="7815"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_Import(__pyx_n_s_pickle,<sp/>__pyx_t_2,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_3,<sp/>__pyx_n_s_PickleError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_PickleError<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"></highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="7832"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0xc8d1ae9:</highlight></codeline>
<codeline lineno="7833"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7834"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7835"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="7836"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="7837"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_From_long(__pyx_v___pyx_checksum);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0xc8,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="7844"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_v___pyx_PickleError;<sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_5,<sp/>__pyx_t_4)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7859"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_3,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7862"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7863"><highlight class="normal"></highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="7865"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7866"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7867"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0xc8d1ae9:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7868"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7869"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7870"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"></highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="7874"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7875"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7876"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7877"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="7878"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="7879"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Point),<sp/>__pyx_n_s_new);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_4)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_4,<sp/>__pyx_v___pyx_type)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_v___pyx_type);</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"></highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="7901"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7902"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="7903"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7904"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="7905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7906"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_v___pyx_state<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"></highlight></codeline>
<codeline lineno="7911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="7912"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="7913"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="7914"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7915"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7916"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="7917"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_Point__set_state(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*)__pyx_v___pyx_result),<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7921"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7922"><highlight class="normal"></highlight></codeline>
<codeline lineno="7923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="7924"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0xc8d1ae9<sp/>=<sp/>(x,<sp/>y))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="7925"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Point.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="7926"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7927"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="7928"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7929"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7931"><highlight class="normal"></highlight></codeline>
<codeline lineno="7932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:10</highlight></codeline>
<codeline lineno="7933"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="7934"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="7935"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7936"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="7937"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="7938"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7939"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v___pyx_result;</highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="7943"><highlight class="normal"></highlight></codeline>
<codeline lineno="7944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="7945"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Point(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7946"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="7947"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7948"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7949"><highlight class="normal"></highlight></codeline>
<codeline lineno="7950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7951"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Point&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="7964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"></highlight></codeline>
<codeline lineno="7966"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="7967"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="7968"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7969"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7970"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="7971"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="7972"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7973"><highlight class="normal"></highlight></codeline>
<codeline lineno="7974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_Point__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Point<sp/>*__pyx_v___pyx_result,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7976"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Point__set_state&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"></highlight></codeline>
<codeline lineno="7991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="7992"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="7993"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="7994"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="7995"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="7996"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[2])</highlight></codeline>
<codeline lineno="7997"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="7999"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8002"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>0,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8003"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8005"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;x<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8008"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8011"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8014"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8015"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;y<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8016"><highlight class="normal"></highlight></codeline>
<codeline lineno="8017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8018"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8019"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="8020"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8021"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[2])</highlight></codeline>
<codeline lineno="8022"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8024"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;object<sp/>of<sp/>type<sp/>&apos;NoneType&apos;<sp/>has<sp/>no<sp/>len()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_v___pyx_state);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_4<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8028"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>((__pyx_t_4<sp/>&gt;<sp/>2)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="8030"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8031"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_bool_binop_done;</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8034"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_HasAttr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_5<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/>__pyx_L4_bool_binop_done:;</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="8039"><highlight class="normal"></highlight></codeline>
<codeline lineno="8040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:14</highlight></codeline>
<codeline lineno="8041"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="8042"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8043"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[2])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8044"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8045"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_7,<sp/>__pyx_n_s_update);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8049"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8056"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_8)))<sp/>{</highlight></codeline>
<codeline lineno="8058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="8060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_8);</highlight></codeline>
<codeline lineno="8061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_8,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_9)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_8,<sp/>__pyx_t_9,<sp/>__pyx_t_7)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_8,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="8067"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8070"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8071"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8072"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8073"><highlight class="normal"></highlight></codeline>
<codeline lineno="8074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8075"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="8077"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8078"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[2])</highlight></codeline>
<codeline lineno="8079"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8081"><highlight class="normal"></highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="8083"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8084"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8085"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="8087"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8088"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8089"><highlight class="normal"></highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Point__set_state&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8105"><highlight class="normal"></highlight></codeline>
<codeline lineno="8106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="8107"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_DansLeSegmentNotError(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8111"><highlight class="normal"></highlight></codeline>
<codeline lineno="8112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_15__pyx_unpickle_DansLeSegmentNotError(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_15__pyx_unpickle_DansLeSegmentNotError<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_15__pyx_unpickle_DansLeSegmentNotError,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="8115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_15__pyx_unpickle_DansLeSegmentNotError(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="8116"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum;</highlight></codeline>
<codeline lineno="8118"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8122"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8123"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8124"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_pyx_type,&amp;__pyx_n_s_pyx_checksum,&amp;__pyx_n_s_pyx_state,0};</highlight></codeline>
<codeline lineno="8127"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[3]<sp/>=<sp/>{0,0,0};</highlight></codeline>
<codeline lineno="8128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="8129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="8130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="8131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="8132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>3:<sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="8133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="8135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="8137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="8142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_type))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_checksum))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>1);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:</highlight></codeline>
<codeline lineno="8154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[2]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_state))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>2);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="8160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="8166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_type<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_checksum<sp/>=<sp/>__Pyx_PyInt_As_long(values[1]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v___pyx_checksum<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_state<sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="8172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="8174"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="8175"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8176"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="8177"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8178"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="8180"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="8181"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_14__pyx_unpickle_DansLeSegmentNotError(__pyx_self,<sp/>__pyx_v___pyx_type,<sp/>__pyx_v___pyx_checksum,<sp/>__pyx_v___pyx_state);</highlight></codeline>
<codeline lineno="8182"><highlight class="normal"></highlight></codeline>
<codeline lineno="8183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8184"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8187"><highlight class="normal"></highlight></codeline>
<codeline lineno="8188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_14__pyx_unpickle_DansLeSegmentNotError(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="8189"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_PickleError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8190"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8191"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8192"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="8194"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8195"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8196"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8197"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8202"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8203"><highlight class="normal"></highlight></codeline>
<codeline lineno="8204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="8205"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8207"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x9b20716:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8208"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8211"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((__pyx_v___pyx_checksum<sp/>!=<sp/>0x9b20716)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="8213"><highlight class="normal"></highlight></codeline>
<codeline lineno="8214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="8215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x9b20716:</highlight></codeline>
<codeline lineno="8217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8221"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8222"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8223"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8224"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8225"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8226"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_Import(__pyx_n_s_pickle,<sp/>__pyx_t_2,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8227"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8228"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8229"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_3,<sp/>__pyx_n_s_PickleError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8230"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8231"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8232"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_PickleError<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8233"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8234"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8235"><highlight class="normal"></highlight></codeline>
<codeline lineno="8236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="8237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x9b20716:</highlight></codeline>
<codeline lineno="8238"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8243"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_From_long(__pyx_v___pyx_checksum);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8244"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8245"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x9b,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8246"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8247"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8248"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="8249"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_v___pyx_PickleError;<sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="8251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="8253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="8254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="8255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8259"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_5,<sp/>__pyx_t_4)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="8260"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8261"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8263"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8264"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8265"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_3,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="8266"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8267"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8268"><highlight class="normal"></highlight></codeline>
<codeline lineno="8269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="8270"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x9b20716:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8275"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8277"><highlight class="normal"></highlight></codeline>
<codeline lineno="8278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="8279"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8280"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8281"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8282"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8283"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8285"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_DansLeSegmentNotError),<sp/>__pyx_n_s_new);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8286"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8287"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="8289"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="8291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="8292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8297"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_4)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_4,<sp/>__pyx_v___pyx_type)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_v___pyx_type);</highlight></codeline>
<codeline lineno="8298"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8300"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8301"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8302"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="8303"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8304"><highlight class="normal"></highlight></codeline>
<codeline lineno="8305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="8306"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8307"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8308"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8309"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8310"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8312"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_v___pyx_state<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="8313"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="8315"><highlight class="normal"></highlight></codeline>
<codeline lineno="8316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="8317"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8318"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8319"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8320"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8321"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8324"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_DansLeSegmentNotError__set_state(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*)__pyx_v___pyx_result),<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8325"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8326"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8327"><highlight class="normal"></highlight></codeline>
<codeline lineno="8328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="8329"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x9b20716<sp/>=<sp/>(res))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8330"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>DansLeSegmentNotError.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8331"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8333"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8336"><highlight class="normal"></highlight></codeline>
<codeline lineno="8337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:10</highlight></codeline>
<codeline lineno="8338"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8339"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8340"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8341"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8342"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8344"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="8345"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="8346"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v___pyx_result;</highlight></codeline>
<codeline lineno="8347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="8348"><highlight class="normal"></highlight></codeline>
<codeline lineno="8349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="8350"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_DansLeSegmentNotError(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8351"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8352"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8354"><highlight class="normal"></highlight></codeline>
<codeline lineno="8355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8356"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="8357"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8358"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8359"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8360"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="8361"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8362"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8363"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="8364"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="8365"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="8366"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="8367"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8370"><highlight class="normal"></highlight></codeline>
<codeline lineno="8371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="8372"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8373"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8374"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8375"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8376"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8377"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8378"><highlight class="normal"></highlight></codeline>
<codeline lineno="8379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_DansLeSegmentNotError__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_DansLeSegmentNotError<sp/>*__pyx_v___pyx_result,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="8380"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8381"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8382"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="8385"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="8386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="8387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8388"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8389"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8390"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8394"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_DansLeSegmentNotError__set_state&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8395"><highlight class="normal"></highlight></codeline>
<codeline lineno="8396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="8397"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8398"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8399"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8400"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[1])</highlight></codeline>
<codeline lineno="8402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8404"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8405"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8407"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>0,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8408"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8409"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_As_int(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8410"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8411"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;res<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8412"><highlight class="normal"></highlight></codeline>
<codeline lineno="8413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8414"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8415"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8416"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8417"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[1])</highlight></codeline>
<codeline lineno="8418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;object<sp/>of<sp/>type<sp/>&apos;NoneType&apos;<sp/>has<sp/>no<sp/>len()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8423"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_v___pyx_state);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_4<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8424"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>((__pyx_t_4<sp/>&gt;<sp/>1)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_bool_binop_done;</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_HasAttr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_5<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8432"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"><sp/><sp/>__pyx_L4_bool_binop_done:;</highlight></codeline>
<codeline lineno="8434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="8435"><highlight class="normal"></highlight></codeline>
<codeline lineno="8436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:14</highlight></codeline>
<codeline lineno="8437"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8438"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8439"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[1])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8440"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8441"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8442"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8443"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_7,<sp/>__pyx_n_s_update);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8445"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8450"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8451"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8452"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_8)))<sp/>{</highlight></codeline>
<codeline lineno="8454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="8456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_8);</highlight></codeline>
<codeline lineno="8457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_8,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8462"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_9)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_8,<sp/>__pyx_t_9,<sp/>__pyx_t_7)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_8,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="8463"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8464"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8466"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8467"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8468"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8469"><highlight class="normal"></highlight></codeline>
<codeline lineno="8470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8471"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8472"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8473"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8474"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[1])</highlight></codeline>
<codeline lineno="8475"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8477"><highlight class="normal"></highlight></codeline>
<codeline lineno="8478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="8479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(&lt;DansLeSegmentNotError&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8481"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_DansLeSegmentNotError__set_state(DansLeSegmentNotError<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8482"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.res<sp/>=<sp/>__pyx_state[0]</highlight></codeline>
<codeline lineno="8483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>1<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8484"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8485"><highlight class="normal"></highlight></codeline>
<codeline lineno="8486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8487"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="8488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="8489"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="8490"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8491"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8492"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8493"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8494"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_DansLeSegmentNotError__set_state&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8495"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8496"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="8497"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="8498"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8501"><highlight class="normal"></highlight></codeline>
<codeline lineno="8502"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="8503"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Segment(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8504"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8505"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8507"><highlight class="normal"></highlight></codeline>
<codeline lineno="8508"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_17__pyx_unpickle_Segment(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_mdef_16seine_data_utils_17__pyx_unpickle_Segment<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_17__pyx_unpickle_Segment,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0};</highlight></codeline>
<codeline lineno="8511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pw_16seine_data_utils_17__pyx_unpickle_Segment(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="8512"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum;</highlight></codeline>
<codeline lineno="8514"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8518"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8519"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8520"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment<sp/>(wrapper)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s_pyx_type,&amp;__pyx_n_s_pyx_checksum,&amp;__pyx_n_s_pyx_state,0};</highlight></codeline>
<codeline lineno="8523"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[3]<sp/>=<sp/>{0,0,0};</highlight></codeline>
<codeline lineno="8524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="8525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args;</highlight></codeline>
<codeline lineno="8526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>pos_args<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_args);</highlight></codeline>
<codeline lineno="8527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="8528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>3:<sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="8529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="8531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="8533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="8538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pos_args)<sp/>{</highlight></codeline>
<codeline lineno="8539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="8540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[0]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_type))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="8544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[1]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_checksum))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>1);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="8549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:</highlight></codeline>
<codeline lineno="8550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((values[2]<sp/>=<sp/>__Pyx_PyDict_GetItemStr(__pyx_kwds,<sp/>__pyx_n_s_pyx_state))<sp/>!=<sp/>0))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="8551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>2);<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="8556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>pos_args,<sp/></highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8558"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="8559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="8560"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="8562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="8563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="8564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8565"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_type<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="8566"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_checksum<sp/>=<sp/>__Pyx_PyInt_As_long(values[1]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_v___pyx_checksum<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8567"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_state<sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="8568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="8570"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="8571"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>3,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L3_error)</highlight></codeline>
<codeline lineno="8572"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="8573"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8574"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="8576"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="8577"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_pf_16seine_data_utils_16__pyx_unpickle_Segment(__pyx_self,<sp/>__pyx_v___pyx_type,<sp/>__pyx_v___pyx_checksum,<sp/>__pyx_v___pyx_state);</highlight></codeline>
<codeline lineno="8578"><highlight class="normal"></highlight></codeline>
<codeline lineno="8579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8580"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8583"><highlight class="normal"></highlight></codeline>
<codeline lineno="8584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_16seine_data_utils_16__pyx_unpickle_Segment(CYTHON_UNUSED<sp/>PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v___pyx_type,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_v___pyx_checksum,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="8585"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_PickleError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8586"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v___pyx_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8587"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8588"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="8590"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8591"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8592"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8593"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8598"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8599"><highlight class="normal"></highlight></codeline>
<codeline lineno="8600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="8601"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8602"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x712a2a7:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8604"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8605"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8606"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8607"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((__pyx_v___pyx_checksum<sp/>!=<sp/>0x712a2a7)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="8609"><highlight class="normal"></highlight></codeline>
<codeline lineno="8610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:5</highlight></codeline>
<codeline lineno="8611"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8612"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x712a2a7:</highlight></codeline>
<codeline lineno="8613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8614"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8616"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8617"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8618"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8619"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8620"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8621"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_n_s_PickleError);</highlight></codeline>
<codeline lineno="8622"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_Import(__pyx_n_s_pickle,<sp/>__pyx_t_2,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8623"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8624"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8625"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_3,<sp/>__pyx_n_s_PickleError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>5,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8626"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8627"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8628"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v___pyx_PickleError<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8629"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8630"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8631"><highlight class="normal"></highlight></codeline>
<codeline lineno="8632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:6</highlight></codeline>
<codeline lineno="8633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x712a2a7:</highlight></codeline>
<codeline lineno="8634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8635"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8637"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8638"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8639"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_From_long(__pyx_v___pyx_checksum);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8640"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8641"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x71,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8642"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8643"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8644"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="8645"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_v___pyx_PickleError;<sp/>__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="8647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="8649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="8650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="8651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8655"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_5)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_5,<sp/>__pyx_t_4)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="8656"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8657"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8659"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8660"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8661"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_3,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="8662"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8663"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>6,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8664"><highlight class="normal"></highlight></codeline>
<codeline lineno="8665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:4</highlight></codeline>
<codeline lineno="8666"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8667"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8668"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_checksum<sp/>!=<sp/>0x712a2a7:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8669"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8670"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8671"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8673"><highlight class="normal"></highlight></codeline>
<codeline lineno="8674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:7</highlight></codeline>
<codeline lineno="8675"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>pickle<sp/>import<sp/>PickleError<sp/>as<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8676"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8677"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8679"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8680"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8681"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment),<sp/>__pyx_n_s_new);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8682"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8683"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="8685"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="8687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_2);</highlight></codeline>
<codeline lineno="8688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_2,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8693"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_t_4)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_2,<sp/>__pyx_t_4,<sp/>__pyx_v___pyx_type)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_v___pyx_type);</highlight></codeline>
<codeline lineno="8694"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>7,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8696"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8697"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8698"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="8699"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8700"><highlight class="normal"></highlight></codeline>
<codeline lineno="8701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="8702"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8703"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8704"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8705"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8706"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8707"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8708"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_v___pyx_state<sp/>!=<sp/>Py_None);</highlight></codeline>
<codeline lineno="8709"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="8711"><highlight class="normal"></highlight></codeline>
<codeline lineno="8712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:9</highlight></codeline>
<codeline lineno="8713"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8714"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8715"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8716"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8717"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8718"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state)<sp/>==<sp/>Py_None)||(PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>%.16s,<sp/>got<sp/>%.200s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tuple&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(__pyx_v___pyx_state)-&gt;tp_name),<sp/>0)))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8720"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_f_16seine_data_utils___pyx_unpickle_Segment__set_state(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*)__pyx_v___pyx_result),<sp/>((PyObject*)__pyx_v___pyx_state));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>__PYX_ERR(1,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8721"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8722"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8723"><highlight class="normal"></highlight></codeline>
<codeline lineno="8724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:8</highlight></codeline>
<codeline lineno="8725"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>__pyx_PickleError(&quot;Incompatible<sp/>checksums<sp/>(%s<sp/>vs<sp/>0x712a2a7<sp/>=<sp/>(a,<sp/>b,<sp/>point_droit,<sp/>point_gauche))&quot;<sp/>%<sp/>__pyx_checksum)</highlight></codeline>
<codeline lineno="8726"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result<sp/>=<sp/>Segment.__new__(__pyx_type)</highlight></codeline>
<codeline lineno="8727"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8728"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8729"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8730"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8732"><highlight class="normal"></highlight></codeline>
<codeline lineno="8733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:10</highlight></codeline>
<codeline lineno="8734"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>__pyx_state<sp/>is<sp/>not<sp/>None:</highlight></codeline>
<codeline lineno="8735"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8736"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8737"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8739"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8740"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="8741"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="8742"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v___pyx_result;</highlight></codeline>
<codeline lineno="8743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="8744"><highlight class="normal"></highlight></codeline>
<codeline lineno="8745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="8746"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Segment(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8747"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="8748"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8749"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8750"><highlight class="normal"></highlight></codeline>
<codeline lineno="8751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8752"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="8753"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="8754"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="8755"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="8756"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="8757"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Segment&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8758"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8759"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="8760"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_PickleError);</highlight></codeline>
<codeline lineno="8761"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_v___pyx_result);</highlight></codeline>
<codeline lineno="8762"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="8763"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8766"><highlight class="normal"></highlight></codeline>
<codeline lineno="8767"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="8768"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8769"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8770"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8771"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8772"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8773"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8774"><highlight class="normal"></highlight></codeline>
<codeline lineno="8775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_f_16seine_data_utils___pyx_unpickle_Segment__set_state(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_16seine_data_utils_Segment<sp/>*__pyx_v___pyx_result,<sp/>PyObject<sp/>*__pyx_v___pyx_state)<sp/>{</highlight></codeline>
<codeline lineno="8776"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8777"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="8778"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="8781"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="8782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="8783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8784"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8785"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8786"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8790"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__pyx_unpickle_Segment__set_state&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="8791"><highlight class="normal"></highlight></codeline>
<codeline lineno="8792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:12</highlight></codeline>
<codeline lineno="8793"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8794"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8795"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8796"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8797"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[4])</highlight></codeline>
<codeline lineno="8798"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8800"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8801"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8803"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>0,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8804"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8805"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8806"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8807"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;a<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8809"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8810"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8812"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8813"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8814"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8815"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8816"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;b<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="8817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8818"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8819"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8821"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8822"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8823"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8824"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v___pyx_result-&gt;point_droit);</highlight></codeline>
<codeline lineno="8825"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v___pyx_result-&gt;point_droit);</highlight></codeline>
<codeline lineno="8826"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;point_droit<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="8827"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8829"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8830"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8831"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8832"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>3,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8833"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8834"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8835"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_v___pyx_result-&gt;point_gauche);</highlight></codeline>
<codeline lineno="8836"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v___pyx_result-&gt;point_gauche);</highlight></codeline>
<codeline lineno="8837"><highlight class="normal"><sp/><sp/>__pyx_v___pyx_result-&gt;point_gauche<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="8838"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8839"><highlight class="normal"></highlight></codeline>
<codeline lineno="8840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8841"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8843"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8844"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[4])</highlight></codeline>
<codeline lineno="8845"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8847"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;object<sp/>of<sp/>type<sp/>&apos;NoneType&apos;<sp/>has<sp/>no<sp/>len()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8848"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8850"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_SIZE(__pyx_v___pyx_state);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_4<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8851"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>((__pyx_t_4<sp/>&gt;<sp/>4)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="8853"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8854"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="8855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_bool_binop_done;</highlight></codeline>
<codeline lineno="8856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8857"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_HasAttr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(1,<sp/>13,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8858"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_t_5<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="8859"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="8860"><highlight class="normal"><sp/><sp/>__pyx_L4_bool_binop_done:;</highlight></codeline>
<codeline lineno="8861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="8862"><highlight class="normal"></highlight></codeline>
<codeline lineno="8863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:14</highlight></codeline>
<codeline lineno="8864"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8865"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8866"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[4])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8867"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8868"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(((PyObject<sp/>*)__pyx_v___pyx_result),<sp/>__pyx_n_s_dict);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8869"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8870"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_7,<sp/>__pyx_n_s_update);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8871"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8872"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_v___pyx_state<sp/>==<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="8874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;NoneType&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8877"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_GetItemInt_Tuple(__pyx_v___pyx_state,<sp/>4,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>1,<sp/>__Pyx_PyInt_From_long,<sp/>0,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8878"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8879"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>likely(PyMethod_Check(__pyx_t_8)))<sp/>{</highlight></codeline>
<codeline lineno="8881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="8883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_8);</highlight></codeline>
<codeline lineno="8884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_8,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8889"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_9)<sp/>?<sp/>__Pyx_PyObject_Call2Args(__pyx_t_8,<sp/>__pyx_t_9,<sp/>__pyx_t_7)<sp/>:<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_8,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="8890"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8891"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>14,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="8893"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8894"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_8);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8895"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8896"><highlight class="normal"></highlight></codeline>
<codeline lineno="8897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:13</highlight></codeline>
<codeline lineno="8898"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):</highlight></codeline>
<codeline lineno="8899"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8900"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8901"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_result.__dict__.update(__pyx_state[4])</highlight></codeline>
<codeline lineno="8902"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8904"><highlight class="normal"></highlight></codeline>
<codeline lineno="8905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="8906"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Segment__set_state(&lt;Segment&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="8907"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="8908"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Segment__set_state(Segment<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="8909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.a<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.b<sp/>=<sp/>__pyx_state[1];<sp/>__pyx_result.point_droit<sp/>=<sp/>__pyx_state[2];<sp/>__pyx_result.point_gauche<sp/>=<sp/>__pyx_state[3]</highlight></codeline>
<codeline lineno="8910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>4<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="8911"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8912"><highlight class="normal"></highlight></codeline>
<codeline lineno="8913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>exit<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8914"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="8915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="8916"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="8917"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="8918"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="8919"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="8920"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="8921"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;seine_data_utils.__pyx_unpickle_Segment__set_state&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="8922"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8923"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="8924"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="8925"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="8926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="8927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8928"><highlight class="normal"></highlight></codeline>
<codeline lineno="8929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_Point(PyTypeObject<sp/>*t,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="8930"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o;</highlight></codeline>
<codeline lineno="8931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((t-&gt;tp_flags<sp/>&amp;<sp/>Py_TPFLAGS_IS_ABSTRACT)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="8932"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="8933"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8934"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>(PyObject<sp/>*)<sp/>PyBaseObject_Type.tp_new(t,<sp/>__pyx_empty_tuple,<sp/>0);</highlight></codeline>
<codeline lineno="8935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="8938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8939"><highlight class="normal"></highlight></codeline>
<codeline lineno="8940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_16seine_data_utils_Point(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="8941"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyType_HasFeature(Py_TYPE(o),<sp/>Py_TPFLAGS_HAVE_FINALIZE)<sp/>&amp;&amp;<sp/>Py_TYPE(o)-&gt;tp_finalize)<sp/>&amp;&amp;<sp/>(!PyType_IS_GC(Py_TYPE(o))<sp/>||<sp/>!_PyGC_FINALIZED(o)))<sp/>{</highlight></codeline>
<codeline lineno="8943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_CallFinalizerFromDealloc(o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8945"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8946"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="8947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8948"><highlight class="normal"></highlight></codeline>
<codeline lineno="8949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_5Point_x(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="8950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1x_1__get__(o);</highlight></codeline>
<codeline lineno="8951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8952"><highlight class="normal"></highlight></codeline>
<codeline lineno="8953"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_5Point_x(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="8954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="8955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1x_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="8956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8958"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_NotImplementedError,<sp/></highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8962"><highlight class="normal"></highlight></codeline>
<codeline lineno="8963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_5Point_y(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="8964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1y_1__get__(o);</highlight></codeline>
<codeline lineno="8965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8966"><highlight class="normal"></highlight></codeline>
<codeline lineno="8967"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_5Point_y(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="8968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="8969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_5Point_1y_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="8970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8972"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_NotImplementedError,<sp/></highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8976"><highlight class="normal"></highlight></codeline>
<codeline lineno="8977"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_methods_16seine_data_utils_Point[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="8978"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_5Point_3plot,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0},</highlight></codeline>
<codeline lineno="8979"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_5Point_5__reduce_cython__,<sp/>METH_NOARGS,<sp/>0},</highlight></codeline>
<codeline lineno="8980"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_5Point_7__setstate_cython__,<sp/>METH_O,<sp/>0},</highlight></codeline>
<codeline lineno="8981"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="8982"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8983"><highlight class="normal"></highlight></codeline>
<codeline lineno="8984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyGetSetDef<sp/>__pyx_getsets_16seine_data_utils_Point[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="8985"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_5Point_x,<sp/>__pyx_setprop_16seine_data_utils_5Point_x,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="8986"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_5Point_y,<sp/>__pyx_setprop_16seine_data_utils_5Point_y,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="8987"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="8988"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8989"><highlight class="normal"></highlight></codeline>
<codeline lineno="8990"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>__pyx_type_16seine_data_utils_Point<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="8991"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="8992"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils.Point&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Point),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8994"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8995"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_16seine_data_utils_Point,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8996"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800b4</highlight></codeline>
<codeline lineno="8997"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8998"><highlight class="normal"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="8999"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4</highlight></codeline>
<codeline lineno="9000"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall_offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9001"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9002"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9003"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9004"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9005"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9006"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9007"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9008"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_async*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9009"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9010"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9011"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9012"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9013"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9014"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9015"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9016"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9017"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9018"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9019"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9020"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9021"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9022"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9023"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9024"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9025"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9026"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9027"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9028"><highlight class="normal"><sp/><sp/>__pyx_methods_16seine_data_utils_Point,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9029"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9030"><highlight class="normal"><sp/><sp/>__pyx_getsets_16seine_data_utils_Point,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9031"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9032"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9033"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9034"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9035"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9036"><highlight class="normal"><sp/><sp/>__pyx_pw_16seine_data_utils_5Point_1__init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9037"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9038"><highlight class="normal"><sp/><sp/>__pyx_tp_new_16seine_data_utils_Point,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9039"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9040"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9041"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9042"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9043"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9044"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9045"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9046"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_del*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9047"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_version_tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9048"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030400a1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9049"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_finalize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9050"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9051"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9052"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9053"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9054"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03090000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9055"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9056"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9057"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9058"><highlight class="normal"></highlight></codeline>
<codeline lineno="9059"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_DansLeSegmentNotError(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="9060"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o<sp/>=<sp/>(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_new(t,<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>k);</highlight></codeline>
<codeline lineno="9061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="9063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9064"><highlight class="normal"></highlight></codeline>
<codeline lineno="9065"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_16seine_data_utils_DansLeSegmentNotError(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="9066"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyType_HasFeature(Py_TYPE(o),<sp/>Py_TPFLAGS_HAVE_FINALIZE)<sp/>&amp;&amp;<sp/>Py_TYPE(o)-&gt;tp_finalize)<sp/>&amp;&amp;<sp/>!_PyGC_FINALIZED(o))<sp/>{</highlight></codeline>
<codeline lineno="9068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_CallFinalizerFromDealloc(o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9070"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9071"><highlight class="normal"><sp/><sp/>PyObject_GC_UnTrack(o);</highlight></codeline>
<codeline lineno="9072"><highlight class="normal"><sp/><sp/>PyObject_GC_Track(o);</highlight></codeline>
<codeline lineno="9073"><highlight class="normal"><sp/><sp/>(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_dealloc(o);</highlight></codeline>
<codeline lineno="9074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9075"><highlight class="normal"></highlight></codeline>
<codeline lineno="9076"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_traverse_16seine_data_utils_DansLeSegmentNotError(PyObject<sp/>*o,<sp/>visitproc<sp/>v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="9078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_traverse);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>e<sp/>=<sp/>(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_traverse(o,v,<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;<sp/>}</highlight></codeline>
<codeline lineno="9079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9081"><highlight class="normal"></highlight></codeline>
<codeline lineno="9082"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_clear_16seine_data_utils_DansLeSegmentNotError(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="9083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_clear);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>(&amp;((PyTypeObject*)PyExc_Exception)[0])-&gt;tp_clear(o);</highlight></codeline>
<codeline lineno="9084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9086"><highlight class="normal"></highlight></codeline>
<codeline lineno="9087"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_21DansLeSegmentNotError_res(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_1__get__(o);</highlight></codeline>
<codeline lineno="9089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9090"><highlight class="normal"></highlight></codeline>
<codeline lineno="9091"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_21DansLeSegmentNotError_res(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="9093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3res_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="9094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9096"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_NotImplementedError,<sp/></highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9100"><highlight class="normal"></highlight></codeline>
<codeline lineno="9101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_methods_16seine_data_utils_DansLeSegmentNotError[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9102"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_3__reduce_cython__,<sp/>METH_NOARGS,<sp/>0},</highlight></codeline>
<codeline lineno="9103"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_5__setstate_cython__,<sp/>METH_O,<sp/>0},</highlight></codeline>
<codeline lineno="9104"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9106"><highlight class="normal"></highlight></codeline>
<codeline lineno="9107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyGetSetDef<sp/>__pyx_getsets_16seine_data_utils_DansLeSegmentNotError[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9108"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;res&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_21DansLeSegmentNotError_res,<sp/>__pyx_setprop_16seine_data_utils_21DansLeSegmentNotError_res,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="9109"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9111"><highlight class="normal"></highlight></codeline>
<codeline lineno="9112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>__pyx_type_16seine_data_utils_DansLeSegmentNotError<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9113"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="9114"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils.DansLeSegmentNotError&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_DansLeSegmentNotError),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9116"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9117"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9118"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800b4</highlight></codeline>
<codeline lineno="9119"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9120"><highlight class="normal"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="9121"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4</highlight></codeline>
<codeline lineno="9122"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall_offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9124"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9125"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9127"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9130"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_async*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9132"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9133"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9134"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9135"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9136"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9137"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9138"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9139"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9140"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9141"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9142"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9143"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9144"><highlight class="normal"><sp/><sp/>__pyx_tp_traverse_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9145"><highlight class="normal"><sp/><sp/>__pyx_tp_clear_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9146"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9147"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9148"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9149"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9150"><highlight class="normal"><sp/><sp/>__pyx_methods_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9151"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9152"><highlight class="normal"><sp/><sp/>__pyx_getsets_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9153"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9154"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9155"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9156"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9157"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9158"><highlight class="normal"><sp/><sp/>__pyx_pw_16seine_data_utils_21DansLeSegmentNotError_1__init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9159"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9160"><highlight class="normal"><sp/><sp/>__pyx_tp_new_16seine_data_utils_DansLeSegmentNotError,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9161"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9162"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9163"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9164"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9165"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9166"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9167"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9168"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_del*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9169"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_version_tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030400a1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9171"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_finalize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9174"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9175"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03090000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9177"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_vtabstruct_16seine_data_utils_Segment<sp/>__pyx_vtable_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="9181"><highlight class="normal"></highlight></codeline>
<codeline lineno="9182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_16seine_data_utils_Segment(PyTypeObject<sp/>*t,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="9183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*p;</highlight></codeline>
<codeline lineno="9184"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o;</highlight></codeline>
<codeline lineno="9185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((t-&gt;tp_flags<sp/>&amp;<sp/>Py_TPFLAGS_IS_ABSTRACT)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="9186"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="9187"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9188"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>(PyObject<sp/>*)<sp/>PyBaseObject_Type.tp_new(t,<sp/>__pyx_empty_tuple,<sp/>0);</highlight></codeline>
<codeline lineno="9189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9191"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*)o);</highlight></codeline>
<codeline lineno="9192"><highlight class="normal"><sp/><sp/>p-&gt;__pyx_vtab<sp/>=<sp/>__pyx_vtabptr_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="9193"><highlight class="normal"><sp/><sp/>p-&gt;point_gauche<sp/>=<sp/>Py_None;<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="9194"><highlight class="normal"><sp/><sp/>p-&gt;point_droit<sp/>=<sp/>Py_None;<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="9195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="9196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9197"><highlight class="normal"></highlight></codeline>
<codeline lineno="9198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_16seine_data_utils_Segment(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="9199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*)o;</highlight></codeline>
<codeline lineno="9200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_USE_TP_FINALIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyType_HasFeature(Py_TYPE(o),<sp/>Py_TPFLAGS_HAVE_FINALIZE)<sp/>&amp;&amp;<sp/>Py_TYPE(o)-&gt;tp_finalize)<sp/>&amp;&amp;<sp/>!_PyGC_FINALIZED(o))<sp/>{</highlight></codeline>
<codeline lineno="9202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_CallFinalizerFromDealloc(o))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9205"><highlight class="normal"><sp/><sp/>PyObject_GC_UnTrack(o);</highlight></codeline>
<codeline lineno="9206"><highlight class="normal"><sp/><sp/>Py_CLEAR(p-&gt;point_gauche);</highlight></codeline>
<codeline lineno="9207"><highlight class="normal"><sp/><sp/>Py_CLEAR(p-&gt;point_droit);</highlight></codeline>
<codeline lineno="9208"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="9209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9210"><highlight class="normal"></highlight></codeline>
<codeline lineno="9211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_traverse_16seine_data_utils_Segment(PyObject<sp/>*o,<sp/>visitproc<sp/>v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="9213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*)o;</highlight></codeline>
<codeline lineno="9214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;point_gauche)<sp/>{</highlight></codeline>
<codeline lineno="9215"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>(*v)(p-&gt;point_gauche,<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="9216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;point_droit)<sp/>{</highlight></codeline>
<codeline lineno="9218"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>(*v)(p-&gt;point_droit,<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="9219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9222"><highlight class="normal"></highlight></codeline>
<codeline lineno="9223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_clear_16seine_data_utils_Segment(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="9224"><highlight class="normal"><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="9225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*)o;</highlight></codeline>
<codeline lineno="9226"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((PyObject*)p-&gt;point_gauche);</highlight></codeline>
<codeline lineno="9227"><highlight class="normal"><sp/><sp/>p-&gt;point_gauche<sp/>=<sp/>Py_None;<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="9228"><highlight class="normal"><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="9229"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((PyObject*)p-&gt;point_droit);</highlight></codeline>
<codeline lineno="9230"><highlight class="normal"><sp/><sp/>p-&gt;point_droit<sp/>=<sp/>Py_None;<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="9231"><highlight class="normal"><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="9232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9234"><highlight class="normal"></highlight></codeline>
<codeline lineno="9235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_7Segment_point_gauche(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_1__get__(o);</highlight></codeline>
<codeline lineno="9237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9238"><highlight class="normal"></highlight></codeline>
<codeline lineno="9239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_7Segment_point_gauche(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="9241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="9242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_12point_gauche_5__del__(o);</highlight></codeline>
<codeline lineno="9245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9247"><highlight class="normal"></highlight></codeline>
<codeline lineno="9248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_7Segment_point_droit(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_1__get__(o);</highlight></codeline>
<codeline lineno="9250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9251"><highlight class="normal"></highlight></codeline>
<codeline lineno="9252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_7Segment_point_droit(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="9254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="9255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_11point_droit_5__del__(o);</highlight></codeline>
<codeline lineno="9258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9260"><highlight class="normal"></highlight></codeline>
<codeline lineno="9261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_7Segment_a(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1a_1__get__(o);</highlight></codeline>
<codeline lineno="9263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9264"><highlight class="normal"></highlight></codeline>
<codeline lineno="9265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_7Segment_a(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="9267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1a_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="9268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9270"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_NotImplementedError,<sp/></highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9274"><highlight class="normal"></highlight></codeline>
<codeline lineno="9275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_getprop_16seine_data_utils_7Segment_b(PyObject<sp/>*o,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1b_1__get__(o);</highlight></codeline>
<codeline lineno="9277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9278"><highlight class="normal"></highlight></codeline>
<codeline lineno="9279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_setprop_16seine_data_utils_7Segment_b(PyObject<sp/>*o,<sp/>PyObject<sp/>*v,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="9281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pw_16seine_data_utils_7Segment_1b_3__set__(o,<sp/>v);</highlight></codeline>
<codeline lineno="9282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9284"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_NotImplementedError,<sp/></highlight><highlight class="stringliteral">&quot;__del__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9288"><highlight class="normal"></highlight></codeline>
<codeline lineno="9289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_methods_16seine_data_utils_Segment[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9290"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;en_dessous&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_7Segment_3en_dessous,<sp/>METH_O,<sp/>__pyx_doc_16seine_data_utils_7Segment_2en_dessous},</highlight></codeline>
<codeline lineno="9291"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(PyCFunctionWithKeywords)__pyx_pw_16seine_data_utils_7Segment_5plot,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>0},</highlight></codeline>
<codeline lineno="9292"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__reduce_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_7Segment_7__reduce_cython__,<sp/>METH_NOARGS,<sp/>0},</highlight></codeline>
<codeline lineno="9293"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__setstate_cython__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__pyx_pw_16seine_data_utils_7Segment_9__setstate_cython__,<sp/>METH_O,<sp/>0},</highlight></codeline>
<codeline lineno="9294"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9296"><highlight class="normal"></highlight></codeline>
<codeline lineno="9297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyGetSetDef<sp/>__pyx_getsets_16seine_data_utils_Segment[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9298"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;point_gauche&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_7Segment_point_gauche,<sp/>__pyx_setprop_16seine_data_utils_7Segment_point_gauche,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="9299"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;point_droit&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_7Segment_point_droit,<sp/>__pyx_setprop_16seine_data_utils_7Segment_point_droit,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="9300"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_7Segment_a,<sp/>__pyx_setprop_16seine_data_utils_7Segment_a,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="9301"><highlight class="normal"><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>__pyx_getprop_16seine_data_utils_7Segment_b,<sp/>__pyx_setprop_16seine_data_utils_7Segment_b,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0,<sp/>0},</highlight></codeline>
<codeline lineno="9302"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9303"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9304"><highlight class="normal"></highlight></codeline>
<codeline lineno="9305"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>__pyx_type_16seine_data_utils_Segment<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9306"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="9307"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils.Segment&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9309"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9310"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9311"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800b4</highlight></codeline>
<codeline lineno="9312"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9313"><highlight class="normal"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="9314"><highlight class="normal"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4</highlight></codeline>
<codeline lineno="9315"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall_offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9316"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9317"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9318"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9320"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9321"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9323"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_async*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9325"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9326"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9327"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9328"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9329"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9330"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9331"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9332"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9333"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9334"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9335"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9336"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9337"><highlight class="normal"><sp/><sp/>__pyx_tp_traverse_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9338"><highlight class="normal"><sp/><sp/>__pyx_tp_clear_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9339"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9340"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9341"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9342"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9343"><highlight class="normal"><sp/><sp/>__pyx_methods_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9344"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9345"><highlight class="normal"><sp/><sp/>__pyx_getsets_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9346"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9347"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9348"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9349"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9350"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9351"><highlight class="normal"><sp/><sp/>__pyx_pw_16seine_data_utils_7Segment_1__init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9352"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9353"><highlight class="normal"><sp/><sp/>__pyx_tp_new_16seine_data_utils_Segment,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9354"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9355"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9356"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9357"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9358"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9359"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9360"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9361"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_del*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9362"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_version_tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030400a1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9364"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_finalize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9366"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9367"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_vectorcall*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9368"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9369"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03090000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9370"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9371"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9373"><highlight class="normal"></highlight></codeline>
<codeline lineno="9374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9375"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9376"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9377"><highlight class="normal"></highlight></codeline>
<codeline lineno="9378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__pyx_pymod_create(PyObject<sp/>*spec,<sp/>PyModuleDef<sp/>*def);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pymod_exec_seine_data_utils(PyObject*<sp/>module);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyModuleDef_Slot<sp/>__pyx_moduledef_slots[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9383"><highlight class="normal"><sp/><sp/>{Py_mod_create,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)__pyx_pymod_create},</highlight></codeline>
<codeline lineno="9384"><highlight class="normal"><sp/><sp/>{Py_mod_exec,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)__pyx_pymod_exec_seine_data_utils},</highlight></codeline>
<codeline lineno="9385"><highlight class="normal"><sp/><sp/>{0,<sp/>NULL}</highlight></codeline>
<codeline lineno="9386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9388"><highlight class="normal"></highlight></codeline>
<codeline lineno="9389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyModuleDef<sp/>__pyx_moduledef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9390"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModuleDef_HEAD_INIT,</highlight></codeline>
<codeline lineno="9391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="9392"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>m_doc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9394"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>m_size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9395"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9396"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,<sp/></highlight><highlight class="comment">/*<sp/>m_size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9397"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9398"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_methods<sp/></highlight><highlight class="comment">/*<sp/>m_methods<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="9399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9400"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_moduledef_slots,<sp/></highlight><highlight class="comment">/*<sp/>m_slots<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9401"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9402"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_reload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9403"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9404"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_traverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9405"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_clear<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9406"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>m_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_SMALL_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9410"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9411"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_SMALL_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9412"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9413"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_SMALL_CODE<sp/>__attribute__((cold))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9414"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9415"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_SMALL_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9418"><highlight class="normal"></highlight></codeline>
<codeline lineno="9419"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_StringTabEntry<sp/>__pyx_string_tab[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="9420"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_BASE_DIR,<sp/>__pyx_k_BASE_DIR,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_BASE_DIR),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9421"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_DansLaFrontiereNotError,<sp/>__pyx_k_DansLaFrontiereNotError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_DansLaFrontiereNotError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9422"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_DansLeSegmentNotError,<sp/>__pyx_k_DansLeSegmentNotError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_DansLeSegmentNotError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9423"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_FILE_PATH,<sp/>__pyx_k_FILE_PATH,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_FILE_PATH),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9424"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere,<sp/>__pyx_k_Frontiere,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9425"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere_DansLaFrontiereNotErro,<sp/>__pyx_k_Frontiere_DansLaFrontiereNotErro,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere_DansLaFrontiereNotErro),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9426"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere_DansLaFrontiereNotErro_2,<sp/>__pyx_k_Frontiere_DansLaFrontiereNotErro_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere_DansLaFrontiereNotErro_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9427"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere_HorsDeLaFrontiereError,<sp/>__pyx_k_Frontiere_HorsDeLaFrontiereError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere_HorsDeLaFrontiereError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9428"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere___init,<sp/>__pyx_k_Frontiere___init,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere___init),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9429"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere_en_dessous,<sp/>__pyx_k_Frontiere_en_dessous,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere_en_dessous),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9430"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Frontiere_plot,<sp/>__pyx_k_Frontiere_plot,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Frontiere_plot),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9431"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_HorsDeLaFrontiereError,<sp/>__pyx_k_HorsDeLaFrontiereError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_HorsDeLaFrontiereError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9432"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_Incompatible_checksums_s_vs_0x71,<sp/>__pyx_k_Incompatible_checksums_s_vs_0x71,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Incompatible_checksums_s_vs_0x71),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9433"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_Incompatible_checksums_s_vs_0x9b,<sp/>__pyx_k_Incompatible_checksums_s_vs_0x9b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Incompatible_checksums_s_vs_0x9b),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9434"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_Incompatible_checksums_s_vs_0xc8,<sp/>__pyx_k_Incompatible_checksums_s_vs_0xc8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Incompatible_checksums_s_vs_0xc8),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9435"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_List,<sp/>__pyx_k_List,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_List),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9436"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Path,<sp/>__pyx_k_Path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Path),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9437"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_PickleError,<sp/>__pyx_k_PickleError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_PickleError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9438"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Point,<sp/>__pyx_k_Point,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Point),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9439"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_u_Point,<sp/>__pyx_k_Point,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Point),<sp/>0,<sp/>1,<sp/>0,<sp/>1},</highlight></codeline>
<codeline lineno="9440"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_REGEX_COORDINATES,<sp/>__pyx_k_REGEX_COORDINATES,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_REGEX_COORDINATES),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9441"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Segment,<sp/>__pyx_k_Segment,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Segment),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9442"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_Tuple,<sp/>__pyx_k_Tuple,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_Tuple),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9443"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_ZeroDivisionError,<sp/>__pyx_k_ZeroDivisionError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_ZeroDivisionError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9444"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s__3,<sp/>__pyx_k__3,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__3),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9445"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s__5,<sp/>__pyx_k__5,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__5),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9446"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s__8,<sp/>__pyx_k__8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__8),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9447"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__9,<sp/>__pyx_k__9,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__9),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9448"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_a,<sp/>__pyx_k_a,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_a),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9449"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_append,<sp/>__pyx_k_append,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_append),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9450"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_axis,<sp/>__pyx_k_axis,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_axis),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9451"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_b,<sp/>__pyx_k_b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_b),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9452"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_black,<sp/>__pyx_k_black,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_black),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9453"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_calcul_droites,<sp/>__pyx_k_calcul_droites,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_calcul_droites),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9454"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_cline_in_traceback,<sp/>__pyx_k_cline_in_traceback,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_cline_in_traceback),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9455"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_color,<sp/>__pyx_k_color,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_color),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9456"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_compile,<sp/>__pyx_k_compile,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_compile),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9457"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_coordinates_0_coordinates,<sp/>__pyx_k_coordinates_0_coordinates,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_coordinates_0_coordinates),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9458"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_coords,<sp/>__pyx_k_coords,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_coords),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9459"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_couleur,<sp/>__pyx_k_couleur,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_couleur),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9460"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_dans_la_frontiere,<sp/>__pyx_k_dans_la_frontiere,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_dans_la_frontiere),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9461"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_darkblue,<sp/>__pyx_k_darkblue,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_darkblue),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9462"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_darkred,<sp/>__pyx_k_darkred,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_darkred),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9463"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_data_trace_seine_kml,<sp/>__pyx_k_data_trace_seine_kml,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_data_trace_seine_kml),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9464"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_dict,<sp/>__pyx_k_dict,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_dict),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9465"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_doc,<sp/>__pyx_k_doc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_doc),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9466"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_e,<sp/>__pyx_k_e,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_e),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9467"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_en_dessous,<sp/>__pyx_k_en_dessous,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_en_dessous),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9468"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_encoding,<sp/>__pyx_k_encoding,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_encoding),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9469"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_end,<sp/>__pyx_k_end,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_end),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9470"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_enter,<sp/>__pyx_k_enter,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_enter),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9471"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_equal,<sp/>__pyx_k_equal,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_equal),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9472"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_exit,<sp/>__pyx_k_exit,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_exit),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9473"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_file,<sp/>__pyx_k_file,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_file),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9474"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_file_2,<sp/>__pyx_k_file_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_file_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9475"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_frontiere_Marne,<sp/>__pyx_k_frontiere_Marne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_frontiere_Marne),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9476"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_frontiere_nord,<sp/>__pyx_k_frontiere_nord,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_frontiere_nord),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9477"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_frontiere_ouest,<sp/>__pyx_k_frontiere_ouest,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_frontiere_ouest),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9478"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_gca,<sp/>__pyx_k_gca,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_gca),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9479"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_get_KML_data,<sp/>__pyx_k_get_KML_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_get_KML_data),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9480"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_get_coords,<sp/>__pyx_k_get_coords,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_get_coords),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9481"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_get_frontieres_utiles,<sp/>__pyx_k_get_frontieres_utiles,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_get_frontieres_utiles),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9482"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_get_frontieres_utiles_locals_lam,<sp/>__pyx_k_get_frontieres_utiles_locals_lam,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_get_frontieres_utiles_locals_lam),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9483"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_getstate,<sp/>__pyx_k_getstate,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_getstate),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9484"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_green,<sp/>__pyx_k_green,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_green),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9485"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_group,<sp/>__pyx_k_group,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_group),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9486"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_import,<sp/>__pyx_k_import,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_import),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9487"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_init,<sp/>__pyx_k_init,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_init),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9488"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_u_int,<sp/>__pyx_k_int,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_int),<sp/>0,<sp/>1,<sp/>0,<sp/>1},</highlight></codeline>
<codeline lineno="9489"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_kml_filename,<sp/>__pyx_k_kml_filename,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_kml_filename),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9490"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_lambda,<sp/>__pyx_k_lambda,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_lambda),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9491"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_lat,<sp/>__pyx_k_lat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_lat),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9492"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_ligne,<sp/>__pyx_k_ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_ligne),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9493"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_linewidth,<sp/>__pyx_k_linewidth,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_linewidth),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9494"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_linspace,<sp/>__pyx_k_linspace,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_linspace),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9495"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_liste_coordonnees,<sp/>__pyx_k_liste_coordonnees,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_coordonnees),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9496"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_k_liste_coordonnees_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_coordonnees_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9497"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_liste_droites_Marne,<sp/>__pyx_k_liste_droites_Marne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_droites_Marne),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9498"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_droites_Marne_2,<sp/>__pyx_k_liste_droites_Marne_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_droites_Marne_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9499"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_liste_droites_Seine,<sp/>__pyx_k_liste_droites_Seine,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_droites_Seine),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9500"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_droites_Seine_2,<sp/>__pyx_k_liste_droites_Seine_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_droites_Seine_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9501"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_frontieres,<sp/>__pyx_k_liste_frontieres,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_frontieres),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9502"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_points,<sp/>__pyx_k_liste_points,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_points),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9503"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_segments,<sp/>__pyx_k_liste_segments,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_segments),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9504"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_segments_Marne,<sp/>__pyx_k_liste_segments_Marne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_segments_Marne),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9505"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_liste_segments_Seine,<sp/>__pyx_k_liste_segments_Seine,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_liste_segments_Seine),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9506"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_longueur,<sp/>__pyx_k_longueur,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_longueur),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9507"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_main,<sp/>__pyx_k_main,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_main),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9508"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_map,<sp/>__pyx_k_map,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_map),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9509"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_marker,<sp/>__pyx_k_marker,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_marker),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9510"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_match,<sp/>__pyx_k_match,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_match),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9511"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_matplotlib_pyplot,<sp/>__pyx_k_matplotlib_pyplot,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_matplotlib_pyplot),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9512"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_metaclass,<sp/>__pyx_k_metaclass,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_metaclass),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9513"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_module,<sp/>__pyx_k_module,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_module),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9514"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_name,<sp/>__pyx_k_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_name),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9515"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_new,<sp/>__pyx_k_new,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_new),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9516"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_no_coord,<sp/>__pyx_k_no_coord,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_no_coord),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9517"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_no_coord_1,<sp/>__pyx_k_no_coord_1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_no_coord_1),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9518"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_no_coord_2,<sp/>__pyx_k_no_coord_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_no_coord_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9519"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_not_in_frontiere,<sp/>__pyx_k_not_in_frontiere,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_not_in_frontiere),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9520"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_np,<sp/>__pyx_k_np,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_np),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9521"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_numpy,<sp/>__pyx_k_numpy,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_numpy),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9522"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_open,<sp/>__pyx_k_open,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_open),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9523"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_orange,<sp/>__pyx_k_orange,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_orange),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9524"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_parent,<sp/>__pyx_k_parent,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_parent),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9525"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pathlib,<sp/>__pyx_k_pathlib,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pathlib),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9526"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_piche,<sp/>__pyx_k_piche,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_piche),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9527"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pickle,<sp/>__pyx_k_pickle,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pickle),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9528"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_plot,<sp/>__pyx_k_plot,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_plot),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9529"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_plt,<sp/>__pyx_k_plt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_plt),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9530"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_point,<sp/>__pyx_k_point,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_point),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9531"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_point_1,<sp/>__pyx_k_point_1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_point_1),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9532"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_point_2,<sp/>__pyx_k_point_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_point_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9533"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pprint,<sp/>__pyx_k_pprint,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pprint),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9534"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_prepare,<sp/>__pyx_k_prepare,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_prepare),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9535"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_print,<sp/>__pyx_k_print,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_print),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9536"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_PickleError,<sp/>__pyx_k_pyx_PickleError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_PickleError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9537"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_checksum,<sp/>__pyx_k_pyx_checksum,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_checksum),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9538"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_result,<sp/>__pyx_k_pyx_result,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_result),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9539"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_state,<sp/>__pyx_k_pyx_state,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_state),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9540"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_type,<sp/>__pyx_k_pyx_type,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_type),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9541"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_unpickle_DansLeSegmentNotE,<sp/>__pyx_k_pyx_unpickle_DansLeSegmentNotE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_unpickle_DansLeSegmentNotE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9542"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_unpickle_Point,<sp/>__pyx_k_pyx_unpickle_Point,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_unpickle_Point),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9543"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_unpickle_Segment,<sp/>__pyx_k_pyx_unpickle_Segment,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_unpickle_Segment),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9544"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_pyx_vtable,<sp/>__pyx_k_pyx_vtable,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_pyx_vtable),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9545"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_qualname,<sp/>__pyx_k_qualname,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_qualname),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9546"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_r,<sp/>__pyx_k_r,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_r),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9547"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_range,<sp/>__pyx_k_range,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_range),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9548"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_re,<sp/>__pyx_k_re,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_re),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9549"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_readlines,<sp/>__pyx_k_readlines,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_readlines),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9550"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_red,<sp/>__pyx_k_red,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_red),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9551"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_reduce,<sp/>__pyx_k_reduce,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_reduce),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9552"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_reduce_cython,<sp/>__pyx_k_reduce_cython,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_reduce_cython),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9553"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_reduce_ex,<sp/>__pyx_k_reduce_ex,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_reduce_ex),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9554"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_res,<sp/>__pyx_k_res,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_res),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9555"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_resolve,<sp/>__pyx_k_resolve,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_resolve),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9556"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_return,<sp/>__pyx_k_return,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_return),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9557"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_scatter,<sp/>__pyx_k_scatter,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_scatter),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9558"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_search,<sp/>__pyx_k_search,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_search),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9559"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_seg,<sp/>__pyx_k_seg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_seg),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9560"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_segment,<sp/>__pyx_k_segment,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_segment),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9561"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_seine_KML,<sp/>__pyx_k_seine_KML,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_seine_KML),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9562"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_seine_data_utils,<sp/>__pyx_k_seine_data_utils,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_seine_data_utils),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9563"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_self,<sp/>__pyx_k_self,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_self),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9564"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_set_aspect,<sp/>__pyx_k_set_aspect,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_set_aspect),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9565"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_setstate,<sp/>__pyx_k_setstate,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_setstate),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9566"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_setstate_cython,<sp/>__pyx_k_setstate_cython,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_setstate_cython),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9567"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_show,<sp/>__pyx_k_show,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_show),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9568"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_split,<sp/>__pyx_k_split,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_split),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9569"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_str_coords,<sp/>__pyx_k_str_coords,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_str_coords),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9570"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_stringsource,<sp/>__pyx_k_stringsource,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_stringsource),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9571"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_test,<sp/>__pyx_k_test,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_test),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9572"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_tight_layout,<sp/>__pyx_k_tight_layout,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_tight_layout),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9573"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_typing,<sp/>__pyx_k_typing,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_typing),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9574"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_update,<sp/>__pyx_k_update,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_update),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9575"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_utf8,<sp/>__pyx_k_utf8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_utf8),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9576"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_k_utils_seine_data_utils_pyx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_utils_seine_data_utils_pyx),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="9577"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_value,<sp/>__pyx_k_value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_value),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9578"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_violet,<sp/>__pyx_k_violet,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_violet),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9579"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_x,<sp/>__pyx_k_x,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_x),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9580"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_x_1,<sp/>__pyx_k_x_1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_x_1),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9581"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_x_2,<sp/>__pyx_k_x_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_x_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9582"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_xlim,<sp/>__pyx_k_xlim,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_xlim),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9583"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_y,<sp/>__pyx_k_y,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_y),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9584"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_y_1,<sp/>__pyx_k_y_1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_y_1),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9585"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_y_2,<sp/>__pyx_k_y_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_y_2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9586"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_ylim,<sp/>__pyx_k_ylim,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_ylim),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9587"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_zip,<sp/>__pyx_k_zip,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_zip),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="9588"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="9589"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitCachedBuiltins(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="9591"><highlight class="normal"><sp/><sp/>__pyx_builtin_map<sp/>=<sp/>__Pyx_GetBuiltinName(__pyx_n_s_map);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_map)<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9592"><highlight class="normal"><sp/><sp/>__pyx_builtin_range<sp/>=<sp/>__Pyx_GetBuiltinName(__pyx_n_s_range);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_range)<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9593"><highlight class="normal"><sp/><sp/>__pyx_builtin_zip<sp/>=<sp/>__Pyx_GetBuiltinName(__pyx_n_s_zip);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_zip)<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9594"><highlight class="normal"><sp/><sp/>__pyx_builtin_open<sp/>=<sp/>__Pyx_GetBuiltinName(__pyx_n_s_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_open)<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9595"><highlight class="normal"><sp/><sp/>__pyx_builtin_ZeroDivisionError<sp/>=<sp/>__Pyx_GetBuiltinName(__pyx_n_s_ZeroDivisionError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_ZeroDivisionError)<sp/>__PYX_ERR(0,<sp/>136,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9597"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="9598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9600"><highlight class="normal"></highlight></codeline>
<codeline lineno="9601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitCachedConstants(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="9602"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="9603"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_InitCachedConstants&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="9604"><highlight class="normal"></highlight></codeline>
<codeline lineno="9605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:28</highlight></codeline>
<codeline lineno="9606"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="9608"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>open(BASE_DIR/kml_filename,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9609"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seine_KML<sp/>=<sp/>file.readlines()</highlight></codeline>
<codeline lineno="9610"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="9611"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9612"><highlight class="normal"><sp/><sp/>__pyx_tuple_<sp/>=<sp/>PyTuple_Pack(3,<sp/>Py_None,<sp/>Py_None,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple_))<sp/>__PYX_ERR(0,<sp/>28,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9613"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple_);</highlight></codeline>
<codeline lineno="9614"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple_);</highlight></codeline>
<codeline lineno="9615"><highlight class="normal"></highlight></codeline>
<codeline lineno="9616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:158</highlight></codeline>
<codeline lineno="9617"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>point.y<sp/>&gt;<sp/>self.a<sp/>*<sp/>point.x<sp/>+<sp/>self.b:<sp/>#<sp/>le<sp/>point<sp/>est<sp/>au-dessus</highlight></codeline>
<codeline lineno="9618"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>1</highlight></codeline>
<codeline lineno="9619"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9620"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="9621"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="9622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9623"><highlight class="normal"><sp/><sp/>__pyx_tuple__6<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_int_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__6))<sp/>__PYX_ERR(0,<sp/>158,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9624"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__6);</highlight></codeline>
<codeline lineno="9625"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__6);</highlight></codeline>
<codeline lineno="9626"><highlight class="normal"></highlight></codeline>
<codeline lineno="9627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:161</highlight></codeline>
<codeline lineno="9628"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="9629"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="9630"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>DansLeSegmentNotError(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9631"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9632"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/>def<sp/>__repr__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="9633"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9634"><highlight class="normal"><sp/><sp/>__pyx_tuple__7<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_int_0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__7))<sp/>__PYX_ERR(0,<sp/>161,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9635"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__7);</highlight></codeline>
<codeline lineno="9636"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__7);</highlight></codeline>
<codeline lineno="9637"><highlight class="normal"></highlight></codeline>
<codeline lineno="9638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:23</highlight></codeline>
<codeline lineno="9639"><highlight class="comment"><sp/>*<sp/>BASE_DIR<sp/>=<sp/>FILE_PATH.parent.parent.parent#.parent</highlight></codeline>
<codeline lineno="9640"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9641"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9642"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9643"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="9644"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9645"><highlight class="normal"><sp/><sp/>__pyx_tuple__10<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_kp_s_coordinates_0_coordinates);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__10))<sp/>__PYX_ERR(0,<sp/>23,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9646"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__10);</highlight></codeline>
<codeline lineno="9647"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__10);</highlight></codeline>
<codeline lineno="9648"><highlight class="normal"></highlight></codeline>
<codeline lineno="9649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:25</highlight></codeline>
<codeline lineno="9650"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)</highlight></codeline>
<codeline lineno="9651"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9652"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9653"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9654"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="9655"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9656"><highlight class="normal"><sp/><sp/>__pyx_tuple__11<sp/>=<sp/>PyTuple_Pack(3,<sp/>__pyx_n_s_kml_filename,<sp/>__pyx_n_s_file_2,<sp/>__pyx_n_s_seine_KML);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__11))<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9657"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__11);</highlight></codeline>
<codeline lineno="9658"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__11);</highlight></codeline>
<codeline lineno="9659"><highlight class="normal"><sp/><sp/>__pyx_codeobj__12<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(1,<sp/>0,<sp/>3,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__11,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_get_KML_data,<sp/>25,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__12))<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9660"><highlight class="normal"></highlight></codeline>
<codeline lineno="9661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:32</highlight></codeline>
<codeline lineno="9662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="9663"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9664"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9665"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="9666"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9667"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9668"><highlight class="normal"><sp/><sp/>__pyx_tuple__13<sp/>=<sp/>PyTuple_Pack(6,<sp/>__pyx_n_s_seine_KML,<sp/>__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_n_s_ligne,<sp/>__pyx_n_s_match,<sp/>__pyx_n_s_str_coords,<sp/>__pyx_n_s_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__13))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9669"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__13);</highlight></codeline>
<codeline lineno="9670"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__13);</highlight></codeline>
<codeline lineno="9671"><highlight class="normal"><sp/><sp/>__pyx_codeobj__14<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(1,<sp/>0,<sp/>6,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__13,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_get_coords,<sp/>32,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__14))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9672"><highlight class="normal"></highlight></codeline>
<codeline lineno="9673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:49</highlight></codeline>
<codeline lineno="9674"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="9675"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9676"><highlight class="comment"><sp/>*<sp/>def<sp/>calcul_droites(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9677"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>a<sp/>obtenu<sp/>toutes<sp/>les<sp/>coordonnees<sp/>des<sp/>points</highlight></codeline>
<codeline lineno="9679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9680"><highlight class="normal"><sp/><sp/>__pyx_tuple__15<sp/>=<sp/>PyTuple_Pack(12,<sp/>__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_n_s_liste_droites_Seine_2,<sp/>__pyx_n_s_liste_droites_Marne_2,<sp/>__pyx_n_s_no_coord,<sp/>__pyx_n_s_x_1,<sp/>__pyx_n_s_y_1,<sp/>__pyx_n_s_x_2,<sp/>__pyx_n_s_y_2,<sp/>__pyx_n_s_a,<sp/>__pyx_n_s_b,<sp/>__pyx_n_s_no_coord_1,<sp/>__pyx_n_s_no_coord_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__15))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9681"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__15);</highlight></codeline>
<codeline lineno="9682"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__15);</highlight></codeline>
<codeline lineno="9683"><highlight class="normal"><sp/><sp/>__pyx_codeobj__16<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(1,<sp/>0,<sp/>12,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__15,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_calcul_droites,<sp/>49,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__16))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9684"><highlight class="normal"></highlight></codeline>
<codeline lineno="9685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:169</highlight></codeline>
<codeline lineno="9686"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="9687"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9688"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9689"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="9690"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():</highlight></codeline>
<codeline lineno="9691"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9692"><highlight class="normal"><sp/><sp/>__pyx_codeobj__17<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(0,<sp/>0,<sp/>0,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_not_in_frontiere,<sp/>169,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__17))<sp/>__PYX_ERR(0,<sp/>169,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9693"><highlight class="normal"></highlight></codeline>
<codeline lineno="9694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:171</highlight></codeline>
<codeline lineno="9695"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():</highlight></codeline>
<codeline lineno="9696"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="9697"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9698"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="9699"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9700"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9701"><highlight class="normal"><sp/><sp/>__pyx_codeobj__18<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(0,<sp/>0,<sp/>0,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_dans_la_frontiere,<sp/>171,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__18))<sp/>__PYX_ERR(0,<sp/>171,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9702"><highlight class="normal"></highlight></codeline>
<codeline lineno="9703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:175</highlight></codeline>
<codeline lineno="9704"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9705"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:</highlight></codeline>
<codeline lineno="9706"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9707"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="9708"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9709"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9710"><highlight class="normal"><sp/><sp/>__pyx_tuple__19<sp/>=<sp/>PyTuple_Pack(2,<sp/>__pyx_n_s_self,<sp/>__pyx_n_s_liste_segments);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__19))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9711"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__19);</highlight></codeline>
<codeline lineno="9712"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__19);</highlight></codeline>
<codeline lineno="9713"><highlight class="normal"><sp/><sp/>__pyx_codeobj__20<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(2,<sp/>0,<sp/>2,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__19,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_init,<sp/>175,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__20))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9714"><highlight class="normal"></highlight></codeline>
<codeline lineno="9715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:181</highlight></codeline>
<codeline lineno="9716"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="9717"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="9718"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9719"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="9720"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9721"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9722"><highlight class="normal"><sp/><sp/>__pyx_tuple__21<sp/>=<sp/>PyTuple_Pack(2,<sp/>__pyx_n_s_self,<sp/>__pyx_n_s_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__21))<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9723"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__21);</highlight></codeline>
<codeline lineno="9724"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__21);</highlight></codeline>
<codeline lineno="9725"><highlight class="normal"><sp/><sp/>__pyx_codeobj__22<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(2,<sp/>0,<sp/>2,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__21,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_init,<sp/>181,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__22))<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9726"><highlight class="normal"></highlight></codeline>
<codeline lineno="9727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:184</highlight></codeline>
<codeline lineno="9728"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="9729"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9730"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9731"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>la<sp/>frontire<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="9732"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>frontire</highlight></codeline>
<codeline lineno="9733"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9734"><highlight class="normal"><sp/><sp/>__pyx_tuple__23<sp/>=<sp/>PyTuple_Pack(4,<sp/>__pyx_n_s_self,<sp/>__pyx_n_s_point,<sp/>__pyx_n_s_segment,<sp/>__pyx_n_s_e);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__23))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9735"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__23);</highlight></codeline>
<codeline lineno="9736"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__23);</highlight></codeline>
<codeline lineno="9737"><highlight class="normal"><sp/><sp/>__pyx_codeobj__24<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(2,<sp/>0,<sp/>4,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__23,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_en_dessous,<sp/>184,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__24))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9738"><highlight class="normal"></highlight></codeline>
<codeline lineno="9739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:201</highlight></codeline>
<codeline lineno="9740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="9741"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9742"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9743"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="9744"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="9745"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9746"><highlight class="normal"><sp/><sp/>__pyx_tuple__25<sp/>=<sp/>PyTuple_Pack(3,<sp/>__pyx_n_s_self,<sp/>__pyx_n_s_couleur,<sp/>__pyx_n_s_seg);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__25))<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9747"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__25);</highlight></codeline>
<codeline lineno="9748"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__25);</highlight></codeline>
<codeline lineno="9749"><highlight class="normal"><sp/><sp/>__pyx_codeobj__26<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(2,<sp/>0,<sp/>3,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__25,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_plot,<sp/>201,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__26))<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9750"><highlight class="normal"><sp/><sp/>__pyx_tuple__27<sp/>=<sp/>PyTuple_Pack(1,<sp/>((PyObject*)__pyx_n_s_red));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__27))<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9751"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__27);</highlight></codeline>
<codeline lineno="9752"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__27);</highlight></codeline>
<codeline lineno="9753"><highlight class="normal"></highlight></codeline>
<codeline lineno="9754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:208</highlight></codeline>
<codeline lineno="9755"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Frontire<sp/>de<sp/>{self.liste_segments[0]}<sp/><sp/>{self.liste_segments[-1]}&quot;</highlight></codeline>
<codeline lineno="9756"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9757"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9758"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="9759"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="9760"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9761"><highlight class="normal"><sp/><sp/>__pyx_tuple__28<sp/>=<sp/>PyTuple_Pack(8,<sp/>__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_n_s_liste_points,<sp/>__pyx_n_s_liste_segments_Seine,<sp/>__pyx_n_s_liste_segments_Marne,<sp/>__pyx_n_s_no_coord,<sp/>__pyx_n_s_no_coord_1,<sp/>__pyx_n_s_no_coord_2,<sp/>__pyx_n_s_liste_frontieres);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__28))<sp/>__PYX_ERR(0,<sp/>208,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9762"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__28);</highlight></codeline>
<codeline lineno="9763"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__28);</highlight></codeline>
<codeline lineno="9764"><highlight class="normal"><sp/><sp/>__pyx_codeobj__29<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(0,<sp/>0,<sp/>8,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__28,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_utils_seine_data_utils_pyx,<sp/>__pyx_n_s_get_frontieres_utiles,<sp/>208,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__29))<sp/>__PYX_ERR(0,<sp/>208,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9765"><highlight class="normal"></highlight></codeline>
<codeline lineno="9766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:271</highlight></codeline>
<codeline lineno="9767"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9768"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="9769"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9770"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)</highlight></codeline>
<codeline lineno="9771"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="9772"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9773"><highlight class="normal"><sp/><sp/>__pyx_tuple__30<sp/>=<sp/>PyTuple_Pack(2,<sp/>__pyx_float_48_76,<sp/>__pyx_float_48_97);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__30))<sp/>__PYX_ERR(0,<sp/>271,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9774"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__30);</highlight></codeline>
<codeline lineno="9775"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__30);</highlight></codeline>
<codeline lineno="9776"><highlight class="normal"></highlight></codeline>
<codeline lineno="9777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:272</highlight></codeline>
<codeline lineno="9778"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="9779"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="9780"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9781"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="9782"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9783"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9784"><highlight class="normal"><sp/><sp/>__pyx_tuple__31<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_equal);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__31))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9785"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__31);</highlight></codeline>
<codeline lineno="9786"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__31);</highlight></codeline>
<codeline lineno="9787"><highlight class="normal"></highlight></codeline>
<codeline lineno="9788"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:278</highlight></codeline>
<codeline lineno="9789"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9790"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>des<sp/>frontires</highlight></codeline>
<codeline lineno="9791"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/>Frontiere(liste_segments_Seine[:5])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9792"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="9793"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="9794"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9795"><highlight class="normal"><sp/><sp/>__pyx_slice__32<sp/>=<sp/>PySlice_New(Py_None,<sp/>__pyx_int_5,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__32))<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9796"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__32);</highlight></codeline>
<codeline lineno="9797"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__32);</highlight></codeline>
<codeline lineno="9798"><highlight class="normal"></highlight></codeline>
<codeline lineno="9799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:280</highlight></codeline>
<codeline lineno="9800"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/>Frontiere(liste_segments_Seine[:5])</highlight></codeline>
<codeline lineno="9801"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="9802"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9803"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="9804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="9805"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9806"><highlight class="normal"><sp/><sp/>__pyx_slice__33<sp/>=<sp/>PySlice_New(__pyx_int_5,<sp/>__pyx_int_15,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__33))<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9807"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__33);</highlight></codeline>
<codeline lineno="9808"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__33);</highlight></codeline>
<codeline lineno="9809"><highlight class="normal"></highlight></codeline>
<codeline lineno="9810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:281</highlight></codeline>
<codeline lineno="9811"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="9812"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="9813"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="9815"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="9816"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9817"><highlight class="normal"><sp/><sp/>__pyx_tuple__34<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_green);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__34))<sp/>__PYX_ERR(0,<sp/>281,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9818"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__34);</highlight></codeline>
<codeline lineno="9819"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__34);</highlight></codeline>
<codeline lineno="9820"><highlight class="normal"></highlight></codeline>
<codeline lineno="9821"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:283</highlight></codeline>
<codeline lineno="9822"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="9823"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="9824"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9825"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9826"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="9827"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9828"><highlight class="normal"><sp/><sp/>__pyx_tuple__35<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_violet);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__35))<sp/>__PYX_ERR(0,<sp/>283,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9829"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__35);</highlight></codeline>
<codeline lineno="9830"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__35);</highlight></codeline>
<codeline lineno="9831"><highlight class="normal"></highlight></codeline>
<codeline lineno="9832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:284</highlight></codeline>
<codeline lineno="9833"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="9834"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="9835"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9836"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="9837"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9838"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9839"><highlight class="normal"><sp/><sp/>__pyx_slice__36<sp/>=<sp/>PySlice_New(__pyx_int_15,<sp/>__pyx_int_16,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__36))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9840"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__36);</highlight></codeline>
<codeline lineno="9841"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__36);</highlight></codeline>
<codeline lineno="9842"><highlight class="normal"><sp/><sp/>__pyx_tuple__37<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_red);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__37))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9843"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__37);</highlight></codeline>
<codeline lineno="9844"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__37);</highlight></codeline>
<codeline lineno="9845"><highlight class="normal"></highlight></codeline>
<codeline lineno="9846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:285</highlight></codeline>
<codeline lineno="9847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="9848"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9849"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9850"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9851"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9852"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9853"><highlight class="normal"><sp/><sp/>__pyx_slice__38<sp/>=<sp/>PySlice_New(__pyx_int_16,<sp/>__pyx_int_17,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__38))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9854"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__38);</highlight></codeline>
<codeline lineno="9855"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__38);</highlight></codeline>
<codeline lineno="9856"><highlight class="normal"><sp/><sp/>__pyx_tuple__39<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_darkred);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__39))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9857"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__39);</highlight></codeline>
<codeline lineno="9858"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__39);</highlight></codeline>
<codeline lineno="9859"><highlight class="normal"></highlight></codeline>
<codeline lineno="9860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:286</highlight></codeline>
<codeline lineno="9861"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9862"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="9863"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9864"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9865"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9866"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9867"><highlight class="normal"><sp/><sp/>__pyx_slice__40<sp/>=<sp/>PySlice_New(__pyx_int_17,<sp/>__pyx_int_31,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__40))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9868"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__40);</highlight></codeline>
<codeline lineno="9869"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__40);</highlight></codeline>
<codeline lineno="9870"><highlight class="normal"></highlight></codeline>
<codeline lineno="9871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:287</highlight></codeline>
<codeline lineno="9872"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="9873"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9874"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9875"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9876"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9877"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9878"><highlight class="normal"><sp/><sp/>__pyx_slice__41<sp/>=<sp/>PySlice_New(__pyx_int_31,<sp/>__pyx_int_32,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__41))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9879"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__41);</highlight></codeline>
<codeline lineno="9880"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__41);</highlight></codeline>
<codeline lineno="9881"><highlight class="normal"><sp/><sp/>__pyx_tuple__42<sp/>=<sp/>PyTuple_Pack(1,<sp/>__pyx_n_s_orange);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__42))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9882"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__42);</highlight></codeline>
<codeline lineno="9883"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__42);</highlight></codeline>
<codeline lineno="9884"><highlight class="normal"></highlight></codeline>
<codeline lineno="9885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:288</highlight></codeline>
<codeline lineno="9886"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="9887"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9888"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9889"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9890"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9891"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9892"><highlight class="normal"><sp/><sp/>__pyx_slice__43<sp/>=<sp/>PySlice_New(__pyx_int_32,<sp/>__pyx_int_33,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__43))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9893"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__43);</highlight></codeline>
<codeline lineno="9894"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__43);</highlight></codeline>
<codeline lineno="9895"><highlight class="normal"></highlight></codeline>
<codeline lineno="9896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:289</highlight></codeline>
<codeline lineno="9897"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9898"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="9899"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9900"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9901"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="9902"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9903"><highlight class="normal"><sp/><sp/>__pyx_slice__44<sp/>=<sp/>PySlice_New(__pyx_int_33,<sp/>__pyx_int_34,<sp/>Py_None);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_slice__44))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9904"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_slice__44);</highlight></codeline>
<codeline lineno="9905"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_slice__44);</highlight></codeline>
<codeline lineno="9906"><highlight class="normal"></highlight></codeline>
<codeline lineno="9907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:303</highlight></codeline>
<codeline lineno="9908"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>trace<sp/>tout<sp/>a<sp/>pour<sp/>vrifier</highlight></codeline>
<codeline lineno="9910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(2.2,<sp/>2.45,<sp/>100)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9911"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9912"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>a,<sp/>b<sp/>in<sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:</highlight></codeline>
<codeline lineno="9913"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9914"><highlight class="normal"><sp/><sp/>__pyx_tuple__45<sp/>=<sp/>PyTuple_Pack(3,<sp/>__pyx_float_2_2,<sp/>__pyx_float_2_45,<sp/>__pyx_int_100);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__45))<sp/>__PYX_ERR(0,<sp/>303,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9915"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__45);</highlight></codeline>
<codeline lineno="9916"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__45);</highlight></codeline>
<codeline lineno="9917"><highlight class="normal"></highlight></codeline>
<codeline lineno="9918"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:312</highlight></codeline>
<codeline lineno="9919"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="9920"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9921"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9922"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)</highlight></codeline>
<codeline lineno="9923"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="9924"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9925"><highlight class="normal"><sp/><sp/>__pyx_tuple__46<sp/>=<sp/>PyTuple_Pack(2,<sp/>__pyx_float_2_2,<sp/>__pyx_float_2_45);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__46))<sp/>__PYX_ERR(0,<sp/>312,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9926"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__46);</highlight></codeline>
<codeline lineno="9927"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__46);</highlight></codeline>
<codeline lineno="9928"><highlight class="normal"></highlight></codeline>
<codeline lineno="9929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:313</highlight></codeline>
<codeline lineno="9930"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9931"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="9932"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9933"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="9934"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9935"><highlight class="normal"><sp/><sp/>__pyx_tuple__47<sp/>=<sp/>PyTuple_Pack(2,<sp/>__pyx_float_48_75,<sp/>__pyx_int_49);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__47))<sp/>__PYX_ERR(0,<sp/>313,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9936"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__47);</highlight></codeline>
<codeline lineno="9937"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__47);</highlight></codeline>
<codeline lineno="9938"><highlight class="normal"></highlight></codeline>
<codeline lineno="9939"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="9940"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Point(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="9941"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="9942"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="9943"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9944"><highlight class="normal"><sp/><sp/>__pyx_tuple__48<sp/>=<sp/>PyTuple_Pack(5,<sp/>__pyx_n_s_pyx_type,<sp/>__pyx_n_s_pyx_checksum,<sp/>__pyx_n_s_pyx_state,<sp/>__pyx_n_s_pyx_PickleError,<sp/>__pyx_n_s_pyx_result);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__48))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9945"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__48);</highlight></codeline>
<codeline lineno="9946"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__48);</highlight></codeline>
<codeline lineno="9947"><highlight class="normal"><sp/><sp/>__pyx_codeobj__49<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(3,<sp/>0,<sp/>5,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__48,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_stringsource,<sp/>__pyx_n_s_pyx_unpickle_Point,<sp/>1,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__49))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9948"><highlight class="normal"><sp/><sp/>__pyx_tuple__50<sp/>=<sp/>PyTuple_Pack(5,<sp/>__pyx_n_s_pyx_type,<sp/>__pyx_n_s_pyx_checksum,<sp/>__pyx_n_s_pyx_state,<sp/>__pyx_n_s_pyx_PickleError,<sp/>__pyx_n_s_pyx_result);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__50))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9949"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__50);</highlight></codeline>
<codeline lineno="9950"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__50);</highlight></codeline>
<codeline lineno="9951"><highlight class="normal"><sp/><sp/>__pyx_codeobj__51<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(3,<sp/>0,<sp/>5,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__50,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_stringsource,<sp/>__pyx_n_s_pyx_unpickle_DansLeSegmentNotE,<sp/>1,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__51))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9952"><highlight class="normal"><sp/><sp/>__pyx_tuple__52<sp/>=<sp/>PyTuple_Pack(5,<sp/>__pyx_n_s_pyx_type,<sp/>__pyx_n_s_pyx_checksum,<sp/>__pyx_n_s_pyx_state,<sp/>__pyx_n_s_pyx_PickleError,<sp/>__pyx_n_s_pyx_result);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_tuple__52))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9953"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_tuple__52);</highlight></codeline>
<codeline lineno="9954"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_tuple__52);</highlight></codeline>
<codeline lineno="9955"><highlight class="normal"><sp/><sp/>__pyx_codeobj__53<sp/>=<sp/>(PyObject*)__Pyx_PyCode_New(3,<sp/>0,<sp/>5,<sp/>0,<sp/>CO_OPTIMIZED|CO_NEWLOCALS,<sp/>__pyx_empty_bytes,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_tuple__52,<sp/>__pyx_empty_tuple,<sp/>__pyx_empty_tuple,<sp/>__pyx_kp_s_stringsource,<sp/>__pyx_n_s_pyx_unpickle_Segment,<sp/>1,<sp/>__pyx_empty_bytes);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_codeobj__53))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9956"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="9957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9958"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="9959"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="9960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9962"><highlight class="normal"></highlight></codeline>
<codeline lineno="9963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitGlobals(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="9964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitStrings(__pyx_string_tab)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error);</highlight></codeline>
<codeline lineno="9965"><highlight class="normal"><sp/><sp/>__pyx_float_0_2<sp/>=<sp/>PyFloat_FromDouble(0.2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_0_2))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9966"><highlight class="normal"><sp/><sp/>__pyx_float_2_2<sp/>=<sp/>PyFloat_FromDouble(2.2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_2_2))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9967"><highlight class="normal"><sp/><sp/>__pyx_float_2_45<sp/>=<sp/>PyFloat_FromDouble(2.45);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_2_45))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9968"><highlight class="normal"><sp/><sp/>__pyx_float_48_75<sp/>=<sp/>PyFloat_FromDouble(48.75);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_48_75))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9969"><highlight class="normal"><sp/><sp/>__pyx_float_48_76<sp/>=<sp/>PyFloat_FromDouble(48.76);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_48_76))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9970"><highlight class="normal"><sp/><sp/>__pyx_float_48_97<sp/>=<sp/>PyFloat_FromDouble(48.97);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_float_48_97))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9971"><highlight class="normal"><sp/><sp/>__pyx_int_0<sp/>=<sp/>PyInt_FromLong(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9972"><highlight class="normal"><sp/><sp/>__pyx_int_1<sp/>=<sp/>PyInt_FromLong(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_1))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9973"><highlight class="normal"><sp/><sp/>__pyx_int_2<sp/>=<sp/>PyInt_FromLong(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_2))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9974"><highlight class="normal"><sp/><sp/>__pyx_int_3<sp/>=<sp/>PyInt_FromLong(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_3))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9975"><highlight class="normal"><sp/><sp/>__pyx_int_5<sp/>=<sp/>PyInt_FromLong(5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_5))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9976"><highlight class="normal"><sp/><sp/>__pyx_int_15<sp/>=<sp/>PyInt_FromLong(15);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_15))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9977"><highlight class="normal"><sp/><sp/>__pyx_int_16<sp/>=<sp/>PyInt_FromLong(16);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_16))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9978"><highlight class="normal"><sp/><sp/>__pyx_int_17<sp/>=<sp/>PyInt_FromLong(17);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_17))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9979"><highlight class="normal"><sp/><sp/>__pyx_int_31<sp/>=<sp/>PyInt_FromLong(31);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_31))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9980"><highlight class="normal"><sp/><sp/>__pyx_int_32<sp/>=<sp/>PyInt_FromLong(32);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_32))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9981"><highlight class="normal"><sp/><sp/>__pyx_int_33<sp/>=<sp/>PyInt_FromLong(33);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_33))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9982"><highlight class="normal"><sp/><sp/>__pyx_int_34<sp/>=<sp/>PyInt_FromLong(34);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_34))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9983"><highlight class="normal"><sp/><sp/>__pyx_int_49<sp/>=<sp/>PyInt_FromLong(49);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_49))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9984"><highlight class="normal"><sp/><sp/>__pyx_int_100<sp/>=<sp/>PyInt_FromLong(100);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_100))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9985"><highlight class="normal"><sp/><sp/>__pyx_int_118661799<sp/>=<sp/>PyInt_FromLong(118661799L);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_118661799))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9986"><highlight class="normal"><sp/><sp/>__pyx_int_162662166<sp/>=<sp/>PyInt_FromLong(162662166L);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_162662166))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9987"><highlight class="normal"><sp/><sp/>__pyx_int_210574057<sp/>=<sp/>PyInt_FromLong(210574057L);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_210574057))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="9988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9989"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="9990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9992"><highlight class="normal"></highlight></codeline>
<codeline lineno="9993"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_global_init_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9994"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_variable_export_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_function_export_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9996"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_type_init_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9997"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_type_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9998"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_variable_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9999"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_function_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10000"><highlight class="normal"></highlight></codeline>
<codeline lineno="10001"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_global_init_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10002"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10003"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_global_init_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Global<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10005"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10008"><highlight class="normal"></highlight></codeline>
<codeline lineno="10009"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_variable_export_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10010"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10011"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_variable_export_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Variable<sp/>export<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10013"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10016"><highlight class="normal"></highlight></codeline>
<codeline lineno="10017"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_function_export_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10018"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10019"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_function_export_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>export<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10021"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10024"><highlight class="normal"></highlight></codeline>
<codeline lineno="10025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_type_init_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10026"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10030"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_type_init_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_16seine_data_utils_Point)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>92,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10033"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10034"><highlight class="normal"><sp/><sp/>__pyx_type_16seine_data_utils_Point.tp_print<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10035"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP)<sp/>&amp;&amp;<sp/>likely(!__pyx_type_16seine_data_utils_Point.tp_dictoffset<sp/>&amp;&amp;<sp/>__pyx_type_16seine_data_utils_Point.tp_getattro<sp/>==<sp/>PyObject_GenericGetAttr))<sp/>{</highlight></codeline>
<codeline lineno="10037"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_type_16seine_data_utils_Point.tp_getattro<sp/>=<sp/>__Pyx_PyObject_GenericGetAttr;</highlight></codeline>
<codeline lineno="10038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_Point,<sp/>(PyObject<sp/>*)&amp;__pyx_type_16seine_data_utils_Point)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>92,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_setup_reduce((PyObject*)&amp;__pyx_type_16seine_data_utils_Point)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>92,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10041"><highlight class="normal"><sp/><sp/>__pyx_ptype_16seine_data_utils_Point<sp/>=<sp/>&amp;__pyx_type_16seine_data_utils_Point;</highlight></codeline>
<codeline lineno="10042"><highlight class="normal"><sp/><sp/>__pyx_type_16seine_data_utils_DansLeSegmentNotError.tp_base<sp/>=<sp/>(&amp;((PyTypeObject*)PyExc_Exception)[0]);</highlight></codeline>
<codeline lineno="10043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_16seine_data_utils_DansLeSegmentNotError)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>105,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10044"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10045"><highlight class="normal"><sp/><sp/>__pyx_type_16seine_data_utils_DansLeSegmentNotError.tp_print<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10046"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP)<sp/>&amp;&amp;<sp/>likely(!__pyx_type_16seine_data_utils_DansLeSegmentNotError.tp_dictoffset<sp/>&amp;&amp;<sp/>__pyx_type_16seine_data_utils_DansLeSegmentNotError.tp_getattro<sp/>==<sp/>PyObject_GenericGetAttr))<sp/>{</highlight></codeline>
<codeline lineno="10048"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_type_16seine_data_utils_DansLeSegmentNotError.tp_getattro<sp/>=<sp/>__Pyx_PyObject_GenericGetAttr;</highlight></codeline>
<codeline lineno="10049"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_DansLeSegmentNotError,<sp/>(PyObject<sp/>*)&amp;__pyx_type_16seine_data_utils_DansLeSegmentNotError)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>105,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_setup_reduce((PyObject*)&amp;__pyx_type_16seine_data_utils_DansLeSegmentNotError)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>105,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10052"><highlight class="normal"><sp/><sp/>__pyx_ptype_16seine_data_utils_DansLeSegmentNotError<sp/>=<sp/>&amp;__pyx_type_16seine_data_utils_DansLeSegmentNotError;</highlight></codeline>
<codeline lineno="10053"><highlight class="normal"><sp/><sp/>__pyx_vtabptr_16seine_data_utils_Segment<sp/>=<sp/>&amp;__pyx_vtable_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="10054"><highlight class="normal"><sp/><sp/>__pyx_vtable_16seine_data_utils_Segment.eq_droite<sp/>=<sp/>(__pyx_ctuple_double__and_double<sp/>(*)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_16seine_data_utils_Segment<sp/>*))__pyx_f_16seine_data_utils_7Segment_eq_droite;</highlight></codeline>
<codeline lineno="10055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_16seine_data_utils_Segment)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>110,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10056"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030800B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10057"><highlight class="normal"><sp/><sp/>__pyx_type_16seine_data_utils_Segment.tp_print<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10058"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP)<sp/>&amp;&amp;<sp/>likely(!__pyx_type_16seine_data_utils_Segment.tp_dictoffset<sp/>&amp;&amp;<sp/>__pyx_type_16seine_data_utils_Segment.tp_getattro<sp/>==<sp/>PyObject_GenericGetAttr))<sp/>{</highlight></codeline>
<codeline lineno="10060"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_type_16seine_data_utils_Segment.tp_getattro<sp/>=<sp/>__Pyx_PyObject_GenericGetAttr;</highlight></codeline>
<codeline lineno="10061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetVtable(__pyx_type_16seine_data_utils_Segment.tp_dict,<sp/>__pyx_vtabptr_16seine_data_utils_Segment)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>110,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_Segment,<sp/>(PyObject<sp/>*)&amp;__pyx_type_16seine_data_utils_Segment)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>110,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_setup_reduce((PyObject*)&amp;__pyx_type_16seine_data_utils_Segment)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>110,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10065"><highlight class="normal"><sp/><sp/>__pyx_ptype_16seine_data_utils_Segment<sp/>=<sp/>&amp;__pyx_type_16seine_data_utils_Segment;</highlight></codeline>
<codeline lineno="10066"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10068"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="10069"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10072"><highlight class="normal"></highlight></codeline>
<codeline lineno="10073"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_type_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10074"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10075"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_type_import_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10077"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10080"><highlight class="normal"></highlight></codeline>
<codeline lineno="10081"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_variable_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10082"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10083"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_variable_import_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Variable<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10085"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10088"><highlight class="normal"></highlight></codeline>
<codeline lineno="10089"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_modinit_function_import_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10090"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10091"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_modinit_function_import_code&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10092"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10093"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="10094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10096"><highlight class="normal"></highlight></codeline>
<codeline lineno="10097"><highlight class="normal"></highlight></codeline>
<codeline lineno="10098"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_NO_PYINIT_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10099"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyMODINIT_FUNC<sp/>PyMODINIT_FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10100"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyMODINIT_FUNC<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="10103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyMODINIT_FUNC<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyMODINIT_FUNC<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="10109"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyMODINIT_FUNC<sp/>PyObject<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10113"><highlight class="normal"></highlight></codeline>
<codeline lineno="10114"><highlight class="normal"></highlight></codeline>
<codeline lineno="10115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10116"><highlight class="normal">__Pyx_PyMODINIT_FUNC<sp/>initseine_data_utils(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>CYTHON_SMALL_CODE;<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10117"><highlight class="normal">__Pyx_PyMODINIT_FUNC<sp/>initseine_data_utils(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10118"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10119"><highlight class="normal">__Pyx_PyMODINIT_FUNC<sp/>PyInit_seine_data_utils(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>CYTHON_SMALL_CODE;<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10120"><highlight class="normal">__Pyx_PyMODINIT_FUNC<sp/>PyInit_seine_data_utils(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyModuleDef_Init(&amp;__pyx_moduledef);</highlight></codeline>
<codeline lineno="10124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_check_single_interpreter(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030700A1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PY_INT64_T<sp/>main_interpreter_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10128"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_INT64_T<sp/>current_id<sp/>=<sp/>PyInterpreterState_GetID(PyThreadState_Get()-&gt;interp);</highlight></codeline>
<codeline lineno="10129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main_interpreter_id<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="10130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_interpreter_id<sp/>=<sp/>current_id;</highlight></codeline>
<codeline lineno="10131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(unlikely(current_id<sp/>==<sp/>-1))<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="10132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(main_interpreter_id<sp/>!=<sp/>current_id))</highlight></codeline>
<codeline lineno="10133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyInterpreterState<sp/>*main_interpreter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10135"><highlight class="normal"><sp/><sp/><sp/><sp/>PyInterpreterState<sp/>*current_interpreter<sp/>=<sp/>PyThreadState_Get()-&gt;interp;</highlight></codeline>
<codeline lineno="10136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!main_interpreter)<sp/>{</highlight></codeline>
<codeline lineno="10137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_interpreter<sp/>=<sp/>current_interpreter;</highlight></codeline>
<codeline lineno="10138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(main_interpreter<sp/>!=<sp/>current_interpreter))</highlight></codeline>
<codeline lineno="10139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(</highlight></codeline>
<codeline lineno="10142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyExc_ImportError,</highlight></codeline>
<codeline lineno="10143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Interpreter<sp/>change<sp/>detected<sp/>-<sp/>this<sp/>module<sp/>can<sp/>only<sp/>be<sp/>loaded<sp/>into<sp/>one<sp/>interpreter<sp/>per<sp/>process.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_copy_spec_to_module(PyObject<sp/>*spec,<sp/>PyObject<sp/>*moddict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_none)<sp/>{</highlight></codeline>
<codeline lineno="10149"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*value<sp/>=<sp/>PyObject_GetAttrString(spec,<sp/>from_name);</highlight></codeline>
<codeline lineno="10150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(value))<sp/>{</highlight></codeline>
<codeline lineno="10152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_none<sp/>||<sp/>value<sp/>!=<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="10153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyDict_SetItemString(moddict,<sp/>to_name,<sp/>value);</highlight></codeline>
<codeline lineno="10154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(value);</highlight></codeline>
<codeline lineno="10156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_ExceptionMatches(PyExc_AttributeError))<sp/>{</highlight></codeline>
<codeline lineno="10157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="10158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/>PyObject*<sp/>__pyx_pymod_create(PyObject<sp/>*spec,<sp/>CYTHON_UNUSED<sp/>PyModuleDef<sp/>*def)<sp/>{</highlight></codeline>
<codeline lineno="10164"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*module<sp/>=<sp/>NULL,<sp/>*moddict,<sp/>*modname;</highlight></codeline>
<codeline lineno="10165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_check_single_interpreter())</highlight></codeline>
<codeline lineno="10166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m)</highlight></codeline>
<codeline lineno="10168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(__pyx_m);</highlight></codeline>
<codeline lineno="10169"><highlight class="normal"><sp/><sp/><sp/><sp/>modname<sp/>=<sp/>PyObject_GetAttrString(spec,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!modname))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10171"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyModule_NewObject(modname);</highlight></codeline>
<codeline lineno="10172"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(modname);</highlight></codeline>
<codeline lineno="10173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!module))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10174"><highlight class="normal"><sp/><sp/><sp/><sp/>moddict<sp/>=<sp/>PyModule_GetDict(module);</highlight></codeline>
<codeline lineno="10175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!moddict))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_copy_spec_to_module(spec,<sp/>moddict,<sp/></highlight><highlight class="stringliteral">&quot;loader&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__loader__&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_copy_spec_to_module(spec,<sp/>moddict,<sp/></highlight><highlight class="stringliteral">&quot;origin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__file__&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_copy_spec_to_module(spec,<sp/>moddict,<sp/></highlight><highlight class="stringliteral">&quot;parent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__package__&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_copy_spec_to_module(spec,<sp/>moddict,<sp/></highlight><highlight class="stringliteral">&quot;submodule_search_locations&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__path__&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="10180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="10181"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="10182"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(module);</highlight></codeline>
<codeline lineno="10183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10185"><highlight class="normal"></highlight></codeline>
<codeline lineno="10186"><highlight class="normal"></highlight></codeline>
<codeline lineno="10187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_SMALL_CODE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pymod_exec_seine_data_utils(PyObject<sp/>*__pyx_pyinit_module)</highlight></codeline>
<codeline lineno="10188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10191"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10192"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="10194"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10195"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10196"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10197"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10198"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="10199"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_9)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="10200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_10;</highlight></codeline>
<codeline lineno="10201"><highlight class="normal"><sp/><sp/>PyObject<sp/>*(*__pyx_t_11)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="10202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10205"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyDeclarations</highlight></codeline>
<codeline lineno="10206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m)<sp/>{</highlight></codeline>
<codeline lineno="10208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m<sp/>==<sp/>__pyx_pyinit_module)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10209"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;Module<sp/>&apos;seine_data_utils&apos;<sp/>has<sp/>already<sp/>been<sp/>imported.<sp/>Re-initialisation<sp/>is<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10212"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(__pyx_m);</highlight></codeline>
<codeline lineno="10214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10216"><highlight class="normal">__Pyx_RefNanny<sp/>=<sp/>__Pyx_RefNannyImportAPI(</highlight><highlight class="stringliteral">&quot;refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10217"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_RefNanny)<sp/>{</highlight></codeline>
<codeline lineno="10218"><highlight class="normal"><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="10219"><highlight class="normal"><sp/><sp/>__Pyx_RefNanny<sp/>=<sp/>__Pyx_RefNannyImportAPI(</highlight><highlight class="stringliteral">&quot;Cython.Runtime.refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_RefNanny)</highlight></codeline>
<codeline lineno="10221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_FatalError(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>import<sp/>&apos;refnanny&apos;<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10224"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__Pyx_PyMODINIT_FUNC<sp/>PyInit_seine_data_utils(void)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="10225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_check_binary_version()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10226"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>__Pxy_PyFrame_Initialize_Offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10227"><highlight class="normal"><sp/><sp/>__Pxy_PyFrame_Initialize_Offsets();</highlight></codeline>
<codeline lineno="10228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10229"><highlight class="normal"><sp/><sp/>__pyx_empty_tuple<sp/>=<sp/>PyTuple_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_tuple))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10230"><highlight class="normal"><sp/><sp/>__pyx_empty_bytes<sp/>=<sp/>PyBytes_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_bytes))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10231"><highlight class="normal"><sp/><sp/>__pyx_empty_unicode<sp/>=<sp/>PyUnicode_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_unicode))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10232"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>__Pyx_CyFunction_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_CyFunction_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10234"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10235"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__Pyx_FusedFunction_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_FusedFunction_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10237"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__Pyx_Coroutine_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_Coroutine_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10240"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10241"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__Pyx_Generator_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_Generator_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10243"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10244"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__Pyx_AsyncGen_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_AsyncGen_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10246"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10247"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>__Pyx_StopAsyncIteration_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_StopAsyncIteration_init()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10249"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Library<sp/>function<sp/>declarations<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Threads<sp/>initialization<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__PYX_FORCE_INIT_THREADS)<sp/>&amp;&amp;<sp/>__PYX_FORCE_INIT_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10253"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>WITH_THREAD<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>build<sp/>with<sp/>threading<sp/>support?<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10254"><highlight class="normal"><sp/><sp/>PyEval_InitThreads();</highlight></codeline>
<codeline lineno="10255"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Module<sp/>creation<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10258"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10259"><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>__pyx_pyinit_module;</highlight></codeline>
<codeline lineno="10260"><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_m);</highlight></codeline>
<codeline lineno="10261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10262"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10263"><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>Py_InitModule4(</highlight><highlight class="stringliteral">&quot;seine_data_utils&quot;</highlight><highlight class="normal">,<sp/>__pyx_methods,<sp/>0,<sp/>0,<sp/>PYTHON_API_VERSION);<sp/>Py_XINCREF(__pyx_m);</highlight></codeline>
<codeline lineno="10264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10265"><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>PyModule_Create(&amp;__pyx_moduledef);</highlight></codeline>
<codeline lineno="10266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_m))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10268"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10269"><highlight class="normal"><sp/><sp/>__pyx_d<sp/>=<sp/>PyModule_GetDict(__pyx_m);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_d))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10270"><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_d);</highlight></codeline>
<codeline lineno="10271"><highlight class="normal"><sp/><sp/>__pyx_b<sp/>=<sp/>PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_b))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10272"><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_b);</highlight></codeline>
<codeline lineno="10273"><highlight class="normal"><sp/><sp/>__pyx_cython_runtime<sp/>=<sp/>PyImport_AddModule((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;cython_runtime&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_cython_runtime))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10274"><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_cython_runtime);</highlight></codeline>
<codeline lineno="10275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;__builtins__&quot;</highlight><highlight class="normal">,<sp/>__pyx_b)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error);</highlight></codeline>
<codeline lineno="10276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Initialize<sp/>various<sp/>global<sp/>constants<sp/>etc.<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitGlobals()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10278"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>(__PYX_DEFAULT_STRING_ENCODING_IS_ASCII<sp/>||<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_init_sys_getdefaultencoding_params()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10280"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_module_is_main_seine_data_utils)<sp/>{</highlight></codeline>
<codeline lineno="10282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_name,<sp/>__pyx_n_s_main)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10286"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*modules<sp/>=<sp/>PyImport_GetModuleDict();<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!modules))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyDict_GetItemString(modules,<sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="10288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyDict_SetItemString(modules,<sp/></highlight><highlight class="stringliteral">&quot;seine_data_utils&quot;</highlight><highlight class="normal">,<sp/>__pyx_m)<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10291"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Builtin<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitCachedBuiltins()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Constants<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitCachedConstants()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Global<sp/>type/function<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10297"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_global_init_code();</highlight></codeline>
<codeline lineno="10298"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_variable_export_code();</highlight></codeline>
<codeline lineno="10299"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_function_export_code();</highlight></codeline>
<codeline lineno="10300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_modinit_type_init_code()<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10301"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_type_import_code();</highlight></codeline>
<codeline lineno="10302"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_variable_import_code();</highlight></codeline>
<codeline lineno="10303"><highlight class="normal"><sp/><sp/>(void)__Pyx_modinit_function_import_code();</highlight></codeline>
<codeline lineno="10304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Execution<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10305"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__Pyx_Generator_USED)<sp/>||<sp/>defined(__Pyx_Coroutine_USED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_patch_abc()<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10308"><highlight class="normal"></highlight></codeline>
<codeline lineno="10309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:1</highlight></codeline>
<codeline lineno="10310"><highlight class="comment"><sp/>*<sp/>from<sp/>pathlib<sp/>import<sp/>Path<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10311"><highlight class="comment"><sp/>*<sp/>import<sp/>re</highlight></codeline>
<codeline lineno="10312"><highlight class="comment"><sp/>*<sp/>from<sp/>typing<sp/>import<sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="10313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10314"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10315"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10316"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_n_s_Path);</highlight></codeline>
<codeline lineno="10317"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_Path);</highlight></codeline>
<codeline lineno="10318"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_n_s_Path);</highlight></codeline>
<codeline lineno="10319"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Import(__pyx_n_s_pathlib,<sp/>__pyx_t_1,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10320"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10321"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10322"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_2,<sp/>__pyx_n_s_Path);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10323"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_Path,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10325"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10326"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10327"><highlight class="normal"></highlight></codeline>
<codeline lineno="10328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:2</highlight></codeline>
<codeline lineno="10329"><highlight class="comment"><sp/>*<sp/>from<sp/>pathlib<sp/>import<sp/>Path</highlight></codeline>
<codeline lineno="10330"><highlight class="comment"><sp/>*<sp/>import<sp/>re<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10331"><highlight class="comment"><sp/>*<sp/>from<sp/>typing<sp/>import<sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="10332"><highlight class="comment"><sp/>*<sp/>import<sp/>matplotlib.pyplot<sp/>as<sp/>plt</highlight></codeline>
<codeline lineno="10333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10334"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Import(__pyx_n_s_re,<sp/>0,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>2,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10335"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_re,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>2,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10337"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10338"><highlight class="normal"></highlight></codeline>
<codeline lineno="10339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:3</highlight></codeline>
<codeline lineno="10340"><highlight class="comment"><sp/>*<sp/>from<sp/>pathlib<sp/>import<sp/>Path</highlight></codeline>
<codeline lineno="10341"><highlight class="comment"><sp/>*<sp/>import<sp/>re</highlight></codeline>
<codeline lineno="10342"><highlight class="comment"><sp/>*<sp/>from<sp/>typing<sp/>import<sp/>List,<sp/>Tuple<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10343"><highlight class="comment"><sp/>*<sp/>import<sp/>matplotlib.pyplot<sp/>as<sp/>plt</highlight></codeline>
<codeline lineno="10344"><highlight class="comment"><sp/>*<sp/>#<sp/>from<sp/>numba<sp/>import<sp/>jit</highlight></codeline>
<codeline lineno="10345"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10346"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10347"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10348"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_n_s_List);</highlight></codeline>
<codeline lineno="10349"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_List);</highlight></codeline>
<codeline lineno="10350"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_n_s_List);</highlight></codeline>
<codeline lineno="10351"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_n_s_Tuple);</highlight></codeline>
<codeline lineno="10352"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_Tuple);</highlight></codeline>
<codeline lineno="10353"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_n_s_Tuple);</highlight></codeline>
<codeline lineno="10354"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_Import(__pyx_n_s_typing,<sp/>__pyx_t_2,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10355"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10356"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10357"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_1,<sp/>__pyx_n_s_List);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10358"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_List,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10360"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10361"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_ImportFrom(__pyx_t_1,<sp/>__pyx_n_s_Tuple);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10362"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_Tuple,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>3,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10364"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10365"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10366"><highlight class="normal"></highlight></codeline>
<codeline lineno="10367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:4</highlight></codeline>
<codeline lineno="10368"><highlight class="comment"><sp/>*<sp/>import<sp/>re</highlight></codeline>
<codeline lineno="10369"><highlight class="comment"><sp/>*<sp/>from<sp/>typing<sp/>import<sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="10370"><highlight class="comment"><sp/>*<sp/>import<sp/>matplotlib.pyplot<sp/>as<sp/>plt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10371"><highlight class="comment"><sp/>*<sp/>#<sp/>from<sp/>numba<sp/>import<sp/>jit</highlight></codeline>
<codeline lineno="10372"><highlight class="comment"><sp/>*<sp/>#<sp/>from<sp/>numba.experimental<sp/>import<sp/>jitclass</highlight></codeline>
<codeline lineno="10373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10374"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>4,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10375"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10376"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_n_s__9);</highlight></codeline>
<codeline lineno="10377"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s__9);</highlight></codeline>
<codeline lineno="10378"><highlight class="normal"><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_n_s__9);</highlight></codeline>
<codeline lineno="10379"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Import(__pyx_n_s_matplotlib_pyplot,<sp/>__pyx_t_1,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>4,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10380"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10381"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_plt,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>4,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10383"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10384"><highlight class="normal"></highlight></codeline>
<codeline lineno="10385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:9</highlight></codeline>
<codeline lineno="10386"><highlight class="comment"><sp/>*<sp/>#<sp/>import<sp/>numba<sp/>as<sp/>nb</highlight></codeline>
<codeline lineno="10387"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10388"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10389"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>pas<sp/>besoin<sp/>de<sp/>a<sp/>si<sp/>utilis<sp/>comme<sp/>module</highlight></codeline>
<codeline lineno="10390"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>pprint</highlight></codeline>
<codeline lineno="10391"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10392"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_name);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10393"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10394"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__Pyx_PyString_Equals(__pyx_t_2,<sp/>__pyx_n_s_main,<sp/>Py_EQ));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>9,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10395"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="10397"><highlight class="normal"></highlight></codeline>
<codeline lineno="10398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:11</highlight></codeline>
<codeline lineno="10399"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="10400"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>pas<sp/>besoin<sp/>de<sp/>a<sp/>si<sp/>utilis<sp/>comme<sp/>module</highlight></codeline>
<codeline lineno="10401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>pprint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>numpy<sp/>as<sp/>np</highlight></codeline>
<codeline lineno="10403"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10404"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10405"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Import(__pyx_n_s_pprint,<sp/>0,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>11,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10406"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_pprint,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>11,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10408"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10409"><highlight class="normal"></highlight></codeline>
<codeline lineno="10410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:12</highlight></codeline>
<codeline lineno="10411"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>pas<sp/>besoin<sp/>de<sp/>a<sp/>si<sp/>utilis<sp/>comme<sp/>module</highlight></codeline>
<codeline lineno="10412"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>pprint</highlight></codeline>
<codeline lineno="10413"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>numpy<sp/>as<sp/>np<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10414"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10415"><highlight class="comment"><sp/>*<sp/>&quot;&quot;&quot;On<sp/>va<sp/>utiliser<sp/>des<sp/>expressions<sp/>rgulires<sp/>pour<sp/>rcuprer</highlight></codeline>
<codeline lineno="10416"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10417"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Import(__pyx_n_s_numpy,<sp/>0,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10418"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_np,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>12,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10420"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10421"><highlight class="normal"></highlight></codeline>
<codeline lineno="10422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:9</highlight></codeline>
<codeline lineno="10423"><highlight class="comment"><sp/>*<sp/>#<sp/>import<sp/>numba<sp/>as<sp/>nb</highlight></codeline>
<codeline lineno="10424"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10425"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10426"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>pas<sp/>besoin<sp/>de<sp/>a<sp/>si<sp/>utilis<sp/>comme<sp/>module</highlight></codeline>
<codeline lineno="10427"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>import<sp/>pprint</highlight></codeline>
<codeline lineno="10428"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10430"><highlight class="normal"></highlight></codeline>
<codeline lineno="10431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:20</highlight></codeline>
<codeline lineno="10432"><highlight class="comment"><sp/>*<sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="10433"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10434"><highlight class="comment"><sp/>*<sp/>FILE_PATH<sp/>=<sp/>Path(__file__).resolve()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10435"><highlight class="comment"><sp/>*<sp/>BASE_DIR<sp/>=<sp/>FILE_PATH.parent.parent.parent#.parent</highlight></codeline>
<codeline lineno="10436"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10438"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_Path);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10439"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10440"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_file);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10441"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10442"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10443"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10444"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10445"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10446"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_4,<sp/>__pyx_n_s_resolve);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10447"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10448"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10449"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10450"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10451"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_FILE_PATH,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>20,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10453"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10454"><highlight class="normal"></highlight></codeline>
<codeline lineno="10455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:21</highlight></codeline>
<codeline lineno="10456"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10457"><highlight class="comment"><sp/>*<sp/>FILE_PATH<sp/>=<sp/>Path(__file__).resolve()</highlight></codeline>
<codeline lineno="10458"><highlight class="comment"><sp/>*<sp/>BASE_DIR<sp/>=<sp/>FILE_PATH.parent.parent.parent#.parent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10459"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10460"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)</highlight></codeline>
<codeline lineno="10461"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10462"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_FILE_PATH);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>21,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10463"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10464"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_4,<sp/>__pyx_n_s_parent);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>21,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10465"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10466"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10467"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_parent);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>21,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10468"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10469"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10470"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_4,<sp/>__pyx_n_s_parent);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>21,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10471"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10472"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_BASE_DIR,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>21,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10474"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10475"><highlight class="normal"></highlight></codeline>
<codeline lineno="10476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:23</highlight></codeline>
<codeline lineno="10477"><highlight class="comment"><sp/>*<sp/>BASE_DIR<sp/>=<sp/>FILE_PATH.parent.parent.parent#.parent</highlight></codeline>
<codeline lineno="10478"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10479"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10480"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10481"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="10482"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10483"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_re);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>23,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10484"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10485"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_compile);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>23,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10486"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10487"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10488"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_4,<sp/>__pyx_tuple__10,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>23,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10489"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10490"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_REGEX_COORDINATES,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>23,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10492"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10493"><highlight class="normal"></highlight></codeline>
<codeline lineno="10494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:25</highlight></codeline>
<codeline lineno="10495"><highlight class="comment"><sp/>*<sp/>REGEX_COORDINATES<sp/>=<sp/>re.compile(r&quot;(?&lt;=(&lt;coordinates&gt;)).*(?=(,0&lt;\/coordinates&gt;))&quot;)</highlight></codeline>
<codeline lineno="10496"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10497"><highlight class="comment"><sp/>*<sp/>def<sp/>get_KML_data(kml_filename=&quot;data/trace_seine.kml&quot;)<sp/>-&gt;<sp/>List[str]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10498"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10499"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>with<sp/>open(&quot;../../../data/trace_seine.kml&quot;,<sp/>&quot;r&quot;,<sp/>encoding=&quot;utf8&quot;)<sp/>as<sp/>file:</highlight></codeline>
<codeline lineno="10500"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10501"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_1get_KML_data,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10502"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_get_KML_data,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>25,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10504"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10505"><highlight class="normal"></highlight></codeline>
<codeline lineno="10506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:32</highlight></codeline>
<codeline lineno="10507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>seine_KML</highlight></codeline>
<codeline lineno="10508"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10509"><highlight class="comment"><sp/>*<sp/>def<sp/>get_coords(seine_KML=get_KML_data())<sp/>-&gt;<sp/>List[Tuple[float]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10510"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees:<sp/>List[Tuple[float]]<sp/>=<sp/>[]<sp/>#<sp/>coordonnes<sp/>des<sp/>points<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>la<sp/>forme<sp/>(long,<sp/>lat)</highlight></codeline>
<codeline lineno="10511"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10512"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10513"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_get_KML_data);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10514"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10515"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10516"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10517"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10518"><highlight class="normal"><sp/><sp/>__pyx_k__2<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="10519"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10520"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10521"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_3get_coords,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10522"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_get_coords,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>32,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10524"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10525"><highlight class="normal"></highlight></codeline>
<codeline lineno="10526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:49</highlight></codeline>
<codeline lineno="10527"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_coordonnees</highlight></codeline>
<codeline lineno="10528"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10529"><highlight class="comment"><sp/>*<sp/>def<sp/>calcul_droites(liste_coordonnees=get_coords())<sp/>-&gt;<sp/>Tuple[List[Tuple[float]]]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10530"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10531"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>a<sp/>obtenu<sp/>toutes<sp/>les<sp/>coordonnees<sp/>des<sp/>points</highlight></codeline>
<codeline lineno="10532"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10533"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_get_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10534"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10535"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10536"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10537"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10538"><highlight class="normal"><sp/><sp/>__pyx_k__4<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="10539"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10540"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10541"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_5calcul_droites,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10542"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_calcul_droites,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>49,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10544"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10545"><highlight class="normal"></highlight></codeline>
<codeline lineno="10546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:169</highlight></codeline>
<codeline lineno="10547"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot([self.point_gauche.x,<sp/>self.point_droit.x],[self.point_gauche.y,<sp/>self.point_droit.y],<sp/>&quot;.-&quot;,<sp/>color=couleur)</highlight></codeline>
<codeline lineno="10548"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10549"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10550"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10551"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():</highlight></codeline>
<codeline lineno="10552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10553"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_7_not_in_frontiere,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>169,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10554"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_not_in_frontiere,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>169,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10556"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10557"><highlight class="normal"></highlight></codeline>
<codeline lineno="10558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:171</highlight></codeline>
<codeline lineno="10559"><highlight class="comment"><sp/>*<sp/>def<sp/>_not_in_frontiere():</highlight></codeline>
<codeline lineno="10560"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10561"><highlight class="comment"><sp/>*<sp/>def<sp/>_dans_la_frontiere():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10562"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10563"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10564"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10565"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_9_dans_la_frontiere,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>171,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10566"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_dans_la_frontiere,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>171,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10568"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10569"><highlight class="normal"></highlight></codeline>
<codeline lineno="10570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:174</highlight></codeline>
<codeline lineno="10571"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10572"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10573"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10574"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="10575"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="10576"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10577"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_Py3MetaclassPrepare((PyObject<sp/>*)<sp/>NULL,<sp/>__pyx_empty_tuple,<sp/>__pyx_n_s_Frontiere,<sp/>__pyx_n_s_Frontiere,<sp/>(PyObject<sp/>*)<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>(PyObject<sp/>*)<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>174,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10578"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10579"><highlight class="normal"></highlight></codeline>
<codeline lineno="10580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:175</highlight></codeline>
<codeline lineno="10581"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10582"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:</highlight></codeline>
<codeline lineno="10583"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10584"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="10585"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10586"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10587"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyDict_NewPresized(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10588"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10589"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_List);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10590"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10591"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_t_2,<sp/>((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10592"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10593"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_4,<sp/>__pyx_n_s_liste_segments,<sp/>__pyx_t_5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10595"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_4,<sp/>__pyx_n_s_return,<sp/>Py_None)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10597"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_9Frontiere_1__init__,<sp/>0,<sp/>__pyx_n_s_Frontiere___init,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>((PyObject<sp/>*)__pyx_codeobj__20));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10598"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10599"><highlight class="normal"><sp/><sp/>__Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="10600"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_1,<sp/>__pyx_n_s_init,<sp/>__pyx_t_5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>175,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10602"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10603"><highlight class="normal"></highlight></codeline>
<codeline lineno="10604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:178</highlight></codeline>
<codeline lineno="10605"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="10606"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>HorsDeLaFrontiereError(Exception):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10608"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10609"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="10610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10611"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>178,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10612"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10613"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10614"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10615"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10616"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_CalculateMetaclass(NULL,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>178,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10617"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10618"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Py3MetaclassPrepare(__pyx_t_4,<sp/>__pyx_t_5,<sp/>__pyx_n_s_HorsDeLaFrontiereError,<sp/>__pyx_n_s_Frontiere_HorsDeLaFrontiereError,<sp/>(PyObject<sp/>*)<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>(PyObject<sp/>*)<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>178,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10619"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10620"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_Py3ClassCreate(__pyx_t_4,<sp/>__pyx_n_s_HorsDeLaFrontiereError,<sp/>__pyx_t_5,<sp/>__pyx_t_2,<sp/>NULL,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>178,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10621"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="10622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_1,<sp/>__pyx_n_s_HorsDeLaFrontiereError,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>178,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10623"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10624"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10625"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10626"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10627"><highlight class="normal"></highlight></codeline>
<codeline lineno="10628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:180</highlight></codeline>
<codeline lineno="10629"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>HorsDeLaFrontiereError(Exception):</highlight></codeline>
<codeline lineno="10630"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10632"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="10633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="10634"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10635"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>180,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10636"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10637"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10638"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10639"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>((PyObject<sp/>*)(&amp;((PyTypeObject*)PyExc_Exception)[0])));</highlight></codeline>
<codeline lineno="10640"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_CalculateMetaclass(NULL,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>180,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10641"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10642"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_Py3MetaclassPrepare(__pyx_t_4,<sp/>__pyx_t_5,<sp/>__pyx_n_s_DansLaFrontiereNotError,<sp/>__pyx_n_s_Frontiere_DansLaFrontiereNotErro,<sp/>(PyObject<sp/>*)<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>(PyObject<sp/>*)<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>180,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10643"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10644"><highlight class="normal"></highlight></codeline>
<codeline lineno="10645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:181</highlight></codeline>
<codeline lineno="10646"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10647"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):</highlight></codeline>
<codeline lineno="10648"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10649"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="10650"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10651"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10652"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyDict_NewPresized(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10653"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="10654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_6,<sp/>__pyx_n_s_value,<sp/>__pyx_n_u_int)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_6,<sp/>__pyx_n_s_return,<sp/>Py_None)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10656"><highlight class="normal"><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_23DansLaFrontiereNotError_1__init__,<sp/>0,<sp/>__pyx_n_s_Frontiere_DansLaFrontiereNotErro_2,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>((PyObject<sp/>*)__pyx_codeobj__22));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10657"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="10658"><highlight class="normal"><sp/><sp/>__Pyx_CyFunction_SetAnnotationsDict(__pyx_t_7,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="10659"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_2,<sp/>__pyx_n_s_init,<sp/>__pyx_t_7)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>181,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10661"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10662"><highlight class="normal"></highlight></codeline>
<codeline lineno="10663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:180</highlight></codeline>
<codeline lineno="10664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>HorsDeLaFrontiereError(Exception):</highlight></codeline>
<codeline lineno="10665"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10666"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>class<sp/>DansLaFrontiereNotError(Exception):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10667"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="10668"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="10669"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10670"><highlight class="normal"><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_Py3ClassCreate(__pyx_t_4,<sp/>__pyx_n_s_DansLaFrontiereNotError,<sp/>__pyx_t_5,<sp/>__pyx_t_2,<sp/>NULL,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>180,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10671"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="10672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_1,<sp/>__pyx_n_s_DansLaFrontiereNotError,<sp/>__pyx_t_7)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>180,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10673"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10674"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10675"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10676"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10677"><highlight class="normal"></highlight></codeline>
<codeline lineno="10678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:184</highlight></codeline>
<codeline lineno="10679"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="10680"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10681"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>en_dessous(self,<sp/>point:<sp/>Point)<sp/>-&gt;<sp/>bool:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10682"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Dtermine<sp/>si<sp/>la<sp/>frontire<sp/>est<sp/>en-dessous<sp/>du<sp/>point<sp/>donn</highlight></codeline>
<codeline lineno="10683"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.e<sp/>si<sp/>le<sp/>point<sp/>test<sp/>au-dessus<sp/>de<sp/>la<sp/>frontire</highlight></codeline>
<codeline lineno="10684"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10685"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyDict_NewPresized(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10686"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_5,<sp/>__pyx_n_s_point,<sp/>__pyx_n_u_Point)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_5,<sp/>__pyx_n_s_return,<sp/>((PyObject*)&amp;PyBool_Type))<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10689"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_9Frontiere_3en_dessous,<sp/>0,<sp/>__pyx_n_s_Frontiere_en_dessous,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>((PyObject<sp/>*)__pyx_codeobj__24));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10690"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10691"><highlight class="normal"><sp/><sp/>__Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="10692"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_1,<sp/>__pyx_n_s_en_dessous,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>184,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10694"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10695"><highlight class="normal"></highlight></codeline>
<codeline lineno="10696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:201</highlight></codeline>
<codeline lineno="10697"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="10698"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10699"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>plot(self,<sp/>couleur=&quot;red&quot;):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10700"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>self.liste_segments:</highlight></codeline>
<codeline lineno="10701"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot(couleur)</highlight></codeline>
<codeline lineno="10702"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10703"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_9Frontiere_5plot,<sp/>0,<sp/>__pyx_n_s_Frontiere_plot,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>((PyObject<sp/>*)__pyx_codeobj__26));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10704"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10705"><highlight class="normal"><sp/><sp/>__Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4,<sp/>__pyx_tuple__27);</highlight></codeline>
<codeline lineno="10706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetNameInClass(__pyx_t_1,<sp/>__pyx_n_s_plot,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>201,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10707"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10708"><highlight class="normal"></highlight></codeline>
<codeline lineno="10709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:174</highlight></codeline>
<codeline lineno="10710"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="10711"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10712"><highlight class="comment"><sp/>*<sp/>class<sp/>Frontiere:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10713"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>liste_segments:<sp/>List[Segment])<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="10714"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.liste_segments<sp/>=<sp/>liste_segments</highlight></codeline>
<codeline lineno="10715"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10716"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_Py3ClassCreate(((PyObject*)&amp;__Pyx_DefaultClassType),<sp/>__pyx_n_s_Frontiere,<sp/>__pyx_empty_tuple,<sp/>__pyx_t_1,<sp/>NULL,<sp/>0,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>174,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10717"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_Frontiere,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>174,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10719"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10720"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10721"><highlight class="normal"></highlight></codeline>
<codeline lineno="10722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:208</highlight></codeline>
<codeline lineno="10723"><highlight class="comment"><sp/>*<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>f&quot;Frontire<sp/>de<sp/>{self.liste_segments[0]}<sp/><sp/>{self.liste_segments[-1]}&quot;</highlight></codeline>
<codeline lineno="10724"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10725"><highlight class="comment"><sp/>*<sp/>def<sp/>get_frontieres_utiles():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10726"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="10727"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="10728"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10729"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_11get_frontieres_utiles,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>208,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10730"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_get_frontieres_utiles,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>208,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10732"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10733"><highlight class="normal"></highlight></codeline>
<codeline lineno="10734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:241</highlight></codeline>
<codeline lineno="10735"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_frontieres</highlight></codeline>
<codeline lineno="10736"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10737"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="10739"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="10740"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10741"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_name);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>241,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10742"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10743"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__Pyx_PyString_Equals(__pyx_t_1,<sp/>__pyx_n_s_main,<sp/>Py_EQ));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>241,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10744"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="10746"><highlight class="normal"></highlight></codeline>
<codeline lineno="10747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:243</highlight></codeline>
<codeline lineno="10748"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight></codeline>
<codeline lineno="10749"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="10750"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10751"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="10752"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))</highlight></codeline>
<codeline lineno="10753"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10754"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_get_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>243,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10755"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10756"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>243,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10757"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10758"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>243,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10760"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10761"><highlight class="normal"></highlight></codeline>
<codeline lineno="10762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:245</highlight></codeline>
<codeline lineno="10763"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="10764"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="10765"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10766"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_points)</highlight></codeline>
<codeline lineno="10767"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="10768"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10769"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_CyFunction_New(&amp;__pyx_mdef_16seine_data_utils_18lambda1,<sp/>0,<sp/>__pyx_n_s_lambda,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils,<sp/>__pyx_d,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10770"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10771"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_coordonnees_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10772"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10773"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10774"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10775"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10776"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="10777"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10778"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="10779"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10780"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10781"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_map,<sp/>__pyx_t_5,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10782"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10783"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10784"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_List(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10785"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10786"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_points,<sp/>__pyx_t_5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>245,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10788"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10789"><highlight class="normal"></highlight></codeline>
<codeline lineno="10790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:246</highlight></codeline>
<codeline lineno="10791"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>cre<sp/>les<sp/>objects<sp/>points<sp/>associs</highlight></codeline>
<codeline lineno="10792"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_points<sp/>=<sp/>list(map(lambda<sp/>p:Point(*p),<sp/>liste_coordonnees))</highlight></codeline>
<codeline lineno="10793"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>pprint.pprint(liste_points)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10794"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="10795"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10796"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10797"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>246,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10798"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10799"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_5,<sp/>__pyx_n_s_pprint);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>246,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10800"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10801"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10802"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_liste_points);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>246,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10803"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10804"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>246,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10805"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10806"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10807"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10808"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10809"><highlight class="normal"></highlight></codeline>
<codeline lineno="10810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:249</highlight></codeline>
<codeline lineno="10811"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>ensuite<sp/>crer<sp/>les<sp/>bons<sp/>segments</highlight></codeline>
<codeline lineno="10812"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10813"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="10815"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10816"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10817"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>249,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10818"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_segments_Seine,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>249,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10820"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10821"><highlight class="normal"></highlight></codeline>
<codeline lineno="10822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:250</highlight></codeline>
<codeline lineno="10823"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>tous<sp/>ceux<sp/>de<sp/>la<sp/>Seine<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10824"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Seine:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Seine<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="10825"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10826"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10827"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="10828"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10829"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>250,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10830"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_segments_Marne,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>250,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10832"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10833"><highlight class="normal"></highlight></codeline>
<codeline lineno="10834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:252</highlight></codeline>
<codeline lineno="10835"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="10836"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10837"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10838"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10839"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="10840"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10841"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_liste_coordonnees_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10842"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10843"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>PyObject_Length(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_8<sp/>==<sp/>((Py_ssize_t)-1)))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10844"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10845"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyInt_FromSsize_t((__pyx_t_8<sp/>-<sp/>1));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10846"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10847"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10848"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10849"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="10850"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_3);</highlight></codeline>
<codeline lineno="10851"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_int_3);</highlight></codeline>
<codeline lineno="10852"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10853"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="10854"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10855"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_range,<sp/>__pyx_t_5,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10856"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10857"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_4))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="10859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_4;<sp/>__Pyx_INCREF(__pyx_t_5);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10861"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>-1;<sp/>__pyx_t_5<sp/>=<sp/>PyObject_GetIter(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_5)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10866"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="10868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="10869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_5)))<sp/>{</highlight></codeline>
<codeline lineno="10870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_5))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10871"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_5,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_4);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PySequence_ITEM(__pyx_t_5,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10876"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_5))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10879"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_5,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_4);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PySequence_ITEM(__pyx_t_5,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10884"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_9(__pyx_t_5);</highlight></codeline>
<codeline lineno="10888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="10889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="10890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="10891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="10892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_no_coord,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>252,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10900"><highlight class="normal"></highlight></codeline>
<codeline lineno="10901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:254</highlight></codeline>
<codeline lineno="10902"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):</highlight></codeline>
<codeline lineno="10903"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10904"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10906"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):</highlight></codeline>
<codeline lineno="10907"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_points);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_no_coord);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_t_1,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="10916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_points);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="10920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_no_coord);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyInt_AddObjC(__pyx_t_1,<sp/>__pyx_int_1,<sp/>1,<sp/>0,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="10924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_t_2,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="10931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="10932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="10933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="10935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment),<sp/>__pyx_t_6,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyObject_Append(__pyx_t_4,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_10<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>254,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10943"><highlight class="normal"></highlight></codeline>
<codeline lineno="10944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:252</highlight></codeline>
<codeline lineno="10945"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_segments_Marne:<sp/>List[Segment]<sp/>=<sp/>[]<sp/>#<sp/>droites<sp/>dcrivant<sp/>la<sp/>Marne<sp/>sous<sp/>forme<sp/>(a,<sp/>b)<sp/>avec<sp/>y=a*x<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="10946"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10947"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord<sp/>in<sp/>range(3,<sp/>len(liste_coordonnees)-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10948"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>pour<sp/>la<sp/>Seine<sp/>:<sp/>tous<sp/>sauf<sp/>les<sp/>3<sp/>premiers<sp/>qui<sp/>viennent<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10949"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="10950"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10952"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10953"><highlight class="normal"></highlight></codeline>
<codeline lineno="10954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:256</highlight></codeline>
<codeline lineno="10955"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="10956"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="10957"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="10958"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="10959"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="10960"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10961"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10962"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10963"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="10964"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_34);</highlight></codeline>
<codeline lineno="10965"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_int_34);</highlight></codeline>
<codeline lineno="10966"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="10967"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="10968"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="10969"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="10970"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="10971"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_5,<sp/>2,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="10972"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10973"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10974"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="10975"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_0);</highlight></codeline>
<codeline lineno="10976"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_int_0);</highlight></codeline>
<codeline lineno="10977"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="10978"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_1);</highlight></codeline>
<codeline lineno="10979"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>1,<sp/>__pyx_int_1);</highlight></codeline>
<codeline lineno="10980"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="10981"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_int_2);</highlight></codeline>
<codeline lineno="10982"><highlight class="normal"><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_1,<sp/>2,<sp/>__pyx_int_2);</highlight></codeline>
<codeline lineno="10983"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10984"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="10985"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="10986"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="10987"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10988"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>1,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="10989"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10990"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10991"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_builtin_zip,<sp/>__pyx_t_4,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10992"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="10993"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="10995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_4);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10997"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>-1;<sp/>__pyx_t_4<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="10999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_4)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11002"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="11004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="11005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_4)))<sp/>{</highlight></codeline>
<codeline lineno="11006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_4))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11007"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_4,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_4,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11012"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_4))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11015"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_4,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_4,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11020"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_9(__pyx_t_4);</highlight></codeline>
<codeline lineno="11024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="11025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="11026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="11027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="11028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_1)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="11035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="11036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="11037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="11038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="11039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="11040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11042"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="11044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11052"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11057"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="11065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_5<sp/>=<sp/>__pyx_t_11(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_unpacking_failed;</highlight></codeline>
<codeline lineno="11066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_11(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8_unpacking_failed;</highlight></codeline>
<codeline lineno="11068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L9_unpacking_done;</highlight></codeline>
<codeline lineno="11073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8_unpacking_failed:;</highlight></codeline>
<codeline lineno="11074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="11077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L9_unpacking_done:;</highlight></codeline>
<codeline lineno="11079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_no_coord_1,<sp/>__pyx_t_5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_no_coord_2,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>256,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11084"><highlight class="normal"></highlight></codeline>
<codeline lineno="11085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:259</highlight></codeline>
<codeline lineno="11086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="11087"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="11088"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Marne.append(Segment(liste_points[no_coord_1],<sp/>liste_points[no_coord_2]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11089"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11090"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>pprint.pprint(liste_segments_Seine)</highlight></codeline>
<codeline lineno="11091"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_segments_Marne);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_liste_points);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_no_coord_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_t_6,<sp/>__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_5,<sp/>__pyx_n_s_liste_points);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_no_coord_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetItem(__pyx_t_5,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="11114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="11116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(((PyObject<sp/>*)__pyx_ptype_16seine_data_utils_Segment),<sp/>__pyx_t_6,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyObject_Append(__pyx_t_1,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_10<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)))<sp/>__PYX_ERR(0,<sp/>259,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11124"><highlight class="normal"></highlight></codeline>
<codeline lineno="11125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:256</highlight></codeline>
<codeline lineno="11126"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liste_segments_Seine.append(Segment(liste_points[no_coord],<sp/>liste_points[no_coord<sp/>+<sp/>1]))</highlight></codeline>
<codeline lineno="11127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>ceux<sp/>de<sp/>la<sp/>Marne</highlight></codeline>
<codeline lineno="11128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>no_coord_1,<sp/>no_coord_2<sp/>in<sp/>zip([34,<sp/>0,<sp/>1],<sp/>[0,<sp/>1,<sp/>2]):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>part<sp/>d&apos;abord<sp/>du<sp/>point<sp/>Seine<sp/>31<sp/>+<sp/>Marne<sp/>0,</highlight></codeline>
<codeline lineno="11130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>puis<sp/>les<sp/>3<sp/>premiers<sp/>points<sp/>Marne<sp/>1<sp/>-&gt;<sp/>3</highlight></codeline>
<codeline lineno="11131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11133"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11134"><highlight class="normal"></highlight></codeline>
<codeline lineno="11135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:266</highlight></codeline>
<codeline lineno="11136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>les<sp/>frontires</highlight></codeline>
<codeline lineno="11137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>faire<sp/>en<sp/>sorte<sp/>que<sp/>chaque<sp/>frontire<sp/>soit<sp/>dans<sp/>le<sp/>bon<sp/>sens</highlight></codeline>
<codeline lineno="11138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>liste_segments_Marne<sp/>+<sp/>liste_segments_Seine:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot()</highlight></codeline>
<codeline lineno="11140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="11141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11142"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_liste_segments_Marne);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11143"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11144"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11145"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11146"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_Add(__pyx_t_4,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11147"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11148"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11149"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="11151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>-1;<sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_2)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11158"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="11160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="11161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="11162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11171"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_9(__pyx_t_2);</highlight></codeline>
<codeline lineno="11180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="11181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="11182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="11183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="11184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_seg,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>266,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11192"><highlight class="normal"></highlight></codeline>
<codeline lineno="11193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:267</highlight></codeline>
<codeline lineno="11194"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>faire<sp/>en<sp/>sorte<sp/>que<sp/>chaque<sp/>frontire<sp/>soit<sp/>dans<sp/>le<sp/>bon<sp/>sens</highlight></codeline>
<codeline lineno="11195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>liste_segments_Marne<sp/>+<sp/>liste_segments_Seine:</highlight></codeline>
<codeline lineno="11196"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="11198"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_4,<sp/>__pyx_n_s_seg);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>267,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_4,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>267,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>unlikely(PyMethod_Check(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="11207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyMethod_GET_SELF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__pyx_t_4))<sp/>{</highlight></codeline>
<codeline lineno="11209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(__pyx_t_6);</highlight></codeline>
<codeline lineno="11210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF_SET(__pyx_t_6,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>(__pyx_t_4)<sp/>?<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_t_4)<sp/>:<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_6);</highlight></codeline>
<codeline lineno="11216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>267,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11221"><highlight class="normal"></highlight></codeline>
<codeline lineno="11222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:266</highlight></codeline>
<codeline lineno="11223"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>les<sp/>frontires</highlight></codeline>
<codeline lineno="11224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>faire<sp/>en<sp/>sorte<sp/>que<sp/>chaque<sp/>frontire<sp/>soit<sp/>dans<sp/>le<sp/>bon<sp/>sens</highlight></codeline>
<codeline lineno="11225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>seg<sp/>in<sp/>liste_segments_Marne<sp/>+<sp/>liste_segments_Seine:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11226"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg.plot()</highlight></codeline>
<codeline lineno="11227"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="11228"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11230"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11231"><highlight class="normal"></highlight></codeline>
<codeline lineno="11232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:271</highlight></codeline>
<codeline lineno="11233"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11234"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="11235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11236"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)</highlight></codeline>
<codeline lineno="11237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="11238"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11239"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>271,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11240"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11241"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_ylim);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>271,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11242"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11243"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11244"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_1,<sp/>__pyx_tuple__30,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>271,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11245"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11246"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11247"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11248"><highlight class="normal"></highlight></codeline>
<codeline lineno="11249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:272</highlight></codeline>
<codeline lineno="11250"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="11251"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="11252"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="11254"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11255"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11256"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11257"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11258"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_gca);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11259"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11260"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11261"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11262"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11263"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11264"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_set_aspect);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11265"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11266"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11267"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_1,<sp/>__pyx_tuple__31,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>272,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11268"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11269"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11270"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11271"><highlight class="normal"></highlight></codeline>
<codeline lineno="11272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:273</highlight></codeline>
<codeline lineno="11273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="11274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)</highlight></codeline>
<codeline lineno="11275"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11276"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11277"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>plt.show()</highlight></codeline>
<codeline lineno="11278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11279"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>273,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11280"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11281"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_tight_layout);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>273,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11282"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11283"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11284"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>273,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11285"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11286"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11287"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11288"><highlight class="normal"></highlight></codeline>
<codeline lineno="11289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:278</highlight></codeline>
<codeline lineno="11290"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11291"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>des<sp/>frontires</highlight></codeline>
<codeline lineno="11292"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/>Frontiere(liste_segments_Seine[:5])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11293"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="11294"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="11295"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11296"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11297"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11298"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11299"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11300"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_1,<sp/>0,<sp/>5,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__32,<sp/>0,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11301"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11302"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11303"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11304"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11305"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11306"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_frontiere_nord,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>278,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11308"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11309"><highlight class="normal"></highlight></codeline>
<codeline lineno="11310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:279</highlight></codeline>
<codeline lineno="11311"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>va<sp/>maintenant<sp/>faire<sp/>des<sp/>frontires</highlight></codeline>
<codeline lineno="11312"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/>Frontiere(liste_segments_Seine[:5])</highlight></codeline>
<codeline lineno="11313"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="11315"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="11316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11317"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_frontiere_nord);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>279,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11318"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11319"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>279,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11320"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11321"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11322"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>279,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11323"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11324"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11325"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11326"><highlight class="normal"></highlight></codeline>
<codeline lineno="11327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:280</highlight></codeline>
<codeline lineno="11328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord<sp/>=<sp/>Frontiere(liste_segments_Seine[:5])</highlight></codeline>
<codeline lineno="11329"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="11330"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11331"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="11332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="11333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11334"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11335"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11336"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11337"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11338"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_6,<sp/>5,<sp/>15,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__33,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11339"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11340"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11341"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11342"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11343"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11344"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_frontiere_ouest,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>280,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11346"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11347"><highlight class="normal"></highlight></codeline>
<codeline lineno="11348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:281</highlight></codeline>
<codeline lineno="11349"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_nord.plot()</highlight></codeline>
<codeline lineno="11350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="11351"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11352"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="11353"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="11354"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11355"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_frontiere_ouest);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>281,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11356"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11357"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>281,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11358"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11359"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11360"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__34,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>281,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11361"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11362"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11363"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11364"><highlight class="normal"></highlight></codeline>
<codeline lineno="11365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:282</highlight></codeline>
<codeline lineno="11366"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest<sp/>=<sp/>Frontiere(liste_segments_Seine[5:15])</highlight></codeline>
<codeline lineno="11367"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="11368"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11369"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="11370"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11371"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11372"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>282,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11373"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11374"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_segments_Marne);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>282,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11375"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11376"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>282,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11377"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11378"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11379"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_frontiere_Marne,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>282,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11381"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11382"><highlight class="normal"></highlight></codeline>
<codeline lineno="11383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:283</highlight></codeline>
<codeline lineno="11384"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_ouest.plot(&quot;green&quot;)</highlight></codeline>
<codeline lineno="11385"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="11386"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11387"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11388"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="11389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11390"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_frontiere_Marne);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>283,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11391"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11392"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>283,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11393"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11394"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11395"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__35,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>283,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11396"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11397"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11398"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11399"><highlight class="normal"></highlight></codeline>
<codeline lineno="11400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:284</highlight></codeline>
<codeline lineno="11401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne<sp/>=<sp/>Frontiere(liste_segments_Marne)</highlight></codeline>
<codeline lineno="11402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="11403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11404"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="11405"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11406"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11407"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11408"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11409"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11410"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11411"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_2,<sp/>15,<sp/>16,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__36,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11412"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11413"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11414"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11415"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11416"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11417"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11418"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11419"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11420"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11421"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_6,<sp/>__pyx_tuple__37,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>284,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11422"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11423"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11424"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11425"><highlight class="normal"></highlight></codeline>
<codeline lineno="11426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:285</highlight></codeline>
<codeline lineno="11427"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>frontiere_Marne.plot(&quot;violet&quot;)</highlight></codeline>
<codeline lineno="11428"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11429"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11430"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11431"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11432"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11433"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11434"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11435"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11436"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11437"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_6,<sp/>16,<sp/>17,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__38,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11438"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11439"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11440"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11441"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11442"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11443"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11444"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11445"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11446"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11447"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_1,<sp/>__pyx_tuple__39,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>285,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11448"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11449"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11450"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11451"><highlight class="normal"></highlight></codeline>
<codeline lineno="11452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:286</highlight></codeline>
<codeline lineno="11453"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[15:16]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11454"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="11455"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11456"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11457"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11458"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11459"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11460"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11461"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11462"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11463"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_1,<sp/>17,<sp/>31,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__40,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11464"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11465"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11466"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11467"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11468"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11469"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11470"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11471"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11472"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11473"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__37,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>286,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11474"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11475"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11476"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11477"><highlight class="normal"></highlight></codeline>
<codeline lineno="11478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:287</highlight></codeline>
<codeline lineno="11479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[16:17]).plot(&quot;darkred&quot;)</highlight></codeline>
<codeline lineno="11480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11481"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11482"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11484"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11485"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11486"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11487"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11488"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11489"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_2,<sp/>31,<sp/>32,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__41,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11490"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11491"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11492"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_1,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11493"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11494"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11495"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11496"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11497"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11498"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11499"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_6,<sp/>__pyx_tuple__42,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>287,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11500"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11501"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11502"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11503"><highlight class="normal"></highlight></codeline>
<codeline lineno="11504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:288</highlight></codeline>
<codeline lineno="11505"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[17:31]).plot(&quot;red&quot;)</highlight></codeline>
<codeline lineno="11506"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11508"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11509"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11510"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11511"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11512"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11513"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11514"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11515"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_6,<sp/>32,<sp/>33,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__43,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11516"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11517"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11518"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11519"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11520"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11521"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11522"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11523"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11524"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11525"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_1,<sp/>__pyx_tuple__42,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>288,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11526"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11527"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11528"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11529"><highlight class="normal"></highlight></codeline>
<codeline lineno="11530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:289</highlight></codeline>
<codeline lineno="11531"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[31:32]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11532"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[32:33]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11533"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11534"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="11536"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11537"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_Frontiere);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11538"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11539"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_segments_Seine);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11540"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11541"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetSlice(__pyx_t_1,<sp/>33,<sp/>34,<sp/>NULL,<sp/>NULL,<sp/>&amp;__pyx_slice__44,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11542"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11543"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11544"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_6,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11545"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11546"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11547"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11548"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11549"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11550"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11551"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__42,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>289,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11552"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11553"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11554"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11555"><highlight class="normal"></highlight></codeline>
<codeline lineno="11556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:291</highlight></codeline>
<codeline lineno="11557"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Frontiere(liste_segments_Seine[33:34]).plot(&quot;orange&quot;)</highlight></codeline>
<codeline lineno="11558"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11559"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11560"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)</highlight></codeline>
<codeline lineno="11561"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="11562"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11563"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>291,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11564"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11565"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_ylim);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>291,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11566"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11567"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11568"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__30,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>291,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11569"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11570"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11571"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11572"><highlight class="normal"></highlight></codeline>
<codeline lineno="11573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:292</highlight></codeline>
<codeline lineno="11574"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11575"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="11576"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11577"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="11578"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11579"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11580"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>292,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11581"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11582"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_gca);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>292,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11583"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11584"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11585"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>292,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11586"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11587"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11588"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_set_aspect);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>292,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11589"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11590"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11591"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__31,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>292,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11592"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11593"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11594"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11595"><highlight class="normal"></highlight></codeline>
<codeline lineno="11596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:293</highlight></codeline>
<codeline lineno="11597"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.76,<sp/>48.97)</highlight></codeline>
<codeline lineno="11598"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.gca().set_aspect(&apos;equal&apos;)</highlight></codeline>
<codeline lineno="11599"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11600"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11601"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="11602"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11603"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>293,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11604"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11605"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_tight_layout);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>293,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11606"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11607"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11608"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>293,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11609"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11610"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11611"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11612"><highlight class="normal"></highlight></codeline>
<codeline lineno="11613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:295</highlight></codeline>
<codeline lineno="11614"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="11615"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11616"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11617"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11618"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11619"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11620"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>295,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11621"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11622"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_show);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>295,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11623"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11624"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11625"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>295,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11626"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11627"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11628"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11629"><highlight class="normal"></highlight></codeline>
<codeline lineno="11630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:241</highlight></codeline>
<codeline lineno="11631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>liste_frontieres</highlight></codeline>
<codeline lineno="11632"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11633"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>rcupre<sp/>les<sp/>coordonnes</highlight></codeline>
<codeline lineno="11635"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="11636"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11638"><highlight class="normal"></highlight></codeline>
<codeline lineno="11639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:298</highlight></codeline>
<codeline lineno="11640"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11641"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11642"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;piche&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11643"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="11644"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/>=<sp/>calcul_droites(liste_coordonnees)</highlight></codeline>
<codeline lineno="11645"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11646"><highlight class="normal"><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_name);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>298,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11647"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11648"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__Pyx_PyString_Equals(__pyx_t_1,<sp/>__pyx_n_s_piche,<sp/>Py_EQ));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>298,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11649"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="11651"><highlight class="normal"></highlight></codeline>
<codeline lineno="11652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:299</highlight></codeline>
<codeline lineno="11653"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11654"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;piche&quot;:</highlight></codeline>
<codeline lineno="11655"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11656"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/>=<sp/>calcul_droites(liste_coordonnees)</highlight></codeline>
<codeline lineno="11657"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11658"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11659"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_get_coords);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>299,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11660"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11661"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>299,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11662"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11663"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_coordonnees_2,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>299,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11665"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11666"><highlight class="normal"></highlight></codeline>
<codeline lineno="11667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:300</highlight></codeline>
<codeline lineno="11668"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;piche&quot;:</highlight></codeline>
<codeline lineno="11669"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="11670"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/>=<sp/>calcul_droites(liste_coordonnees)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11671"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11672"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>trace<sp/>tout<sp/>a<sp/>pour<sp/>vrifier</highlight></codeline>
<codeline lineno="11673"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11674"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_calcul_droites);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11675"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11676"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_liste_coordonnees_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11677"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11678"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_CallOneArg(__pyx_t_2,<sp/>__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11679"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11680"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11681"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_6)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_6)))<sp/>{</highlight></codeline>
<codeline lineno="11683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="11684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="11685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="11686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="11687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="11688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11690"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="11692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11700"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11705"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11707"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_GetIter(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>Py_TYPE(__pyx_t_4)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="11713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_11(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L13_unpacking_failed;</highlight></codeline>
<codeline lineno="11714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_11(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L13_unpacking_failed;</highlight></codeline>
<codeline lineno="11716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_4),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L14_unpacking_done;</highlight></codeline>
<codeline lineno="11721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L13_unpacking_failed:;</highlight></codeline>
<codeline lineno="11722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="11725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L14_unpacking_done:;</highlight></codeline>
<codeline lineno="11727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_droites_Seine_2,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11729"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_liste_droites_Marne_2,<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>300,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11731"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11732"><highlight class="normal"></highlight></codeline>
<codeline lineno="11733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:303</highlight></codeline>
<codeline lineno="11734"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11735"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>on<sp/>trace<sp/>tout<sp/>a<sp/>pour<sp/>vrifier</highlight></codeline>
<codeline lineno="11736"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(2.2,<sp/>2.45,<sp/>100)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11737"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>a,<sp/>b<sp/>in<sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:</highlight></codeline>
<codeline lineno="11739"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11740"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_np);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>303,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11741"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11742"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_6,<sp/>__pyx_n_s_linspace);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>303,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11743"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11744"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11745"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__45,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>303,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11746"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11747"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_x,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>303,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11749"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11750"><highlight class="normal"></highlight></codeline>
<codeline lineno="11751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:305</highlight></codeline>
<codeline lineno="11752"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(2.2,<sp/>2.45,<sp/>100)</highlight></codeline>
<codeline lineno="11753"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11754"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>a,<sp/>b<sp/>in<sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11755"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/>&quot;b&quot;,<sp/>linewidth=0.2)</highlight></codeline>
<codeline lineno="11756"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11757"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11758"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_liste_droites_Seine_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11759"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11760"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_droites_Marne_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11761"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11762"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_Add(__pyx_t_6,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11763"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11764"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11765"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="11767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11769"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>-1;<sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_2)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11774"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="11776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="11777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="11778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11779"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11784"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11787"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PySequence_ITEM(__pyx_t_2,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11792"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_9(__pyx_t_2);</highlight></codeline>
<codeline lineno="11796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="11797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="11798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="11799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="11800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_1)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="11807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="11808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="11809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="11810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="11811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="11812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11814"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="11816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11824"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11829"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>Py_TYPE(__pyx_t_7)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="11837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_11(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L17_unpacking_failed;</highlight></codeline>
<codeline lineno="11838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_11(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L17_unpacking_failed;</highlight></codeline>
<codeline lineno="11840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_7),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L18_unpacking_done;</highlight></codeline>
<codeline lineno="11845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L17_unpacking_failed:;</highlight></codeline>
<codeline lineno="11846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="11849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L18_unpacking_done:;</highlight></codeline>
<codeline lineno="11851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_a,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_b,<sp/>__pyx_t_4)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>305,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11856"><highlight class="normal"></highlight></codeline>
<codeline lineno="11857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:306</highlight></codeline>
<codeline lineno="11858"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11859"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>a,<sp/>b<sp/>in<sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:</highlight></codeline>
<codeline lineno="11860"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/>&quot;b&quot;,<sp/>linewidth=0.2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11861"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11862"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>x,<sp/>y<sp/>in<sp/>liste_coordonnees:</highlight></codeline>
<codeline lineno="11863"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_plot);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_7,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyNumber_Multiply(__pyx_t_6,<sp/>__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="11877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_7,<sp/>__pyx_n_s_b);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyNumber_Add(__pyx_t_5,<sp/>__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyTuple_New(3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_7,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="11889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_7,<sp/>1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="11891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_n_s_b);</highlight></codeline>
<codeline lineno="11892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_n_s_b);</highlight></codeline>
<codeline lineno="11893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_7,<sp/>2,<sp/>__pyx_n_s_b);</highlight></codeline>
<codeline lineno="11894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyDict_NewPresized(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_6,<sp/>__pyx_n_s_linewidth,<sp/>__pyx_float_0_2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_4,<sp/>__pyx_t_7,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>306,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11905"><highlight class="normal"></highlight></codeline>
<codeline lineno="11906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:305</highlight></codeline>
<codeline lineno="11907"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(2.2,<sp/>2.45,<sp/>100)</highlight></codeline>
<codeline lineno="11908"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>a,<sp/>b<sp/>in<sp/>liste_droites_Seine<sp/>+<sp/>liste_droites_Marne:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/>&quot;b&quot;,<sp/>linewidth=0.2)</highlight></codeline>
<codeline lineno="11911"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11912"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11914"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11915"><highlight class="normal"></highlight></codeline>
<codeline lineno="11916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:308</highlight></codeline>
<codeline lineno="11917"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/>&quot;b&quot;,<sp/>linewidth=0.2)</highlight></codeline>
<codeline lineno="11918"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11919"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>x,<sp/>y<sp/>in<sp/>liste_coordonnees:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="11920"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(x,y,<sp/>color=&quot;black&quot;,<sp/>marker=&quot;.&quot;)</highlight></codeline>
<codeline lineno="11921"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="11922"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11923"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_liste_coordonnees_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11924"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2))<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="11926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_2;<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11928"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>-1;<sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetIter(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="11931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>Py_TYPE(__pyx_t_1)-&gt;tp_iternext;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11933"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="11935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!__pyx_t_9))<sp/>{</highlight></codeline>
<codeline lineno="11936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="11937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11938"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11943"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11946"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_8);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(0<sp/>&lt;<sp/>0))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PySequence_ITEM(__pyx_t_1,<sp/>__pyx_t_8);<sp/>__pyx_t_8++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11951"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_9(__pyx_t_1);</highlight></codeline>
<codeline lineno="11955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="11956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>PyErr_Occurred();</highlight></codeline>
<codeline lineno="11957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type)<sp/>{</highlight></codeline>
<codeline lineno="11958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="11959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="11964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((likely(PyTuple_CheckExact(__pyx_t_2)))<sp/>||<sp/>(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="11966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>sequence<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="11967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>__Pyx_PySequence_SIZE(sequence);</highlight></codeline>
<codeline lineno="11968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(size<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="11969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>2)<sp/>__Pyx_RaiseTooManyValuesError(2);</highlight></codeline>
<codeline lineno="11970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(size);</highlight></codeline>
<codeline lineno="11971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11973"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(sequence)))<sp/>{</highlight></codeline>
<codeline lineno="11975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyTuple_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="11979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyList_GET_ITEM(sequence,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="11980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11983"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PySequence_ITEM(sequence,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="11988"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_GetIter(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="11993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="11994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>Py_TYPE(__pyx_t_4)-&gt;tp_iternext;</highlight></codeline>
<codeline lineno="11996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/>__pyx_t_6<sp/>=<sp/>__pyx_t_11(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L21_unpacking_failed;</highlight></codeline>
<codeline lineno="11997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="11998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>1;<sp/>__pyx_t_7<sp/>=<sp/>__pyx_t_11(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L21_unpacking_failed;</highlight></codeline>
<codeline lineno="11999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="12000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_4),<sp/>2)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L22_unpacking_done;</highlight></codeline>
<codeline lineno="12004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L21_unpacking_failed:;</highlight></codeline>
<codeline lineno="12005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_IterFinish()<sp/>==<sp/>0)<sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="12008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L22_unpacking_done:;</highlight></codeline>
<codeline lineno="12010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_x,<sp/>__pyx_t_6)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_y,<sp/>__pyx_t_7)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>308,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12015"><highlight class="normal"></highlight></codeline>
<codeline lineno="12016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:309</highlight></codeline>
<codeline lineno="12017"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12018"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>x,<sp/>y<sp/>in<sp/>liste_coordonnees:</highlight></codeline>
<codeline lineno="12019"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(x,y,<sp/>color=&quot;black&quot;,<sp/>marker=&quot;.&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12020"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="12021"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12022"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_2,<sp/>__pyx_n_s_scatter);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="12027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_2,<sp/>__pyx_n_s_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_6,<sp/>__pyx_n_s_y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="12032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="12034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="12036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="12037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>1,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="12038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyDict_NewPresized(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="12042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_6,<sp/>__pyx_n_s_color,<sp/>__pyx_n_s_black)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_6,<sp/>__pyx_n_s_marker,<sp/>__pyx_kp_s__5)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_7,<sp/>__pyx_t_4,<sp/>__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>309,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_7);<sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12050"><highlight class="normal"></highlight></codeline>
<codeline lineno="12051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:308</highlight></codeline>
<codeline lineno="12052"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(x,<sp/>a*x+b,<sp/>&quot;b&quot;,<sp/>linewidth=0.2)</highlight></codeline>
<codeline lineno="12053"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12054"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>x,<sp/>y<sp/>in<sp/>liste_coordonnees:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12055"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(x,y,<sp/>color=&quot;black&quot;,<sp/>marker=&quot;.&quot;)</highlight></codeline>
<codeline lineno="12056"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="12057"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12059"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12060"><highlight class="normal"></highlight></codeline>
<codeline lineno="12061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:310</highlight></codeline>
<codeline lineno="12062"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>x,<sp/>y<sp/>in<sp/>liste_coordonnees:</highlight></codeline>
<codeline lineno="12063"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.scatter(x,y,<sp/>color=&quot;black&quot;,<sp/>marker=&quot;.&quot;)</highlight></codeline>
<codeline lineno="12064"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12065"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12066"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="12067"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12068"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>310,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12069"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12070"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_axis);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>310,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12071"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12072"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12073"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__31,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>310,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12074"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12075"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12076"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12077"><highlight class="normal"></highlight></codeline>
<codeline lineno="12078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:312</highlight></codeline>
<codeline lineno="12079"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.axis(&quot;equal&quot;)</highlight></codeline>
<codeline lineno="12080"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12081"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12082"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)</highlight></codeline>
<codeline lineno="12083"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="12084"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12085"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>312,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12086"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12087"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_xlim);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>312,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12088"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12089"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12090"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__46,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>312,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12091"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12092"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12093"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12094"><highlight class="normal"></highlight></codeline>
<codeline lineno="12095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:313</highlight></codeline>
<codeline lineno="12096"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12097"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="12098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12099"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="12100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12101"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>313,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12102"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12103"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_ylim);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>313,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12104"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12105"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12106"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_Call(__pyx_t_2,<sp/>__pyx_tuple__47,<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>313,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12107"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12108"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12109"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12110"><highlight class="normal"></highlight></codeline>
<codeline lineno="12111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:314</highlight></codeline>
<codeline lineno="12112"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.xlim(2.2,<sp/>2.45)</highlight></codeline>
<codeline lineno="12113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.ylim(48.75,<sp/>49)</highlight></codeline>
<codeline lineno="12114"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>plt.show()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12116"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GetModuleGlobalName(__pyx_t_1,<sp/>__pyx_n_s_plt);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>314,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12117"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12118"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_t_1,<sp/>__pyx_n_s_show);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>__PYX_ERR(0,<sp/>314,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12119"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12120"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12121"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyObject_CallNoArg(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>314,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12122"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12123"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12124"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12125"><highlight class="normal"></highlight></codeline>
<codeline lineno="12126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:298</highlight></codeline>
<codeline lineno="12127"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12128"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12129"><highlight class="comment"><sp/>*<sp/>if<sp/>__name__<sp/>==<sp/>&quot;piche&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_coordonnees<sp/>=<sp/>get_coords()</highlight></codeline>
<codeline lineno="12131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>liste_droites_Seine,<sp/>liste_droites_Marne<sp/>=<sp/>calcul_droites(liste_coordonnees)</highlight></codeline>
<codeline lineno="12132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12134"><highlight class="normal"></highlight></codeline>
<codeline lineno="12135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="12136"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Point(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="12138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="12139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12140"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_13__pyx_unpickle_Point,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12141"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_pyx_unpickle_Point,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12143"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12144"><highlight class="normal"></highlight></codeline>
<codeline lineno="12145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:11</highlight></codeline>
<codeline lineno="12146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_unpickle_Point__set_state(&lt;Point&gt;<sp/>__pyx_result,<sp/>__pyx_state)</highlight></codeline>
<codeline lineno="12147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>__pyx_result</highlight></codeline>
<codeline lineno="12148"><highlight class="comment"><sp/>*<sp/>cdef<sp/>__pyx_unpickle_Point__set_state(Point<sp/>__pyx_result,<sp/>tuple<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>__pyx_result.x<sp/>=<sp/>__pyx_state[0];<sp/>__pyx_result.y<sp/>=<sp/>__pyx_state[1]</highlight></codeline>
<codeline lineno="12150"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>len(__pyx_state)<sp/>&gt;<sp/>2<sp/>and<sp/>hasattr(__pyx_result,<sp/>&apos;__dict__&apos;):</highlight></codeline>
<codeline lineno="12151"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12152"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_15__pyx_unpickle_DansLeSegmentNotError,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12153"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_pyx_unpickle_DansLeSegmentNotE,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12155"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12156"><highlight class="normal"></highlight></codeline>
<codeline lineno="12157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;(tree<sp/>fragment)&quot;:1</highlight></codeline>
<codeline lineno="12158"><highlight class="comment"><sp/>*<sp/>def<sp/>__pyx_unpickle_Segment(__pyx_type,<sp/>long<sp/>__pyx_checksum,<sp/>__pyx_state):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12159"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_PickleError</highlight></codeline>
<codeline lineno="12160"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>object<sp/>__pyx_result</highlight></codeline>
<codeline lineno="12161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12162"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyCFunction_NewEx(&amp;__pyx_mdef_16seine_data_utils_17__pyx_unpickle_Segment,<sp/>NULL,<sp/>__pyx_n_s_seine_data_utils);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12163"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_pyx_unpickle_Segment,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(1,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12165"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12166"><highlight class="normal"></highlight></codeline>
<codeline lineno="12167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;seine_data_utils.pyx&quot;:1</highlight></codeline>
<codeline lineno="12168"><highlight class="comment"><sp/>*<sp/>from<sp/>pathlib<sp/>import<sp/>Path<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="12169"><highlight class="comment"><sp/>*<sp/>import<sp/>re</highlight></codeline>
<codeline lineno="12170"><highlight class="comment"><sp/>*<sp/>from<sp/>typing<sp/>import<sp/>List,<sp/>Tuple</highlight></codeline>
<codeline lineno="12171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12172"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyDict_NewPresized(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12173"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_d,<sp/>__pyx_n_s_test,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>__PYX_ERR(0,<sp/>1,<sp/>__pyx_L1_error)</highlight></codeline>
<codeline lineno="12175"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12176"><highlight class="normal"></highlight></codeline>
<codeline lineno="12177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Wrapped<sp/>vars<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12178"><highlight class="normal"></highlight></codeline>
<codeline lineno="12179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="12180"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="12181"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="12182"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="12183"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="12184"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="12185"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="12186"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="12187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m)<sp/>{</highlight></codeline>
<codeline lineno="12188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_d)<sp/>{</highlight></codeline>
<codeline lineno="12189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;init<sp/>seine_data_utils&quot;</highlight><highlight class="normal">,<sp/>__pyx_clineno,<sp/>__pyx_lineno,<sp/>__pyx_filename);</highlight></codeline>
<codeline lineno="12190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12191"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(__pyx_m);</highlight></codeline>
<codeline lineno="12192"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="12193"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ImportError,<sp/></highlight><highlight class="stringliteral">&quot;init<sp/>seine_data_utils&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12195"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="12196"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="12197"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_PEP489_MULTI_PHASE_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__pyx_m<sp/>!=<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="12199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_m;</highlight></codeline>
<codeline lineno="12201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12205"><highlight class="normal"></highlight></codeline>
<codeline lineno="12206"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>Runtime<sp/>support<sp/>code<sp/>---<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12207"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Refnanny<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefNannyAPIStruct<sp/>*__Pyx_RefNannyImportAPI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*modname)<sp/>{</highlight></codeline>
<codeline lineno="12210"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*m<sp/>=<sp/>NULL,<sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12212"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>PyImport_ImportModule(modname);</highlight></codeline>
<codeline lineno="12213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="12214"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>PyObject_GetAttrString(m,<sp/></highlight><highlight class="stringliteral">&quot;RefNannyAPI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="12216"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyLong_AsVoidPtr(p);</highlight></codeline>
<codeline lineno="12217"><highlight class="normal">end:</highlight></codeline>
<codeline lineno="12218"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(p);</highlight></codeline>
<codeline lineno="12219"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(m);</highlight></codeline>
<codeline lineno="12220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__Pyx_RefNannyAPIStruct<sp/>*)r;</highlight></codeline>
<codeline lineno="12221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12223"><highlight class="normal"></highlight></codeline>
<codeline lineno="12224"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetAttrStr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetAttrStr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name)<sp/>{</highlight></codeline>
<codeline lineno="12227"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject*<sp/>tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="12228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(tp-&gt;tp_getattro))</highlight></codeline>
<codeline lineno="12229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp-&gt;tp_getattro(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="12230"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(tp-&gt;tp_getattr))</highlight></codeline>
<codeline lineno="12232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp-&gt;tp_getattr(obj,<sp/>PyString_AS_STRING(attr_name));</highlight></codeline>
<codeline lineno="12233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttr(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="12235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12237"><highlight class="normal"></highlight></codeline>
<codeline lineno="12238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetBuiltinName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetBuiltinName(PyObject<sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="12240"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_b,<sp/>name);</highlight></codeline>
<codeline lineno="12241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/>{</highlight></codeline>
<codeline lineno="12242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_NameError,</highlight></codeline>
<codeline lineno="12243"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="12244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;name<sp/>&apos;%U&apos;<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="12245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;name<sp/>&apos;%.200s&apos;<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">,<sp/>PyString_AS_STRING(name));</highlight></codeline>
<codeline lineno="12247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12251"><highlight class="normal"></highlight></codeline>
<codeline lineno="12252"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_Call(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg,<sp/>PyObject<sp/>*kw)<sp/>{</highlight></codeline>
<codeline lineno="12255"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12256"><highlight class="normal"><sp/><sp/><sp/><sp/>ternaryfunc<sp/>call<sp/>=<sp/>func-&gt;ob_type-&gt;tp_call;</highlight></codeline>
<codeline lineno="12257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!call))</highlight></codeline>
<codeline lineno="12258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Call(func,<sp/>arg,<sp/>kw);</highlight></codeline>
<codeline lineno="12259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_EnterRecursiveCall((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;<sp/>while<sp/>calling<sp/>a<sp/>Python<sp/>object&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="12260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12261"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(*call)(func,<sp/>arg,<sp/>kw);</highlight></codeline>
<codeline lineno="12262"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_LeaveRecursiveCall();</highlight></codeline>
<codeline lineno="12263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result)<sp/>&amp;&amp;<sp/>unlikely(!PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="12264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(</highlight></codeline>
<codeline lineno="12265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyExc_SystemError,</highlight></codeline>
<codeline lineno="12266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>result<sp/>without<sp/>error<sp/>in<sp/>PyObject_Call&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12271"><highlight class="normal"></highlight></codeline>
<codeline lineno="12272"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseDoubleKeywords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight></codeline>
<codeline lineno="12274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="12275"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>kw_name)</highlight></codeline>
<codeline lineno="12276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12277"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="12278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="12279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,<sp/>kw_name);</highlight></codeline>
<codeline lineno="12280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,</highlight></codeline>
<codeline lineno="12282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(kw_name));</highlight></codeline>
<codeline lineno="12283"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12285"><highlight class="normal"></highlight></codeline>
<codeline lineno="12286"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ParseKeywords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(</highlight></codeline>
<codeline lineno="12288"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds,</highlight></codeline>
<codeline lineno="12289"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**argnames[],</highlight></codeline>
<codeline lineno="12290"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,</highlight></codeline>
<codeline lineno="12291"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*values[],</highlight></codeline>
<codeline lineno="12292"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_pos_args,</highlight></codeline>
<codeline lineno="12293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name)</highlight></codeline>
<codeline lineno="12294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12295"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*key<sp/>=<sp/>0,<sp/>*value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12296"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12297"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/>name;</highlight></codeline>
<codeline lineno="12298"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/>first_kw_arg<sp/>=<sp/>argnames<sp/>+<sp/>num_pos_args;</highlight></codeline>
<codeline lineno="12299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(PyDict_Next(kwds,<sp/>&amp;pos,<sp/>&amp;key,<sp/>&amp;value))<sp/>{</highlight></codeline>
<codeline lineno="12300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>first_kw_arg;</highlight></codeline>
<codeline lineno="12301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*name<sp/>&amp;&amp;<sp/>(**name<sp/>!=<sp/>key))<sp/>name++;</highlight></codeline>
<codeline lineno="12302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="12303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>first_kw_arg;</highlight></codeline>
<codeline lineno="12307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyString_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="12309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="12310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CYTHON_COMPILING_IN_PYPY<sp/>||<sp/>PyString_GET_SIZE(**name)<sp/>==<sp/>PyString_GET_SIZE(key))</highlight></codeline>
<codeline lineno="12311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>_PyString_Eq(**name,<sp/>key))<sp/>{</highlight></codeline>
<codeline lineno="12312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name++;</highlight></codeline>
<codeline lineno="12316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject***<sp/>argname<sp/>=<sp/>argnames;</highlight></codeline>
<codeline lineno="12320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argname<sp/>!=<sp/>first_kw_arg)<sp/>{</highlight></codeline>
<codeline lineno="12321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((**argname<sp/>==<sp/>key)<sp/>||<sp/>(</highlight></codeline>
<codeline lineno="12322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CYTHON_COMPILING_IN_PYPY<sp/>||<sp/>PyString_GET_SIZE(**argname)<sp/>==<sp/>PyString_GET_SIZE(key))</highlight></codeline>
<codeline lineno="12323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>_PyString_Eq(**argname,<sp/>key)))<sp/>{</highlight></codeline>
<codeline lineno="12324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="12325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argname++;</highlight></codeline>
<codeline lineno="12327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12330"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyUnicode_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="12332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="12333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>(**name<sp/>==<sp/>key)<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="12334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>!CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="12335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__Pyx_PyUnicode_GET_LENGTH(**name)<sp/>!=<sp/>__Pyx_PyUnicode_GET_LENGTH(key))<sp/>?<sp/>1<sp/>:</highlight></codeline>
<codeline lineno="12336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="12337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**name,<sp/>key);</highlight></codeline>
<codeline lineno="12338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>unlikely(PyErr_Occurred()))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="12340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name++;</highlight></codeline>
<codeline lineno="12344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject***<sp/>argname<sp/>=<sp/>argnames;</highlight></codeline>
<codeline lineno="12348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argname<sp/>!=<sp/>first_kw_arg)<sp/>{</highlight></codeline>
<codeline lineno="12349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>(**argname<sp/>==<sp/>key)<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="12350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>!CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="12351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__Pyx_PyUnicode_GET_LENGTH(**argname)<sp/>!=<sp/>__Pyx_PyUnicode_GET_LENGTH(key))<sp/>?<sp/>1<sp/>:</highlight></codeline>
<codeline lineno="12352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="12353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**argname,<sp/>key);</highlight></codeline>
<codeline lineno="12354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>unlikely(PyErr_Occurred()))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="12356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argname++;</highlight></codeline>
<codeline lineno="12357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword_type;</highlight></codeline>
<codeline lineno="12361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwds2)<sp/>{</highlight></codeline>
<codeline lineno="12362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyDict_SetItem(kwds2,<sp/>key,<sp/>value)))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword;</highlight></codeline>
<codeline lineno="12365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="12368"><highlight class="normal">arg_passed_twice:</highlight></codeline>
<codeline lineno="12369"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_RaiseDoubleKeywordsError(function_name,<sp/>key);</highlight></codeline>
<codeline lineno="12370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12371"><highlight class="normal">invalid_keyword_type:</highlight></codeline>
<codeline lineno="12372"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="12373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>keywords<sp/>must<sp/>be<sp/>strings&quot;</highlight><highlight class="normal">,<sp/>function_name);</highlight></codeline>
<codeline lineno="12374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12375"><highlight class="normal">invalid_keyword:</highlight></codeline>
<codeline lineno="12376"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="12377"><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="12378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%.200s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>PyString_AsString(key));</highlight></codeline>
<codeline lineno="12380"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>key);</highlight></codeline>
<codeline lineno="12383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12384"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="12385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12387"><highlight class="normal"></highlight></codeline>
<codeline lineno="12388"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseArgTupleInvalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight></codeline>
<codeline lineno="12390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="12391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="12392"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,</highlight></codeline>
<codeline lineno="12393"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_max,</highlight></codeline>
<codeline lineno="12394"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_found)</highlight></codeline>
<codeline lineno="12395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12396"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_expected;</highlight></codeline>
<codeline lineno="12397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*more_or_less;</highlight></codeline>
<codeline lineno="12398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_found<sp/>&lt;<sp/>num_min)<sp/>{</highlight></codeline>
<codeline lineno="12399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_min;</highlight></codeline>
<codeline lineno="12400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12401"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_max;</highlight></codeline>
<codeline lineno="12403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>most&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact)<sp/>{</highlight></codeline>
<codeline lineno="12406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;exactly&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12408"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="12409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>takes<sp/>%.8s<sp/>%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>positional<sp/>argument%.1s<sp/>(%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>more_or_less,<sp/>num_expected,</highlight></codeline>
<codeline lineno="12411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num_expected<sp/>==<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/>num_found);</highlight></codeline>
<codeline lineno="12412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12413"><highlight class="normal"></highlight></codeline>
<codeline lineno="12414"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyDictVersioning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12415"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_DICT_VERSIONS<sp/>&amp;&amp;<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12416"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_UINT64_T<sp/>__Pyx_get_tp_dict_version(PyObject<sp/>*obj)<sp/>{</highlight></codeline>
<codeline lineno="12417"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*dict<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_dict;</highlight></codeline>
<codeline lineno="12418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>likely(dict)<sp/>?<sp/>__PYX_GET_DICT_VERSION(dict)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="12419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_UINT64_T<sp/>__Pyx_get_object_dict_version(PyObject<sp/>*obj)<sp/>{</highlight></codeline>
<codeline lineno="12421"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**dictptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12422"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>offset<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_dictoffset;</highlight></codeline>
<codeline lineno="12423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset)<sp/>{</highlight></codeline>
<codeline lineno="12424"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictptr<sp/>=<sp/>(likely(offset<sp/>&gt;<sp/>0))<sp/>?<sp/>(PyObject<sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)obj<sp/>+<sp/>offset)<sp/>:<sp/>_PyObject_GetDictPtr(obj);</highlight></codeline>
<codeline lineno="12426"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictptr<sp/>=<sp/>_PyObject_GetDictPtr(obj);</highlight></codeline>
<codeline lineno="12428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dictptr<sp/>&amp;&amp;<sp/>*dictptr)<sp/>?<sp/>__PYX_GET_DICT_VERSION(*dictptr)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="12431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12432"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_object_dict_version_matches(PyObject*<sp/>obj,<sp/>PY_UINT64_T<sp/>tp_dict_version,<sp/>PY_UINT64_T<sp/>obj_dict_version)<sp/>{</highlight></codeline>
<codeline lineno="12433"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*dict<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_dict;</highlight></codeline>
<codeline lineno="12434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!dict)<sp/>||<sp/>unlikely(tp_dict_version<sp/>!=<sp/>__PYX_GET_DICT_VERSION(dict)))</highlight></codeline>
<codeline lineno="12435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="12436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj_dict_version<sp/>==<sp/>__Pyx_get_object_dict_version(obj);</highlight></codeline>
<codeline lineno="12437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12439"><highlight class="normal"></highlight></codeline>
<codeline lineno="12440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetModuleGlobalName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_DICT_VERSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx__GetModuleGlobalName(PyObject<sp/>*name,<sp/>PY_UINT64_T<sp/>*dict_version,<sp/>PyObject<sp/>**dict_cached_value)</highlight></codeline>
<codeline lineno="12443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12444"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx__GetModuleGlobalName(PyObject<sp/>*name)</highlight></codeline>
<codeline lineno="12445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12447"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12448"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12449"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030500A1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12450"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>_PyDict_GetItem_KnownHash(__pyx_d,<sp/>name,<sp/>((PyASCIIObject<sp/>*)<sp/>name)-&gt;hash);</highlight></codeline>
<codeline lineno="12451"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_UPDATE_DICT_CACHE(__pyx_d,<sp/>result,<sp/>*dict_cached_value,<sp/>*dict_version)</highlight></codeline>
<codeline lineno="12452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(result))<sp/>{</highlight></codeline>
<codeline lineno="12453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(result);</highlight></codeline>
<codeline lineno="12454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="12455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12457"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12458"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyDict_GetItem(__pyx_d,<sp/>name);</highlight></codeline>
<codeline lineno="12459"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_UPDATE_DICT_CACHE(__pyx_d,<sp/>result,<sp/>*dict_cached_value,<sp/>*dict_version)</highlight></codeline>
<codeline lineno="12460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(result))<sp/>{</highlight></codeline>
<codeline lineno="12461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(result);</highlight></codeline>
<codeline lineno="12462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12464"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12465"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_GetItem(__pyx_d,<sp/>name);</highlight></codeline>
<codeline lineno="12466"><highlight class="normal"><sp/><sp/><sp/><sp/>__PYX_UPDATE_DICT_CACHE(__pyx_d,<sp/>result,<sp/>*dict_cached_value,<sp/>*dict_version)</highlight></codeline>
<codeline lineno="12467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(result))<sp/>{</highlight></codeline>
<codeline lineno="12468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(result);</highlight></codeline>
<codeline lineno="12469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12470"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="12471"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetBuiltinName(name);</highlight></codeline>
<codeline lineno="12473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12474"><highlight class="normal"></highlight></codeline>
<codeline lineno="12475"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyFunctionFastCall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12477"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyFunction_FastCallNoKw(PyCodeObject<sp/>*co,<sp/>PyObject<sp/>**args,<sp/>Py_ssize_t<sp/>na,</highlight></codeline>
<codeline lineno="12478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*globals)<sp/>{</highlight></codeline>
<codeline lineno="12479"><highlight class="normal"><sp/><sp/><sp/><sp/>PyFrameObject<sp/>*<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="12480"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>__Pyx_PyThreadState_Current;</highlight></codeline>
<codeline lineno="12481"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**fastlocals;</highlight></codeline>
<codeline lineno="12482"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i;</highlight></codeline>
<codeline lineno="12483"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12484"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(globals<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="12485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX<sp/>Perhaps<sp/>we<sp/>should<sp/>create<sp/>a<sp/>specialized</highlight></codeline>
<codeline lineno="12486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFrame_New()<sp/>that<sp/>doesn&apos;t<sp/>take<sp/>locals,<sp/>but<sp/>does</highlight></codeline>
<codeline lineno="12487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>take<sp/>builtins<sp/>without<sp/>sanity<sp/>checking<sp/>them.</highlight></codeline>
<codeline lineno="12488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12489"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tstate<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="12490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>PyFrame_New(tstate,<sp/>co,<sp/>globals,<sp/>NULL);</highlight></codeline>
<codeline lineno="12491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="12492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12494"><highlight class="normal"><sp/><sp/><sp/><sp/>fastlocals<sp/>=<sp/>__Pyx_PyFrame_GetLocalsplus(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="12495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>na;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="12496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(*args);</highlight></codeline>
<codeline lineno="12497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fastlocals[i]<sp/>=<sp/>*args++;</highlight></codeline>
<codeline lineno="12498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12499"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyEval_EvalFrameEx(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,0);</highlight></codeline>
<codeline lineno="12500"><highlight class="normal"><sp/><sp/><sp/><sp/>++tstate-&gt;recursion_depth;</highlight></codeline>
<codeline lineno="12501"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="12502"><highlight class="normal"><sp/><sp/><sp/><sp/>--tstate-&gt;recursion_depth;</highlight></codeline>
<codeline lineno="12503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12505"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1<sp/>||<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030600B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_PyFunction_FastCallDict(PyObject<sp/>*func,<sp/>PyObject<sp/>**args,<sp/>Py_ssize_t<sp/>nargs,<sp/>PyObject<sp/>*kwargs)<sp/>{</highlight></codeline>
<codeline lineno="12507"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject<sp/>*co<sp/>=<sp/>(PyCodeObject<sp/>*)PyFunction_GET_CODE(func);</highlight></codeline>
<codeline lineno="12508"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*globals<sp/>=<sp/>PyFunction_GET_GLOBALS(func);</highlight></codeline>
<codeline lineno="12509"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*argdefs<sp/>=<sp/>PyFunction_GET_DEFAULTS(func);</highlight></codeline>
<codeline lineno="12510"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*closure;</highlight></codeline>
<codeline lineno="12511"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12512"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwdefs;</highlight></codeline>
<codeline lineno="12513"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12514"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwtuple,<sp/>**k;</highlight></codeline>
<codeline lineno="12515"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**d;</highlight></codeline>
<codeline lineno="12516"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nd;</highlight></codeline>
<codeline lineno="12517"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nk;</highlight></codeline>
<codeline lineno="12518"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12519"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(kwargs<sp/>==<sp/>NULL<sp/>||<sp/>PyDict_Check(kwargs));</highlight></codeline>
<codeline lineno="12520"><highlight class="normal"><sp/><sp/><sp/><sp/>nk<sp/>=<sp/>kwargs<sp/>?<sp/>PyDict_Size(kwargs)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="12521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Py_EnterRecursiveCall((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;<sp/>while<sp/>calling<sp/>a<sp/>Python<sp/>object&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="12522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="12525"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="12526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co-&gt;co_kwonlyargcount<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="12527"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="12528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likely(kwargs<sp/>==<sp/>NULL<sp/>||<sp/>nk<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="12529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co-&gt;co_flags<sp/>==<sp/>(CO_OPTIMIZED<sp/>|<sp/>CO_NEWLOCALS<sp/>|<sp/>CO_NOFREE))<sp/>{</highlight></codeline>
<codeline lineno="12530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argdefs<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>co-&gt;co_argcount<sp/>==<sp/>nargs)<sp/>{</highlight></codeline>
<codeline lineno="12531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyFunction_FastCallNoKw(co,<sp/>args,<sp/>nargs,<sp/>globals);</highlight></codeline>
<codeline lineno="12532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="12533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nargs<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>argdefs<sp/>!=<sp/>NULL</highlight></codeline>
<codeline lineno="12535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>co-&gt;co_argcount<sp/>==<sp/>Py_SIZE(argdefs))<sp/>{</highlight></codeline>
<codeline lineno="12536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>called<sp/>with<sp/>no<sp/>arguments,<sp/>but<sp/>all<sp/>parameters<sp/>have</highlight></codeline>
<codeline lineno="12537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>default<sp/>value:<sp/>use<sp/>default<sp/>values<sp/>as<sp/>arguments<sp/>.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>&amp;PyTuple_GET_ITEM(argdefs,<sp/>0);</highlight></codeline>
<codeline lineno="12539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=__Pyx_PyFunction_FastCallNoKw(co,<sp/>args,<sp/>Py_SIZE(argdefs),<sp/>globals);</highlight></codeline>
<codeline lineno="12540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="12541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwargs<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="12544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos,<sp/>i;</highlight></codeline>
<codeline lineno="12545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwtuple<sp/>=<sp/>PyTuple_New(2<sp/>*<sp/>nk);</highlight></codeline>
<codeline lineno="12546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwtuple<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="12547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="12549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>&amp;PyTuple_GET_ITEM(kwtuple,<sp/>0);</highlight></codeline>
<codeline lineno="12551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(PyDict_Next(kwargs,<sp/>&amp;pos,<sp/>&amp;k[i],<sp/>&amp;k[i+1]))<sp/>{</highlight></codeline>
<codeline lineno="12553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(k[i]);</highlight></codeline>
<codeline lineno="12554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(k[i+1]);</highlight></codeline>
<codeline lineno="12555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="12556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nk<sp/>=<sp/>i<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="12558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwtuple<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12563"><highlight class="normal"><sp/><sp/><sp/><sp/>closure<sp/>=<sp/>PyFunction_GET_CLOSURE(func);</highlight></codeline>
<codeline lineno="12564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12565"><highlight class="normal"><sp/><sp/><sp/><sp/>kwdefs<sp/>=<sp/>PyFunction_GET_KW_DEFAULTS(func);</highlight></codeline>
<codeline lineno="12566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argdefs<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="12568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>&amp;PyTuple_GET_ITEM(argdefs,<sp/>0);</highlight></codeline>
<codeline lineno="12569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>Py_SIZE(argdefs);</highlight></codeline>
<codeline lineno="12570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12575"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12576"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyEval_EvalCodeEx((PyObject*)co,<sp/>globals,<sp/>(PyObject<sp/>*)NULL,</highlight></codeline>
<codeline lineno="12577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nargs,</highlight></codeline>
<codeline lineno="12578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nk,</highlight></codeline>
<codeline lineno="12579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nd,<sp/>kwdefs,<sp/>closure);</highlight></codeline>
<codeline lineno="12580"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12581"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyEval_EvalCodeEx(co,<sp/>globals,<sp/>(PyObject<sp/>*)NULL,</highlight></codeline>
<codeline lineno="12582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nargs,</highlight></codeline>
<codeline lineno="12583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nk,</highlight></codeline>
<codeline lineno="12584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nd,<sp/>closure);</highlight></codeline>
<codeline lineno="12585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12586"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(kwtuple);</highlight></codeline>
<codeline lineno="12587"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="12588"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_LeaveRecursiveCall();</highlight></codeline>
<codeline lineno="12589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12593"><highlight class="normal"></highlight></codeline>
<codeline lineno="12594"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallMethO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12595"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallMethO(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="12597"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>*result;</highlight></codeline>
<codeline lineno="12598"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunction<sp/>cfunc;</highlight></codeline>
<codeline lineno="12599"><highlight class="normal"><sp/><sp/><sp/><sp/>cfunc<sp/>=<sp/>PyCFunction_GET_FUNCTION(func);</highlight></codeline>
<codeline lineno="12600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>PyCFunction_GET_SELF(func);</highlight></codeline>
<codeline lineno="12601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_EnterRecursiveCall((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;<sp/>while<sp/>calling<sp/>a<sp/>Python<sp/>object&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="12602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12603"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cfunc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="12604"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_LeaveRecursiveCall();</highlight></codeline>
<codeline lineno="12605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result)<sp/>&amp;&amp;<sp/>unlikely(!PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="12606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(</highlight></codeline>
<codeline lineno="12607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyExc_SystemError,</highlight></codeline>
<codeline lineno="12608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>result<sp/>without<sp/>error<sp/>in<sp/>PyObject_Call&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12613"><highlight class="normal"></highlight></codeline>
<codeline lineno="12614"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallNoArg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12615"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallNoArg(PyObject<sp/>*func)<sp/>{</highlight></codeline>
<codeline lineno="12617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFunction_Check(func))<sp/>{</highlight></codeline>
<codeline lineno="12619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyFunction_FastCall(func,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="12620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12622"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__Pyx_CyFunction_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyCFunction_Check(func)<sp/>||<sp/>__Pyx_CyFunction_Check(func)))</highlight></codeline>
<codeline lineno="12624"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyCFunction_Check(func)))</highlight></codeline>
<codeline lineno="12626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyCFunction_GET_FLAGS(func)<sp/>&amp;<sp/>METH_NOARGS))<sp/>{</highlight></codeline>
<codeline lineno="12629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_CallMethO(func,<sp/>NULL);</highlight></codeline>
<codeline lineno="12630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_Call(func,<sp/>__pyx_empty_tuple,<sp/>NULL);</highlight></codeline>
<codeline lineno="12633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12635"><highlight class="normal"></highlight></codeline>
<codeline lineno="12636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyCFunctionFastCall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12637"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyCFunction_FastCall(PyObject<sp/>*func_obj,<sp/>PyObject<sp/>**args,<sp/>Py_ssize_t<sp/>nargs)<sp/>{</highlight></codeline>
<codeline lineno="12639"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunctionObject<sp/>*func<sp/>=<sp/>(PyCFunctionObject*)func_obj;</highlight></codeline>
<codeline lineno="12640"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunction<sp/>meth<sp/>=<sp/>PyCFunction_GET_FUNCTION(func);</highlight></codeline>
<codeline lineno="12641"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>PyCFunction_GET_SELF(func);</highlight></codeline>
<codeline lineno="12642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>PyCFunction_GET_FLAGS(func);</highlight></codeline>
<codeline lineno="12643"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(PyCFunction_Check(func));</highlight></codeline>
<codeline lineno="12644"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(METH_FASTCALL<sp/>==<sp/>(flags<sp/>&amp;<sp/>~(METH_CLASS<sp/>|<sp/>METH_STATIC<sp/>|<sp/>METH_COEXIST<sp/>|<sp/>METH_KEYWORDS<sp/>|<sp/>METH_STACKLESS)));</highlight></codeline>
<codeline lineno="12645"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nargs<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="12646"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nargs<sp/>==<sp/>0<sp/>||<sp/>args<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="12647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_PyCFunction_FastCallDict()<sp/>must<sp/>not<sp/>be<sp/>called<sp/>with<sp/>an<sp/>exception<sp/>set,</highlight></codeline>
<codeline lineno="12648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>it<sp/>may<sp/>clear<sp/>it<sp/>(directly<sp/>or<sp/>indirectly)<sp/>and<sp/>so<sp/>the</highlight></codeline>
<codeline lineno="12649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller<sp/>loses<sp/>its<sp/>exception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12650"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!PyErr_Occurred());</highlight></codeline>
<codeline lineno="12651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((PY_VERSION_HEX<sp/>&lt;<sp/>0x030700A0)<sp/>||<sp/>unlikely(flags<sp/>&amp;<sp/>METH_KEYWORDS))<sp/>{</highlight></codeline>
<codeline lineno="12652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*((__Pyx_PyCFunctionFastWithKeywords)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)meth))<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>args,<sp/>nargs,<sp/>NULL);</highlight></codeline>
<codeline lineno="12653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*((__Pyx_PyCFunctionFast)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)meth))<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>args,<sp/>nargs);</highlight></codeline>
<codeline lineno="12655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12658"><highlight class="normal"></highlight></codeline>
<codeline lineno="12659"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallOneArg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12660"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx__PyObject_CallOneArg(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="12662"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12663"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*args<sp/>=<sp/>PyTuple_New(1);</highlight></codeline>
<codeline lineno="12664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!args))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12665"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(arg);</highlight></codeline>
<codeline lineno="12666"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(args,<sp/>0,<sp/>arg);</highlight></codeline>
<codeline lineno="12667"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_Call(func,<sp/>args,<sp/>NULL);</highlight></codeline>
<codeline lineno="12668"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(args);</highlight></codeline>
<codeline lineno="12669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallOneArg(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="12672"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFunction_Check(func))<sp/>{</highlight></codeline>
<codeline lineno="12674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyFunction_FastCall(func,<sp/>&amp;arg,<sp/>1);</highlight></codeline>
<codeline lineno="12675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12676"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyCFunction_Check(func)))<sp/>{</highlight></codeline>
<codeline lineno="12678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyCFunction_GET_FLAGS(func)<sp/>&amp;<sp/>METH_O))<sp/>{</highlight></codeline>
<codeline lineno="12679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_CallMethO(func,<sp/>arg);</highlight></codeline>
<codeline lineno="12680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_PYCCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyCFunction_GET_FLAGS(func)<sp/>&amp;<sp/>METH_FASTCALL)<sp/>{</highlight></codeline>
<codeline lineno="12682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyCFunction_FastCall(func,<sp/>&amp;arg,<sp/>1);</highlight></codeline>
<codeline lineno="12683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx__PyObject_CallOneArg(func,<sp/>arg);</highlight></codeline>
<codeline lineno="12687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12688"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_CallOneArg(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="12690"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="12691"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*args<sp/>=<sp/>PyTuple_Pack(1,<sp/>arg);</highlight></codeline>
<codeline lineno="12692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!args))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12693"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_Call(func,<sp/>args,<sp/>NULL);</highlight></codeline>
<codeline lineno="12694"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(args);</highlight></codeline>
<codeline lineno="12695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12698"><highlight class="normal"></highlight></codeline>
<codeline lineno="12699"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetTopmostException<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12700"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12701"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_PyErr_StackItem<sp/>*</highlight></codeline>
<codeline lineno="12702"><highlight class="normal">__Pyx_PyErr_GetTopmostException(PyThreadState<sp/>*tstate)</highlight></codeline>
<codeline lineno="12703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12704"><highlight class="normal"><sp/><sp/><sp/><sp/>_PyErr_StackItem<sp/>*exc_info<sp/>=<sp/>tstate-&gt;exc_info;</highlight></codeline>
<codeline lineno="12705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((exc_info-&gt;exc_type<sp/>==<sp/>NULL<sp/>||<sp/>exc_info-&gt;exc_type<sp/>==<sp/>Py_None)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="12706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_info-&gt;previous_item<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_info<sp/>=<sp/>exc_info-&gt;previous_item;</highlight></codeline>
<codeline lineno="12709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exc_info;</highlight></codeline>
<codeline lineno="12711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12713"><highlight class="normal"></highlight></codeline>
<codeline lineno="12714"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SaveResetException<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12715"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx__ExceptionSave(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)<sp/>{</highlight></codeline>
<codeline lineno="12717"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12718"><highlight class="normal"><sp/><sp/><sp/><sp/>_PyErr_StackItem<sp/>*exc_info<sp/>=<sp/>__Pyx_PyErr_GetTopmostException(tstate);</highlight></codeline>
<codeline lineno="12719"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>exc_info-&gt;exc_type;</highlight></codeline>
<codeline lineno="12720"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>exc_info-&gt;exc_value;</highlight></codeline>
<codeline lineno="12721"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>exc_info-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12722"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12723"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>tstate-&gt;exc_type;</highlight></codeline>
<codeline lineno="12724"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>tstate-&gt;exc_value;</highlight></codeline>
<codeline lineno="12725"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>tstate-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12726"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12727"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(*type);</highlight></codeline>
<codeline lineno="12728"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(*value);</highlight></codeline>
<codeline lineno="12729"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(*tb);</highlight></codeline>
<codeline lineno="12730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx__ExceptionReset(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="12732"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="12733"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12734"><highlight class="normal"><sp/><sp/><sp/><sp/>_PyErr_StackItem<sp/>*exc_info<sp/>=<sp/>tstate-&gt;exc_info;</highlight></codeline>
<codeline lineno="12735"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>exc_info-&gt;exc_type;</highlight></codeline>
<codeline lineno="12736"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>exc_info-&gt;exc_value;</highlight></codeline>
<codeline lineno="12737"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>exc_info-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12738"><highlight class="normal"><sp/><sp/><sp/><sp/>exc_info-&gt;exc_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="12739"><highlight class="normal"><sp/><sp/><sp/><sp/>exc_info-&gt;exc_value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12740"><highlight class="normal"><sp/><sp/><sp/><sp/>exc_info-&gt;exc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="12741"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12742"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;exc_type;</highlight></codeline>
<codeline lineno="12743"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;exc_value;</highlight></codeline>
<codeline lineno="12744"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12745"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="12746"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12747"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="12748"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12749"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_type);</highlight></codeline>
<codeline lineno="12750"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_value);</highlight></codeline>
<codeline lineno="12751"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="12752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12754"><highlight class="normal"></highlight></codeline>
<codeline lineno="12755"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetException<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12756"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx__GetException(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)</highlight></codeline>
<codeline lineno="12758"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_GetException(PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)</highlight></codeline>
<codeline lineno="12760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12762"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*local_type,<sp/>*local_value,<sp/>*local_tb;</highlight></codeline>
<codeline lineno="12763"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12764"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="12765"><highlight class="normal"><sp/><sp/><sp/><sp/>local_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="12766"><highlight class="normal"><sp/><sp/><sp/><sp/>local_value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="12767"><highlight class="normal"><sp/><sp/><sp/><sp/>local_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="12768"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12769"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12770"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12771"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12772"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;local_type,<sp/>&amp;local_value,<sp/>&amp;local_tb);</highlight></codeline>
<codeline lineno="12773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12774"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_NormalizeException(&amp;local_type,<sp/>&amp;local_value,<sp/>&amp;local_tb);</highlight></codeline>
<codeline lineno="12775"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tstate-&gt;curexc_type))</highlight></codeline>
<codeline lineno="12777"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))</highlight></codeline>
<codeline lineno="12779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12781"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_tb)<sp/>{</highlight></codeline>
<codeline lineno="12783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyException_SetTraceback(local_value,<sp/>local_tb)<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="12784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="12785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12786"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12787"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(local_tb);</highlight></codeline>
<codeline lineno="12788"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(local_type);</highlight></codeline>
<codeline lineno="12789"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(local_value);</highlight></codeline>
<codeline lineno="12790"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>local_type;</highlight></codeline>
<codeline lineno="12791"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>local_value;</highlight></codeline>
<codeline lineno="12792"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>local_tb;</highlight></codeline>
<codeline lineno="12793"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12794"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_USE_EXC_INFO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyErr_StackItem<sp/>*exc_info<sp/>=<sp/>tstate-&gt;exc_info;</highlight></codeline>
<codeline lineno="12797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>exc_info-&gt;exc_type;</highlight></codeline>
<codeline lineno="12798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>exc_info-&gt;exc_value;</highlight></codeline>
<codeline lineno="12799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>exc_info-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_info-&gt;exc_type<sp/>=<sp/>local_type;</highlight></codeline>
<codeline lineno="12801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_info-&gt;exc_value<sp/>=<sp/>local_value;</highlight></codeline>
<codeline lineno="12802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_info-&gt;exc_traceback<sp/>=<sp/>local_tb;</highlight></codeline>
<codeline lineno="12803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12804"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12805"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;exc_type;</highlight></codeline>
<codeline lineno="12806"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;exc_value;</highlight></codeline>
<codeline lineno="12807"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="12808"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_type<sp/>=<sp/>local_type;</highlight></codeline>
<codeline lineno="12809"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_value<sp/>=<sp/>local_value;</highlight></codeline>
<codeline lineno="12810"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;exc_traceback<sp/>=<sp/>local_tb;</highlight></codeline>
<codeline lineno="12811"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12812"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_type);</highlight></codeline>
<codeline lineno="12813"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_value);</highlight></codeline>
<codeline lineno="12814"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="12815"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12816"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetExcInfo(local_type,<sp/>local_value,<sp/>local_tb);</highlight></codeline>
<codeline lineno="12817"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="12819"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="12820"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12821"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12822"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12823"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(local_type);</highlight></codeline>
<codeline lineno="12824"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(local_value);</highlight></codeline>
<codeline lineno="12825"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(local_tb);</highlight></codeline>
<codeline lineno="12826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12828"><highlight class="normal"></highlight></codeline>
<codeline lineno="12829"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyErrFetchRestore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12830"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12831"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestoreInState(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="12832"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="12833"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="12834"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="12835"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="12836"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="12837"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="12838"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="12839"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_type);</highlight></codeline>
<codeline lineno="12840"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_value);</highlight></codeline>
<codeline lineno="12841"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="12842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetchInState(PyThreadState<sp/>*tstate,<sp/>PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)<sp/>{</highlight></codeline>
<codeline lineno="12844"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="12845"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="12846"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="12847"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12848"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12849"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12852"><highlight class="normal"></highlight></codeline>
<codeline lineno="12853"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>None<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseUnboundLocalError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varname)<sp/>{</highlight></codeline>
<codeline lineno="12855"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_UnboundLocalError,<sp/></highlight><highlight class="stringliteral">&quot;local<sp/>variable<sp/>&apos;%s&apos;<sp/>referenced<sp/>before<sp/>assignment&quot;</highlight><highlight class="normal">,<sp/>varname);</highlight></codeline>
<codeline lineno="12856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12857"><highlight class="normal"></highlight></codeline>
<codeline lineno="12858"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCall2Args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_UNUSED<sp/>PyObject*<sp/>__Pyx_PyObject_Call2Args(PyObject*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>PyObject*<sp/>arg1,<sp/>PyObject*<sp/>arg2)<sp/>{</highlight></codeline>
<codeline lineno="12860"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*args,<sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12861"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_FAST_PYCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFunction_Check(</highlight><highlight class="keyword">function</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="12863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*args[2]<sp/>=<sp/>{arg1,<sp/>arg2};</highlight></codeline>
<codeline lineno="12864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyFunction_FastCall(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>args,<sp/>2);</highlight></codeline>
<codeline lineno="12865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12866"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12867"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_FAST_PYCCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PyFastCFunction_Check(</highlight><highlight class="keyword">function</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="12869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*args[2]<sp/>=<sp/>{arg1,<sp/>arg2};</highlight></codeline>
<codeline lineno="12870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyCFunction_FastCall(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>args,<sp/>2);</highlight></codeline>
<codeline lineno="12871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12872"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12873"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>PyTuple_New(2);</highlight></codeline>
<codeline lineno="12874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!args))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="12875"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(arg1);</highlight></codeline>
<codeline lineno="12876"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(args,<sp/>0,<sp/>arg1);</highlight></codeline>
<codeline lineno="12877"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(arg2);</highlight></codeline>
<codeline lineno="12878"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(args,<sp/>1,<sp/>arg2);</highlight></codeline>
<codeline lineno="12879"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12880"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_Call(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>args,<sp/>NULL);</highlight></codeline>
<codeline lineno="12881"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(args);</highlight></codeline>
<codeline lineno="12882"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12883"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="12884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12886"><highlight class="normal"></highlight></codeline>
<codeline lineno="12887"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BytesEquals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyBytes_Equals(PyObject*<sp/>s1,<sp/>PyObject*<sp/>s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equals)<sp/>{</highlight></codeline>
<codeline lineno="12889"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_RichCompareBool(s1,<sp/>s2,<sp/>equals);</highlight></codeline>
<codeline lineno="12891"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>==<sp/>s2)<sp/>{</highlight></codeline>
<codeline lineno="12893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_EQ);</highlight></codeline>
<codeline lineno="12894"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyBytes_CheckExact(s1)<sp/>&amp;<sp/>PyBytes_CheckExact(s2))<sp/>{</highlight></codeline>
<codeline lineno="12895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ps1,<sp/>*ps2;</highlight></codeline>
<codeline lineno="12896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>length<sp/>=<sp/>PyBytes_GET_SIZE(s1);</highlight></codeline>
<codeline lineno="12897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>!=<sp/>PyBytes_GET_SIZE(s2))</highlight></codeline>
<codeline lineno="12898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="12899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps1<sp/>=<sp/>PyBytes_AS_STRING(s1);</highlight></codeline>
<codeline lineno="12900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps2<sp/>=<sp/>PyBytes_AS_STRING(s2);</highlight></codeline>
<codeline lineno="12901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ps1[0]<sp/>!=<sp/>ps2[0])<sp/>{</highlight></codeline>
<codeline lineno="12902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="12903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="12904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_EQ);</highlight></codeline>
<codeline lineno="12905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12907"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_hash_t<sp/>hash1,<sp/>hash2;</highlight></codeline>
<codeline lineno="12909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash1<sp/>=<sp/>((PyBytesObject*)s1)-&gt;ob_shash;</highlight></codeline>
<codeline lineno="12910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash2<sp/>=<sp/>((PyBytesObject*)s2)-&gt;ob_shash;</highlight></codeline>
<codeline lineno="12911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash1<sp/>!=<sp/>hash2<sp/>&amp;&amp;<sp/>hash1<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>hash2<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="12912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="12913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12914"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>memcmp(ps1,<sp/>ps2,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)length);</highlight></codeline>
<codeline lineno="12916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_EQ)<sp/>?<sp/>(result<sp/>==<sp/>0)<sp/>:<sp/>(result<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="12917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12918"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s1<sp/>==<sp/>Py_None)<sp/>&amp;<sp/>PyBytes_CheckExact(s2))<sp/>{</highlight></codeline>
<codeline lineno="12919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="12920"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s2<sp/>==<sp/>Py_None)<sp/>&amp;<sp/>PyBytes_CheckExact(s1))<sp/>{</highlight></codeline>
<codeline lineno="12921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="12922"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>py_result<sp/>=<sp/>PyObject_RichCompare(s1,<sp/>s2,<sp/>equals);</highlight></codeline>
<codeline lineno="12925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_result)</highlight></codeline>
<codeline lineno="12926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_IsTrue(py_result);</highlight></codeline>
<codeline lineno="12928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_result);</highlight></codeline>
<codeline lineno="12929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12931"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12933"><highlight class="normal"></highlight></codeline>
<codeline lineno="12934"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UnicodeEquals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12935"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyUnicode_Equals(PyObject*<sp/>s1,<sp/>PyObject*<sp/>s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equals)<sp/>{</highlight></codeline>
<codeline lineno="12936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_RichCompareBool(s1,<sp/>s2,<sp/>equals);</highlight></codeline>
<codeline lineno="12938"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12939"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12940"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>owned_ref<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12941"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s1_is_unicode,<sp/>s2_is_unicode;</highlight></codeline>
<codeline lineno="12943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>==<sp/>s2)<sp/>{</highlight></codeline>
<codeline lineno="12944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_eq;</highlight></codeline>
<codeline lineno="12945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12946"><highlight class="normal"><sp/><sp/><sp/><sp/>s1_is_unicode<sp/>=<sp/>PyUnicode_CheckExact(s1);</highlight></codeline>
<codeline lineno="12947"><highlight class="normal"><sp/><sp/><sp/><sp/>s2_is_unicode<sp/>=<sp/>PyUnicode_CheckExact(s2);</highlight></codeline>
<codeline lineno="12948"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s1_is_unicode<sp/>&amp;<sp/>(!s2_is_unicode))<sp/>&amp;&amp;<sp/>PyString_CheckExact(s2))<sp/>{</highlight></codeline>
<codeline lineno="12950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_ref<sp/>=<sp/>PyUnicode_FromObject(s2);</highlight></codeline>
<codeline lineno="12951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!owned_ref))</highlight></codeline>
<codeline lineno="12952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>owned_ref;</highlight></codeline>
<codeline lineno="12954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_is_unicode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="12955"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s2_is_unicode<sp/>&amp;<sp/>(!s1_is_unicode))<sp/>&amp;&amp;<sp/>PyString_CheckExact(s1))<sp/>{</highlight></codeline>
<codeline lineno="12956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_ref<sp/>=<sp/>PyUnicode_FromObject(s1);</highlight></codeline>
<codeline lineno="12957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!owned_ref))</highlight></codeline>
<codeline lineno="12958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>owned_ref;</highlight></codeline>
<codeline lineno="12960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1_is_unicode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="12961"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((!s2_is_unicode)<sp/>&amp;<sp/>(!s1_is_unicode)))<sp/>{</highlight></codeline>
<codeline lineno="12962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyBytes_Equals(s1,<sp/>s2,<sp/>equals);</highlight></codeline>
<codeline lineno="12963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12964"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1_is_unicode<sp/>&amp;<sp/>s2_is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="12966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>length;</highlight></codeline>
<codeline lineno="12967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind;</highlight></codeline>
<codeline lineno="12968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data1,<sp/>*<ref refid="namespacetests_1a92385491a24e8c1a8ab23de255e39c58" kindref="member">data2</ref>;</highlight></codeline>
<codeline lineno="12969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_PyUnicode_READY(s1)<sp/>&lt;<sp/>0)<sp/>||<sp/>unlikely(__Pyx_PyUnicode_READY(s2)<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="12970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="12971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>__Pyx_PyUnicode_GET_LENGTH(s1);</highlight></codeline>
<codeline lineno="12972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>!=<sp/>__Pyx_PyUnicode_GET_LENGTH(s2))<sp/>{</highlight></codeline>
<codeline lineno="12973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="12974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12975"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_UNICODE_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_hash_t<sp/>hash1,<sp/>hash2;</highlight></codeline>
<codeline lineno="12978"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_PEP393_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash1<sp/>=<sp/>((PyASCIIObject*)s1)-&gt;hash;</highlight></codeline>
<codeline lineno="12980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash2<sp/>=<sp/>((PyASCIIObject*)s2)-&gt;hash;</highlight></codeline>
<codeline lineno="12981"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash1<sp/>=<sp/>((PyUnicodeObject*)s1)-&gt;hash;</highlight></codeline>
<codeline lineno="12983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash2<sp/>=<sp/>((PyUnicodeObject*)s2)-&gt;hash;</highlight></codeline>
<codeline lineno="12984"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash1<sp/>!=<sp/>hash2<sp/>&amp;&amp;<sp/>hash1<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>hash2<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="12986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="12987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kind<sp/>=<sp/>__Pyx_PyUnicode_KIND(s1);</highlight></codeline>
<codeline lineno="12991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kind<sp/>!=<sp/>__Pyx_PyUnicode_KIND(s2))<sp/>{</highlight></codeline>
<codeline lineno="12992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="12993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>__Pyx_PyUnicode_DATA(s1);</highlight></codeline>
<codeline lineno="12995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetests_1a92385491a24e8c1a8ab23de255e39c58" kindref="member">data2</ref><sp/>=<sp/>__Pyx_PyUnicode_DATA(s2);</highlight></codeline>
<codeline lineno="12996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PyUnicode_READ(kind,<sp/>data1,<sp/>0)<sp/>!=<sp/>__Pyx_PyUnicode_READ(kind,<sp/><ref refid="namespacetests_1a92385491a24e8c1a8ab23de255e39c58" kindref="member">data2</ref>,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="12997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="12998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="12999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_eq;</highlight></codeline>
<codeline lineno="13000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>memcmp(data1,<sp/><ref refid="namespacetests_1a92385491a24e8c1a8ab23de255e39c58" kindref="member">data2</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(length<sp/>*<sp/>kind));</highlight></codeline>
<codeline lineno="13002"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_ref);</highlight></codeline>
<codeline lineno="13004"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_EQ)<sp/>?<sp/>(result<sp/>==<sp/>0)<sp/>:<sp/>(result<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="13006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13007"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s1<sp/>==<sp/>Py_None)<sp/>&amp;<sp/>s2_is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="13008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="13009"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s2<sp/>==<sp/>Py_None)<sp/>&amp;<sp/>s1_is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="13010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>return_ne;</highlight></codeline>
<codeline lineno="13011"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>py_result<sp/>=<sp/>PyObject_RichCompare(s1,<sp/>s2,<sp/>equals);</highlight></codeline>
<codeline lineno="13014"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_ref);</highlight></codeline>
<codeline lineno="13016"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_result)</highlight></codeline>
<codeline lineno="13018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_IsTrue(py_result);</highlight></codeline>
<codeline lineno="13020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_result);</highlight></codeline>
<codeline lineno="13021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13023"><highlight class="normal">return_eq:</highlight></codeline>
<codeline lineno="13024"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13025"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(owned_ref);</highlight></codeline>
<codeline lineno="13026"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_EQ);</highlight></codeline>
<codeline lineno="13028"><highlight class="normal">return_ne:</highlight></codeline>
<codeline lineno="13029"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13030"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(owned_ref);</highlight></codeline>
<codeline lineno="13031"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(equals<sp/>==<sp/>Py_NE);</highlight></codeline>
<codeline lineno="13033"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13035"><highlight class="normal"></highlight></codeline>
<codeline lineno="13036"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetItemInt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13037"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetItemInt_Generic(PyObject<sp/>*o,<sp/>PyObject*<sp/><ref refid="namespacetraitement__base__sirene_1a8bfe8f63a1abb11de330f2184461ec6b" kindref="member">j</ref>)<sp/>{</highlight></codeline>
<codeline lineno="13038"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="13039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetraitement__base__sirene_1a8bfe8f63a1abb11de330f2184461ec6b" kindref="member">j</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13040"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyObject_GetItem(o,<sp/><ref refid="namespacetraitement__base__sirene_1a8bfe8f63a1abb11de330f2184461ec6b" kindref="member">j</ref>);</highlight></codeline>
<codeline lineno="13041"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetraitement__base__sirene_1a8bfe8f63a1abb11de330f2184461ec6b" kindref="member">j</ref>);</highlight></codeline>
<codeline lineno="13042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="13043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13044"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_List_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,</highlight></codeline>
<codeline lineno="13045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,</highlight></codeline>
<codeline lineno="13046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck)<sp/>{</highlight></codeline>
<codeline lineno="13047"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13048"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>wrapped_i<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="13049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wraparound<sp/>&amp;<sp/>unlikely(i<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="13050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapped_i<sp/>+=<sp/>PyList_GET_SIZE(o);</highlight></codeline>
<codeline lineno="13051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!boundscheck)<sp/>||<sp/>likely(__Pyx_is_valid_index(wrapped_i,<sp/>PyList_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="13053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(o,<sp/>wrapped_i);</highlight></codeline>
<codeline lineno="13054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="13055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="13056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(o,<sp/>PyInt_FromSsize_t(i));</highlight></codeline>
<codeline lineno="13058"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySequence_GetItem(o,<sp/>i);</highlight></codeline>
<codeline lineno="13060"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Tuple_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,</highlight></codeline>
<codeline lineno="13063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,</highlight></codeline>
<codeline lineno="13064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck)<sp/>{</highlight></codeline>
<codeline lineno="13065"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13066"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>wrapped_i<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="13067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wraparound<sp/>&amp;<sp/>unlikely(i<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="13068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapped_i<sp/>+=<sp/>PyTuple_GET_SIZE(o);</highlight></codeline>
<codeline lineno="13069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!boundscheck)<sp/>||<sp/>likely(__Pyx_is_valid_index(wrapped_i,<sp/>PyTuple_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="13071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(o,<sp/>wrapped_i);</highlight></codeline>
<codeline lineno="13072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="13073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="13074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(o,<sp/>PyInt_FromSsize_t(i));</highlight></codeline>
<codeline lineno="13076"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySequence_GetItem(o,<sp/>i);</highlight></codeline>
<codeline lineno="13078"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13080"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_list,</highlight></codeline>
<codeline lineno="13081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound,</highlight></codeline>
<codeline lineno="13082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_NCP_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundscheck)<sp/>{</highlight></codeline>
<codeline lineno="13083"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS<sp/>&amp;&amp;<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_list<sp/>||<sp/>PyList_CheckExact(o))<sp/>{</highlight></codeline>
<codeline lineno="13085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n<sp/>=<sp/>((!wraparound)<sp/>|<sp/>likely(i<sp/>&gt;=<sp/>0))<sp/>?<sp/>i<sp/>:<sp/>i<sp/>+<sp/>PyList_GET_SIZE(o);</highlight></codeline>
<codeline lineno="13086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!boundscheck)<sp/>||<sp/>(likely(__Pyx_is_valid_index(n,<sp/>PyList_GET_SIZE(o)))))<sp/>{</highlight></codeline>
<codeline lineno="13087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(o,<sp/>n);</highlight></codeline>
<codeline lineno="13088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="13089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="13090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_CheckExact(o))<sp/>{</highlight></codeline>
<codeline lineno="13093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n<sp/>=<sp/>((!wraparound)<sp/>|<sp/>likely(i<sp/>&gt;=<sp/>0))<sp/>?<sp/>i<sp/>:<sp/>i<sp/>+<sp/>PyTuple_GET_SIZE(o);</highlight></codeline>
<codeline lineno="13094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!boundscheck)<sp/>||<sp/>likely(__Pyx_is_valid_index(n,<sp/>PyTuple_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="13095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(o,<sp/>n);</highlight></codeline>
<codeline lineno="13096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="13097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="13098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13099"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PySequenceMethods<sp/>*m<sp/>=<sp/>Py_TYPE(o)-&gt;tp_as_sequence;</highlight></codeline>
<codeline lineno="13101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(m<sp/>&amp;&amp;<sp/>m-&gt;sq_item))<sp/>{</highlight></codeline>
<codeline lineno="13102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wraparound<sp/>&amp;&amp;<sp/>unlikely(i<sp/>&lt;<sp/>0)<sp/>&amp;&amp;<sp/>likely(m-&gt;sq_length))<sp/>{</highlight></codeline>
<codeline lineno="13103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>l<sp/>=<sp/>m-&gt;sq_length(o);</highlight></codeline>
<codeline lineno="13104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(l<sp/>&gt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="13105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>l;</highlight></codeline>
<codeline lineno="13106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_ExceptionMatches(PyExc_OverflowError))</highlight></codeline>
<codeline lineno="13108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="13110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;sq_item(o,<sp/>i);</highlight></codeline>
<codeline lineno="13113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_list<sp/>||<sp/>PySequence_Check(o))<sp/>{</highlight></codeline>
<codeline lineno="13117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySequence_GetItem(o,<sp/>i);</highlight></codeline>
<codeline lineno="13118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(o,<sp/>PyInt_FromSsize_t(i));</highlight></codeline>
<codeline lineno="13121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13122"><highlight class="normal"></highlight></codeline>
<codeline lineno="13123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ObjectGetItem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_PyObject_GetIndex(PyObject<sp/>*obj,<sp/>PyObject*<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="13126"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*runerr;</highlight></codeline>
<codeline lineno="13127"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>key_value;</highlight></codeline>
<codeline lineno="13128"><highlight class="normal"><sp/><sp/><sp/><sp/>PySequenceMethods<sp/>*m<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_as_sequence;</highlight></codeline>
<codeline lineno="13129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!(m<sp/>&amp;&amp;<sp/>m-&gt;sq_item)))<sp/>{</highlight></codeline>
<codeline lineno="13130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;&apos;%.200s&apos;<sp/>object<sp/>is<sp/>not<sp/>subscriptable&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(obj)-&gt;tp_name);</highlight></codeline>
<codeline lineno="13131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13133"><highlight class="normal"><sp/><sp/><sp/><sp/>key_value<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(index);</highlight></codeline>
<codeline lineno="13134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(key_value<sp/>!=<sp/>-1<sp/>||<sp/>!(runerr<sp/>=<sp/>PyErr_Occurred())))<sp/>{</highlight></codeline>
<codeline lineno="13135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Fast(obj,<sp/>key_value,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="13136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_GivenExceptionMatches(runerr,<sp/>PyExc_OverflowError))<sp/>{</highlight></codeline>
<codeline lineno="13138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="13139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_IndexError,<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>fit<sp/>&apos;%.200s&apos;<sp/>into<sp/>an<sp/>index-sized<sp/>integer&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(index)-&gt;tp_name);</highlight></codeline>
<codeline lineno="13140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_PyObject_GetItem(PyObject<sp/>*obj,<sp/>PyObject*<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="13144"><highlight class="normal"><sp/><sp/><sp/><sp/>PyMappingMethods<sp/>*m<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_as_mapping;</highlight></codeline>
<codeline lineno="13145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(m<sp/>&amp;&amp;<sp/>m-&gt;mp_subscript))<sp/>{</highlight></codeline>
<codeline lineno="13146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;mp_subscript(obj,<sp/>key);</highlight></codeline>
<codeline lineno="13147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetIndex(obj,<sp/>key);</highlight></codeline>
<codeline lineno="13149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13151"><highlight class="normal"></highlight></codeline>
<codeline lineno="13152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseTooManyValuesToUnpack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13153"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseTooManyValuesError(Py_ssize_t<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="13154"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_ValueError,</highlight></codeline>
<codeline lineno="13155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>values<sp/>to<sp/>unpack<sp/>(expected<sp/>%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d)&quot;</highlight><highlight class="normal">,<sp/>expected);</highlight></codeline>
<codeline lineno="13156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13157"><highlight class="normal"></highlight></codeline>
<codeline lineno="13158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseNeedMoreValuesToUnpack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseNeedMoreValuesError(Py_ssize_t<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="13160"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_ValueError,</highlight></codeline>
<codeline lineno="13161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;need<sp/>more<sp/>than<sp/>%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>value%.1s<sp/>to<sp/>unpack&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,<sp/>(index<sp/>==<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13164"><highlight class="normal"></highlight></codeline>
<codeline lineno="13165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IterFinish<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IterFinish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="13167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13168"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>__Pyx_PyThreadState_Current;</highlight></codeline>
<codeline lineno="13169"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>exc_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="13170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(exc_type))<sp/>{</highlight></codeline>
<codeline lineno="13171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyExc_StopIteration)))<sp/>{</highlight></codeline>
<codeline lineno="13172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*exc_value,<sp/>*exc_tb;</highlight></codeline>
<codeline lineno="13173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="13174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="13175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(exc_type);</highlight></codeline>
<codeline lineno="13179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(exc_value);</highlight></codeline>
<codeline lineno="13180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(exc_tb);</highlight></codeline>
<codeline lineno="13181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13187"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="13189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyErr_ExceptionMatches(PyExc_StopIteration)))<sp/>{</highlight></codeline>
<codeline lineno="13190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="13191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13199"><highlight class="normal"></highlight></codeline>
<codeline lineno="13200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UnpackItemEndCheck<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IternextUnpackEndCheck(PyObject<sp/>*retval,<sp/>Py_ssize_t<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="13202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(retval))<sp/>{</highlight></codeline>
<codeline lineno="13203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(retval);</highlight></codeline>
<codeline lineno="13204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseTooManyValuesError(expected);</highlight></codeline>
<codeline lineno="13205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_IterFinish();</highlight></codeline>
<codeline lineno="13208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13211"><highlight class="normal"></highlight></codeline>
<codeline lineno="13212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyIntBinop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13213"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyInt_AddObjC(PyObject<sp/>*op1,<sp/>PyObject<sp/>*op2,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>intval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inplace,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zerodivision_check)<sp/>{</highlight></codeline>
<codeline lineno="13215"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)inplace;</highlight></codeline>
<codeline lineno="13216"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)zerodivision_check;</highlight></codeline>
<codeline lineno="13217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(op1)))<sp/>{</highlight></codeline>
<codeline lineno="13219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>intval;</highlight></codeline>
<codeline lineno="13220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="13221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>PyInt_AS_LONG(op1);</highlight></codeline>
<codeline lineno="13222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>=<sp/>(long)((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="13223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>^<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>)<sp/>&gt;=<sp/>0<sp/>||<sp/>(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>^b)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="13224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="13225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_Type.tp_as_number-&gt;nb_add(op1,<sp/>op2);</highlight></codeline>
<codeline lineno="13226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13227"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(op1)))<sp/>{</highlight></codeline>
<codeline lineno="13230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>intval;</highlight></codeline>
<codeline lineno="13231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="13232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>llb<sp/>=<sp/>intval;</highlight></codeline>
<codeline lineno="13234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PY_LONG_LONG<sp/>lla,<sp/>llx;</highlight></codeline>
<codeline lineno="13235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)op1)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="13237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>Py_SIZE(op1);</highlight></codeline>
<codeline lineno="13238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_sst_abs(size)<sp/>&lt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="13239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>likely(size)<sp/>?<sp/>digits[0]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="13240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>-1)<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>-<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="13241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(size)<sp/>{</highlight></codeline>
<codeline lineno="13243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-2:</highlight></codeline>
<codeline lineno="13244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>-(long)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="13246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>-(PY_LONG_LONG)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="13255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>(long)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[0]));</highlight></codeline>
<codeline lineno="13257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>(PY_LONG_LONG)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-3:</highlight></codeline>
<codeline lineno="13266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>-(long)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="13268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13269"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>-(PY_LONG_LONG)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="13277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>(long)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="13279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>(PY_LONG_LONG)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-4:</highlight></codeline>
<codeline lineno="13288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>-(long)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[0]));</highlight></codeline>
<codeline lineno="13290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13291"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>-(PY_LONG_LONG)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="13299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>(long)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)digits[0]));</highlight></codeline>
<codeline lineno="13301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="13304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lla<sp/>=<sp/>(PY_LONG_LONG)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)digits[0]));</highlight></codeline>
<codeline lineno="13305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>long_long;</highlight></codeline>
<codeline lineno="13306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_FALLTHROUGH;</highlight></codeline>
<codeline lineno="13309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_Type.tp_as_number-&gt;nb_add(op1,<sp/>op2);</highlight></codeline>
<codeline lineno="13310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>=<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="13313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="13314"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long_long:</highlight></codeline>
<codeline lineno="13316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llx<sp/>=<sp/>lla<sp/>+<sp/>llb;</highlight></codeline>
<codeline lineno="13317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong(llx);</highlight></codeline>
<codeline lineno="13318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFloat_CheckExact(op1))<sp/>{</highlight></codeline>
<codeline lineno="13324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>intval;</highlight></codeline>
<codeline lineno="13325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/>PyFloat_AS_DOUBLE(op1);</highlight></codeline>
<codeline lineno="13326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFPE_START_PROTECT(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL)</highlight></codeline>
<codeline lineno="13328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>((double)<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>)<sp/>+<sp/>(double)b;</highlight></codeline>
<codeline lineno="13329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFPE_END_PROTECT(result)</highlight></codeline>
<codeline lineno="13330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyFloat_FromDouble(result);</highlight></codeline>
<codeline lineno="13331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(inplace<sp/>?<sp/>PyNumber_InPlaceAdd<sp/>:<sp/>PyNumber_Add)(op1,<sp/>op2);</highlight></codeline>
<codeline lineno="13333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13335"><highlight class="normal"></highlight></codeline>
<codeline lineno="13336"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyErrExceptionMatches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13337"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_FAST_THREAD_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_ExceptionMatchesTuple(PyObject<sp/>*exc_type,<sp/>PyObject<sp/>*tuple)<sp/>{</highlight></codeline>
<codeline lineno="13339"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="13340"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>PyTuple_GET_SIZE(tuple);</highlight></codeline>
<codeline lineno="13341"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="13343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type<sp/>==<sp/>PyTuple_GET_ITEM(tuple,<sp/>i))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="13344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="13347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>PyTuple_GET_ITEM(tuple,<sp/>i)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="13348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13351"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_ExceptionMatchesInState(PyThreadState*<sp/>tstate,<sp/>PyObject*<sp/>err)<sp/>{</highlight></codeline>
<codeline lineno="13352"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*exc_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="13353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type<sp/>==<sp/>err)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="13354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!exc_type))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyTuple_Check(err)))</highlight></codeline>
<codeline lineno="13356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyErr_ExceptionMatchesTuple(exc_type,<sp/>err);</highlight></codeline>
<codeline lineno="13357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatches(exc_type,<sp/>err);</highlight></codeline>
<codeline lineno="13358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13360"><highlight class="normal"></highlight></codeline>
<codeline lineno="13361"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetAttr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetAttr(PyObject<sp/>*o,<sp/>PyObject<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="13363"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13364"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyUnicode_Check(n)))</highlight></codeline>
<codeline lineno="13366"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyString_Check(n)))</highlight></codeline>
<codeline lineno="13368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetAttrStr(o,<sp/>n);</highlight></codeline>
<codeline lineno="13370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttr(o,<sp/>n);</highlight></codeline>
<codeline lineno="13372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13373"><highlight class="normal"></highlight></codeline>
<codeline lineno="13374"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetAttr3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetAttr3Default(PyObject<sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="13376"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="13377"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="13378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))</highlight></codeline>
<codeline lineno="13379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13380"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyErr_Clear();</highlight></codeline>
<codeline lineno="13381"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(d);</highlight></codeline>
<codeline lineno="13382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="13383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13384"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetAttr3(PyObject<sp/>*o,<sp/>PyObject<sp/>*n,<sp/>PyObject<sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="13385"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>__Pyx_GetAttr(o,<sp/>n);</highlight></codeline>
<codeline lineno="13386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(likely(r))<sp/>?<sp/>r<sp/>:<sp/>__Pyx_GetAttr3Default(d);</highlight></codeline>
<codeline lineno="13387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13388"><highlight class="normal"></highlight></codeline>
<codeline lineno="13389"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ArgTypeTest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx__ArgTypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact)</highlight></codeline>
<codeline lineno="13391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!type))<sp/>{</highlight></codeline>
<codeline lineno="13393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_SystemError,<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>type<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact)<sp/>{</highlight></codeline>
<codeline lineno="13397"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>==<sp/>&amp;PyBaseString_Type)<sp/>&amp;&amp;<sp/>likely(__Pyx_PyBaseString_CheckExact(obj)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="13399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_TypeCheck(obj,<sp/>type)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="13403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13404"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>&apos;%.200s&apos;<sp/>has<sp/>incorrect<sp/>type<sp/>(expected<sp/>%.200s,<sp/>got<sp/>%.200s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>type-&gt;tp_name,<sp/>Py_TYPE(obj)-&gt;tp_name);</highlight></codeline>
<codeline lineno="13407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13409"><highlight class="normal"></highlight></codeline>
<codeline lineno="13410"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RaiseException<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13411"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb,</highlight></codeline>
<codeline lineno="13413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*cause)<sp/>{</highlight></codeline>
<codeline lineno="13414"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="13415"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(type);</highlight></codeline>
<codeline lineno="13416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value<sp/>||<sp/>value<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="13417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tb<sp/>||<sp/>tb<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="13421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(tb);</highlight></codeline>
<codeline lineno="13424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyTraceBack_Check(tb))<sp/>{</highlight></codeline>
<codeline lineno="13425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>arg<sp/>3<sp/>must<sp/>be<sp/>a<sp/>traceback<sp/>or<sp/>None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="13428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="13431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/>{</highlight></codeline>
<codeline lineno="13433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="13434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_NormalizeException(&amp;type,<sp/>&amp;value,<sp/>&amp;tb);</highlight></codeline>
<codeline lineno="13438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="13440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;instance<sp/>exception<sp/>may<sp/>not<sp/>have<sp/>a<sp/>separate<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="13443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="13445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(type);</highlight></codeline>
<codeline lineno="13446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="13447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_IsSubtype((PyTypeObject<sp/>*)type,<sp/>(PyTypeObject<sp/>*)PyExc_BaseException))<sp/>{</highlight></codeline>
<codeline lineno="13448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>class<sp/>must<sp/>be<sp/>a<sp/>subclass<sp/>of<sp/>BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="13451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13453"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="13454"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(type,<sp/>value,<sp/>tb);</highlight></codeline>
<codeline lineno="13455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13456"><highlight class="normal">raise_error:</highlight></codeline>
<codeline lineno="13457"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(value);</highlight></codeline>
<codeline lineno="13458"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(type);</highlight></codeline>
<codeline lineno="13459"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tb);</highlight></codeline>
<codeline lineno="13460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13462"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb,<sp/>PyObject<sp/>*cause)<sp/>{</highlight></codeline>
<codeline lineno="13464"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>owned_instance<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="13466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13467"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>&amp;&amp;<sp/>!PyTraceBack_Check(tb))<sp/>{</highlight></codeline>
<codeline lineno="13468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>arg<sp/>3<sp/>must<sp/>be<sp/>a<sp/>traceback<sp/>or<sp/>None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="13473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyExceptionInstance_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="13475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="13476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;instance<sp/>exception<sp/>may<sp/>not<sp/>have<sp/>a<sp/>separate<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="13481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(value);</highlight></codeline>
<codeline lineno="13482"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyExceptionClass_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="13483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*instance_class<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;&amp;<sp/>PyExceptionInstance_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance_class<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(value);</highlight></codeline>
<codeline lineno="13486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance_class<sp/>!=<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="13487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_subclass<sp/>=<sp/>PyObject_IsSubclass(instance_class,<sp/>type);</highlight></codeline>
<codeline lineno="13488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_subclass)<sp/>{</highlight></codeline>
<codeline lineno="13489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance_class<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(is_subclass<sp/>==<sp/>-1))<sp/>{</highlight></codeline>
<codeline lineno="13491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>instance_class;</highlight></codeline>
<codeline lineno="13494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!instance_class)<sp/>{</highlight></codeline>
<codeline lineno="13498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*args;</highlight></codeline>
<codeline lineno="13499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="13500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>PyTuple_New(0);</highlight></codeline>
<codeline lineno="13501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>PyTuple_Pack(1,<sp/>value);</highlight></codeline>
<codeline lineno="13506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args)</highlight></codeline>
<codeline lineno="13507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_instance<sp/>=<sp/>PyObject_Call(type,<sp/>args,<sp/>NULL);</highlight></codeline>
<codeline lineno="13509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(args);</highlight></codeline>
<codeline lineno="13510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owned_instance)</highlight></codeline>
<codeline lineno="13511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>owned_instance;</highlight></codeline>
<codeline lineno="13513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyExceptionInstance_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>%R<sp/>should<sp/>have<sp/>returned<sp/>an<sp/>instance<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseException,<sp/>not<sp/>%R&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/>Py_TYPE(value));</highlight></codeline>
<codeline lineno="13518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13521"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>class<sp/>must<sp/>be<sp/>a<sp/>subclass<sp/>of<sp/>BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cause)<sp/>{</highlight></codeline>
<codeline lineno="13527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*fixed_cause;</highlight></codeline>
<codeline lineno="13528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cause<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="13529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed_cause<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyExceptionClass_Check(cause))<sp/>{</highlight></codeline>
<codeline lineno="13531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed_cause<sp/>=<sp/>PyObject_CallObject(cause,<sp/>NULL);</highlight></codeline>
<codeline lineno="13532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixed_cause<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="13533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyExceptionInstance_Check(cause))<sp/>{</highlight></codeline>
<codeline lineno="13535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed_cause<sp/>=<sp/>cause;</highlight></codeline>
<codeline lineno="13536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(fixed_cause);</highlight></codeline>
<codeline lineno="13537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exception<sp/>causes<sp/>must<sp/>derive<sp/>from<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyException_SetCause(value,<sp/>fixed_cause);</highlight></codeline>
<codeline lineno="13544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13545"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetObject(type,<sp/>value);</highlight></codeline>
<codeline lineno="13546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb)<sp/>{</highlight></codeline>
<codeline lineno="13547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="13549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;tmp_type,<sp/>&amp;tmp_value,<sp/>&amp;tmp_tb);</highlight></codeline>
<codeline lineno="13550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(tb);</highlight></codeline>
<codeline lineno="13551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Restore(tmp_type,<sp/>tmp_value,<sp/>tb);</highlight></codeline>
<codeline lineno="13552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="13553"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>__Pyx_PyThreadState_Current;</highlight></codeline>
<codeline lineno="13555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>tmp_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="13556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>!=<sp/>tmp_tb)<sp/>{</highlight></codeline>
<codeline lineno="13557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(tb);</highlight></codeline>
<codeline lineno="13558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="13559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="13560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13563"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="13564"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(owned_instance);</highlight></codeline>
<codeline lineno="13565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13567"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13568"><highlight class="normal"></highlight></codeline>
<codeline lineno="13569"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WriteUnraisableException<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_WriteUnraisable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clineno,</highlight></codeline>
<codeline lineno="13571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="13572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_traceback,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nogil)<sp/>{</highlight></codeline>
<codeline lineno="13573"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*old_exc,<sp/>*old_val,<sp/>*old_tb;</highlight></codeline>
<codeline lineno="13574"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ctx;</highlight></codeline>
<codeline lineno="13575"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="13576"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13577"><highlight class="normal"><sp/><sp/><sp/><sp/>PyGILState_STATE<sp/>state;</highlight></codeline>
<codeline lineno="13578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nogil)</highlight></codeline>
<codeline lineno="13579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>PyGILState_Ensure();</highlight></codeline>
<codeline lineno="13580"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>(PyGILState_STATE)-1;</highlight></codeline>
<codeline lineno="13582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13584"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="13585"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrFetch(&amp;old_exc,<sp/>&amp;old_val,<sp/>&amp;old_tb);</highlight></codeline>
<codeline lineno="13586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full_traceback)<sp/>{</highlight></codeline>
<codeline lineno="13587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XINCREF(old_exc);</highlight></codeline>
<codeline lineno="13588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XINCREF(old_val);</highlight></codeline>
<codeline lineno="13589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XINCREF(old_tb);</highlight></codeline>
<codeline lineno="13590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(old_exc,<sp/>old_val,<sp/>old_tb);</highlight></codeline>
<codeline lineno="13591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_PrintEx(1);</highlight></codeline>
<codeline lineno="13592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13593"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13594"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>PyString_FromString(name);</highlight></codeline>
<codeline lineno="13595"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13596"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>PyUnicode_FromString(name);</highlight></codeline>
<codeline lineno="13597"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13598"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(old_exc,<sp/>old_val,<sp/>old_tb);</highlight></codeline>
<codeline lineno="13599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx)<sp/>{</highlight></codeline>
<codeline lineno="13600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_WriteUnraisable(Py_None);</highlight></codeline>
<codeline lineno="13601"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_WriteUnraisable(ctx);</highlight></codeline>
<codeline lineno="13603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(ctx);</highlight></codeline>
<codeline lineno="13604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13605"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nogil)</highlight></codeline>
<codeline lineno="13607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(state);</highlight></codeline>
<codeline lineno="13608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13610"><highlight class="normal"></highlight></codeline>
<codeline lineno="13611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectSetAttrStr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13612"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_SetAttrStr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name,<sp/>PyObject*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="13614"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject*<sp/>tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="13615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(tp-&gt;tp_setattro))</highlight></codeline>
<codeline lineno="13616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp-&gt;tp_setattro(obj,<sp/>attr_name,<sp/>value);</highlight></codeline>
<codeline lineno="13617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(tp-&gt;tp_setattr))</highlight></codeline>
<codeline lineno="13619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp-&gt;tp_setattr(obj,<sp/>PyString_AS_STRING(attr_name),<sp/>value);</highlight></codeline>
<codeline lineno="13620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetAttr(obj,<sp/>attr_name,<sp/>value);</highlight></codeline>
<codeline lineno="13622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13624"><highlight class="normal"></highlight></codeline>
<codeline lineno="13625"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FetchCommonType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject*<sp/>__Pyx_FetchCommonType(PyTypeObject*<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="13627"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>fake_module;</highlight></codeline>
<codeline lineno="13628"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject*<sp/>cached_type<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13629"><highlight class="normal"><sp/><sp/><sp/><sp/>fake_module<sp/>=<sp/>PyImport_AddModule((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;_cython_&quot;</highlight><highlight class="normal"><sp/>CYTHON_ABI);</highlight></codeline>
<codeline lineno="13630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fake_module)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13631"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(fake_module);</highlight></codeline>
<codeline lineno="13632"><highlight class="normal"><sp/><sp/><sp/><sp/>cached_type<sp/>=<sp/>(PyTypeObject*)<sp/>PyObject_GetAttrString(fake_module,<sp/>type-&gt;tp_name);</highlight></codeline>
<codeline lineno="13633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cached_type)<sp/>{</highlight></codeline>
<codeline lineno="13634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_Check((PyObject*)cached_type))<sp/>{</highlight></codeline>
<codeline lineno="13635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shared<sp/>Cython<sp/>type<sp/>%.200s<sp/>is<sp/>not<sp/>a<sp/>type<sp/>object&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type-&gt;tp_name);</highlight></codeline>
<codeline lineno="13638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cached_type-&gt;tp_basicsize<sp/>!=<sp/>type-&gt;tp_basicsize)<sp/>{</highlight></codeline>
<codeline lineno="13641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shared<sp/>Cython<sp/>type<sp/>%.200s<sp/>has<sp/>the<sp/>wrong<sp/>size,<sp/>try<sp/>recompiling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type-&gt;tp_name);</highlight></codeline>
<codeline lineno="13644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13646"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_ExceptionMatches(PyExc_AttributeError))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="13649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(type)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(fake_module,<sp/>type-&gt;tp_name,<sp/>(PyObject*)<sp/>type)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="13651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="13652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="13653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cached_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="13654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13655"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="13656"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(fake_module);</highlight></codeline>
<codeline lineno="13657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cached_type;</highlight></codeline>
<codeline lineno="13658"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="13659"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(cached_type);</highlight></codeline>
<codeline lineno="13660"><highlight class="normal"><sp/><sp/><sp/><sp/>cached_type<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="13662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13663"><highlight class="normal"></highlight></codeline>
<codeline lineno="13664"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CythonFunctionShared<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13665"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;structmember.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13667"><highlight class="normal">__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*closure)</highlight></codeline>
<codeline lineno="13668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_doc<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="13670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;func.m_ml-&gt;ml_doc)<sp/>{</highlight></codeline>
<codeline lineno="13671"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_doc<sp/>=<sp/>PyUnicode_FromString(op-&gt;func.m_ml-&gt;ml_doc);</highlight></codeline>
<codeline lineno="13673"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_doc<sp/>=<sp/>PyString_FromString(op-&gt;func.m_ml-&gt;ml_doc);</highlight></codeline>
<codeline lineno="13675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_doc<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="13677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="13680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_None;</highlight></codeline>
<codeline lineno="13681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13683"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_doc);</highlight></codeline>
<codeline lineno="13684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;func_doc;</highlight></codeline>
<codeline lineno="13685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13687"><highlight class="normal">__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject<sp/>*value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13689"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>op-&gt;func_doc;</highlight></codeline>
<codeline lineno="13690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="13691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13693"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13694"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_doc<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13695"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13699"><highlight class="normal">__Pyx_CyFunction_get_name(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_name<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="13702"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_name<sp/>=<sp/>PyUnicode_InternFromString(op-&gt;func.m_ml-&gt;ml_name);</highlight></codeline>
<codeline lineno="13704"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_name<sp/>=<sp/>PyString_InternFromString(op-&gt;func.m_ml-&gt;ml_name);</highlight></codeline>
<codeline lineno="13706"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_name<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="13708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13710"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_name);</highlight></codeline>
<codeline lineno="13711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;func_name;</highlight></codeline>
<codeline lineno="13712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13714"><highlight class="normal">__Pyx_CyFunction_set_name(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject<sp/>*value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13716"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp;</highlight></codeline>
<codeline lineno="13717"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value<sp/>==<sp/>NULL<sp/>||<sp/>!PyUnicode_Check(value)))</highlight></codeline>
<codeline lineno="13719"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value<sp/>==<sp/>NULL<sp/>||<sp/>!PyString_Check(value)))</highlight></codeline>
<codeline lineno="13721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__name__<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>string<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13727"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;func_name;</highlight></codeline>
<codeline lineno="13728"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13729"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_name<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13730"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13734"><highlight class="normal">__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13736"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_qualname);</highlight></codeline>
<codeline lineno="13737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;func_qualname;</highlight></codeline>
<codeline lineno="13738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13740"><highlight class="normal">__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject<sp/>*value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13742"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp;</highlight></codeline>
<codeline lineno="13743"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value<sp/>==<sp/>NULL<sp/>||<sp/>!PyUnicode_Check(value)))</highlight></codeline>
<codeline lineno="13745"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value<sp/>==<sp/>NULL<sp/>||<sp/>!PyString_Check(value)))</highlight></codeline>
<codeline lineno="13747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__qualname__<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>string<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13753"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;func_qualname;</highlight></codeline>
<codeline lineno="13754"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13755"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_qualname<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13756"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13760"><highlight class="normal">__Pyx_CyFunction_get_self(__pyx_CyFunctionObject<sp/>*m,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*closure)</highlight></codeline>
<codeline lineno="13761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13762"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>m-&gt;func_closure;</highlight></codeline>
<codeline lineno="13764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="13765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13766"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13769"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13770"><highlight class="normal">__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_dict<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="13773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_dict<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="13774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op-&gt;func_dict<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="13775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13777"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_dict);</highlight></codeline>
<codeline lineno="13778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;func_dict;</highlight></codeline>
<codeline lineno="13779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13780"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13781"><highlight class="normal">__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject<sp/>*value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13783"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp;</highlight></codeline>
<codeline lineno="13784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="13785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function&apos;s<sp/>dictionary<sp/>may<sp/>not<sp/>be<sp/>deleted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyDict_Check(value)))<sp/>{</highlight></codeline>
<codeline lineno="13790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>function&apos;s<sp/>dictionary<sp/>to<sp/>a<sp/>non-dict&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13794"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;func_dict;</highlight></codeline>
<codeline lineno="13795"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13796"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_dict<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13797"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13801"><highlight class="normal">__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13803"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_globals);</highlight></codeline>
<codeline lineno="13804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;func_globals;</highlight></codeline>
<codeline lineno="13805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13807"><highlight class="normal">__Pyx_CyFunction_get_closure(CYTHON_UNUSED<sp/>__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13809"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="13810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_None;</highlight></codeline>
<codeline lineno="13811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13812"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13813"><highlight class="normal">__Pyx_CyFunction_get_code(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="13814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13815"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>(op-&gt;func_code)<sp/>?<sp/>op-&gt;func_code<sp/>:<sp/>Py_None;</highlight></codeline>
<codeline lineno="13816"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(result);</highlight></codeline>
<codeline lineno="13817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13820"><highlight class="normal">__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject<sp/>*op)<sp/>{</highlight></codeline>
<codeline lineno="13821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13822"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*res<sp/>=<sp/>op-&gt;defaults_getter((PyObject<sp/>*)<sp/>op);</highlight></codeline>
<codeline lineno="13823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!res))</highlight></codeline>
<codeline lineno="13824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13825"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13826"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_tuple<sp/>=<sp/>PyTuple_GET_ITEM(res,<sp/>0);</highlight></codeline>
<codeline lineno="13827"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;defaults_tuple);</highlight></codeline>
<codeline lineno="13828"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_kwdict<sp/>=<sp/>PyTuple_GET_ITEM(res,<sp/>1);</highlight></codeline>
<codeline lineno="13829"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;defaults_kwdict);</highlight></codeline>
<codeline lineno="13830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13831"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_tuple<sp/>=<sp/>PySequence_ITEM(res,<sp/>0);</highlight></codeline>
<codeline lineno="13832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!op-&gt;defaults_tuple))<sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;defaults_kwdict<sp/>=<sp/>PySequence_ITEM(res,<sp/>1);</highlight></codeline>
<codeline lineno="13835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!op-&gt;defaults_kwdict))<sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13837"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13838"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(res);</highlight></codeline>
<codeline lineno="13839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13841"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13842"><highlight class="normal">__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject*<sp/>value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13843"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="13844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/>{</highlight></codeline>
<codeline lineno="13845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13846"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>Py_None<sp/>&amp;&amp;<sp/>!PyTuple_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__defaults__<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>tuple<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13851"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13852"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;defaults_tuple;</highlight></codeline>
<codeline lineno="13853"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_tuple<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13854"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13857"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13858"><highlight class="normal">__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13859"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>op-&gt;defaults_tuple;</highlight></codeline>
<codeline lineno="13860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/>{</highlight></codeline>
<codeline lineno="13861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;defaults_getter)<sp/>{</highlight></codeline>
<codeline lineno="13862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_CyFunction_init_defaults(op)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>op-&gt;defaults_tuple;</highlight></codeline>
<codeline lineno="13864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13868"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(result);</highlight></codeline>
<codeline lineno="13869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13871"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13872"><highlight class="normal">__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject*<sp/>value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13873"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="13874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/>{</highlight></codeline>
<codeline lineno="13875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13876"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>Py_None<sp/>&amp;&amp;<sp/>!PyDict_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__kwdefaults__<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>dict<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13881"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="13882"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;defaults_kwdict;</highlight></codeline>
<codeline lineno="13883"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_kwdict<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13884"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13888"><highlight class="normal">__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13889"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>op-&gt;defaults_kwdict;</highlight></codeline>
<codeline lineno="13890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/>{</highlight></codeline>
<codeline lineno="13891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;defaults_getter)<sp/>{</highlight></codeline>
<codeline lineno="13892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_CyFunction_init_defaults(op)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>op-&gt;defaults_kwdict;</highlight></codeline>
<codeline lineno="13894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="13896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13898"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(result);</highlight></codeline>
<codeline lineno="13899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13901"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13902"><highlight class="normal">__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject<sp/>*op,<sp/>PyObject*<sp/>value,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13903"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="13904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value<sp/>||<sp/>value<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="13905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13906"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyDict_Check(value))<sp/>{</highlight></codeline>
<codeline lineno="13907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="13908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__annotations__<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>dict<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13911"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(value);</highlight></codeline>
<codeline lineno="13912"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>op-&gt;func_annotations;</highlight></codeline>
<codeline lineno="13913"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_annotations<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="13914"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="13915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13918"><highlight class="normal">__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject<sp/>*op,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="13919"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>op-&gt;func_annotations;</highlight></codeline>
<codeline lineno="13920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/>{</highlight></codeline>
<codeline lineno="13921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="13922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_annotations<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="13924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13925"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(result);</highlight></codeline>
<codeline lineno="13926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13928"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyGetSetDef<sp/>__pyx_CyFunction_getsets[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13929"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_doc&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_doc,<sp/>(setter)__Pyx_CyFunction_set_doc,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13930"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">,<sp/><sp/>(getter)__Pyx_CyFunction_get_doc,<sp/>(setter)__Pyx_CyFunction_set_doc,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13931"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_name&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_name,<sp/>(setter)__Pyx_CyFunction_set_name,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13932"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_name,<sp/>(setter)__Pyx_CyFunction_set_name,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13933"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__qualname__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_qualname,<sp/>(setter)__Pyx_CyFunction_set_qualname,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13934"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__self__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_self,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13935"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_dict&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_dict,<sp/>(setter)__Pyx_CyFunction_set_dict,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13936"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__dict__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_dict,<sp/>(setter)__Pyx_CyFunction_set_dict,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13937"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_globals&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_globals,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13938"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__globals__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_globals,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13939"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_closure&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_closure,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13940"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__closure__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_closure,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13941"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_code&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_code,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13942"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__code__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_code,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13943"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;func_defaults&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_defaults,<sp/>(setter)__Pyx_CyFunction_set_defaults,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13944"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__defaults__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_defaults,<sp/>(setter)__Pyx_CyFunction_set_defaults,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13945"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__kwdefaults__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_kwdefaults,<sp/>(setter)__Pyx_CyFunction_set_kwdefaults,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13946"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__annotations__&quot;</highlight><highlight class="normal">,<sp/>(getter)__Pyx_CyFunction_get_annotations,<sp/>(setter)__Pyx_CyFunction_set_annotations,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="13947"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="13948"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMemberDef<sp/>__pyx_CyFunction_members[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13950"><highlight class="normal"><sp/><sp/><sp/><sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">,<sp/>T_OBJECT,<sp/>offsetof(PyCFunctionObject,<sp/>m_module),<sp/>PY_WRITE_RESTRICTED,<sp/>0},</highlight></codeline>
<codeline lineno="13951"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/><sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="13952"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13953"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*</highlight></codeline>
<codeline lineno="13954"><highlight class="normal">__Pyx_CyFunction_reduce(__pyx_CyFunctionObject<sp/>*m,<sp/>CYTHON_UNUSED<sp/>PyObject<sp/>*args)</highlight></codeline>
<codeline lineno="13955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13956"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_FromString(m-&gt;func.m_ml-&gt;ml_name);</highlight></codeline>
<codeline lineno="13958"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyString_FromString(m-&gt;func.m_ml-&gt;ml_name);</highlight></codeline>
<codeline lineno="13960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>__pyx_CyFunction_methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)__Pyx_CyFunction_reduce,<sp/>METH_VARARGS,<sp/>0},</highlight></codeline>
<codeline lineno="13964"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="13965"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13966"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030500A0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13967"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_weakreflist(cyfunc)<sp/>((cyfunc)-&gt;func_weakreflist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13968"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13969"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_CyFunction_weakreflist(cyfunc)<sp/>((cyfunc)-&gt;func.m_weakreflist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13970"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13971"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_Init(__pyx_CyFunctionObject<sp/>*op,<sp/>PyMethodDef<sp/>*ml,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>PyObject*<sp/>qualname,</highlight></codeline>
<codeline lineno="13972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*closure,<sp/>PyObject<sp/>*module,<sp/>PyObject*<sp/>globals,<sp/>PyObject*<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="13973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(op<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="13974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="13975"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="13976"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CyFunction_weakreflist(op)<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13977"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func.m_ml<sp/>=<sp/>ml;</highlight></codeline>
<codeline lineno="13978"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func.m_self<sp/>=<sp/>(PyObject<sp/>*)<sp/>op;</highlight></codeline>
<codeline lineno="13979"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(closure);</highlight></codeline>
<codeline lineno="13980"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_closure<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="13981"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(module);</highlight></codeline>
<codeline lineno="13982"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func.m_module<sp/>=<sp/>module;</highlight></codeline>
<codeline lineno="13983"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_dict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13984"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13985"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(qualname);</highlight></codeline>
<codeline lineno="13986"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_qualname<sp/>=<sp/>qualname;</highlight></codeline>
<codeline lineno="13987"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_doc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13988"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_classobj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13989"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_globals<sp/>=<sp/>globals;</highlight></codeline>
<codeline lineno="13990"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(op-&gt;func_globals);</highlight></codeline>
<codeline lineno="13991"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(code);</highlight></codeline>
<codeline lineno="13992"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_code<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="13993"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_pyobjects<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13994"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13995"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13996"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_tuple<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13997"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_kwdict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13998"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;defaults_getter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13999"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;func_annotations<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PyObject<sp/>*)<sp/>op;</highlight></codeline>
<codeline lineno="14001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14002"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14003"><highlight class="normal">__Pyx_CyFunction_clear(__pyx_CyFunctionObject<sp/>*m)</highlight></codeline>
<codeline lineno="14004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14005"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_closure);</highlight></codeline>
<codeline lineno="14006"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func.m_module);</highlight></codeline>
<codeline lineno="14007"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_dict);</highlight></codeline>
<codeline lineno="14008"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_name);</highlight></codeline>
<codeline lineno="14009"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_qualname);</highlight></codeline>
<codeline lineno="14010"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_doc);</highlight></codeline>
<codeline lineno="14011"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_globals);</highlight></codeline>
<codeline lineno="14012"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_code);</highlight></codeline>
<codeline lineno="14013"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_classobj);</highlight></codeline>
<codeline lineno="14014"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;defaults_tuple);</highlight></codeline>
<codeline lineno="14015"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;defaults_kwdict);</highlight></codeline>
<codeline lineno="14016"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(m-&gt;func_annotations);</highlight></codeline>
<codeline lineno="14017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;defaults)<sp/>{</highlight></codeline>
<codeline lineno="14018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>**pydefaults<sp/>=<sp/>__Pyx_CyFunction_Defaults(PyObject<sp/>*,<sp/>m);</highlight></codeline>
<codeline lineno="14019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="14020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;defaults_pyobjects;<sp/>i++)</highlight></codeline>
<codeline lineno="14021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(pydefaults[i]);</highlight></codeline>
<codeline lineno="14022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_Free(m-&gt;defaults);</highlight></codeline>
<codeline lineno="14023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;defaults<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14027"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx__CyFunction_dealloc(__pyx_CyFunctionObject<sp/>*m)</highlight></codeline>
<codeline lineno="14028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_CyFunction_weakreflist(m)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="14030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_ClearWeakRefs((PyObject<sp/>*)<sp/>m);</highlight></codeline>
<codeline lineno="14031"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CyFunction_clear(m);</highlight></codeline>
<codeline lineno="14032"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_GC_Del(m);</highlight></codeline>
<codeline lineno="14033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14034"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_dealloc(__pyx_CyFunctionObject<sp/>*m)</highlight></codeline>
<codeline lineno="14035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14036"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_GC_UnTrack(m);</highlight></codeline>
<codeline lineno="14037"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx__CyFunction_dealloc(m);</highlight></codeline>
<codeline lineno="14038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_traverse(__pyx_CyFunctionObject<sp/>*m,<sp/>visitproc<sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="14040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14041"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_closure);</highlight></codeline>
<codeline lineno="14042"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func.m_module);</highlight></codeline>
<codeline lineno="14043"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_dict);</highlight></codeline>
<codeline lineno="14044"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_name);</highlight></codeline>
<codeline lineno="14045"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_qualname);</highlight></codeline>
<codeline lineno="14046"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_doc);</highlight></codeline>
<codeline lineno="14047"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_globals);</highlight></codeline>
<codeline lineno="14048"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_code);</highlight></codeline>
<codeline lineno="14049"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;func_classobj);</highlight></codeline>
<codeline lineno="14050"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;defaults_tuple);</highlight></codeline>
<codeline lineno="14051"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(m-&gt;defaults_kwdict);</highlight></codeline>
<codeline lineno="14052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;defaults)<sp/>{</highlight></codeline>
<codeline lineno="14053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>**pydefaults<sp/>=<sp/>__Pyx_CyFunction_Defaults(PyObject<sp/>*,<sp/>m);</highlight></codeline>
<codeline lineno="14054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="14055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;defaults_pyobjects;<sp/>i++)</highlight></codeline>
<codeline lineno="14056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_VISIT(pydefaults[i]);</highlight></codeline>
<codeline lineno="14057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14060"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_descr_get(PyObject<sp/>*func,<sp/>PyObject<sp/>*obj,<sp/>PyObject<sp/>*type)</highlight></codeline>
<codeline lineno="14061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14062"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14063"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*m<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;flags<sp/>&amp;<sp/>__Pyx_CYFUNCTION_STATICMETHOD)<sp/>{</highlight></codeline>
<codeline lineno="14065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(func);</highlight></codeline>
<codeline lineno="14066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func;</highlight></codeline>
<codeline lineno="14067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;flags<sp/>&amp;<sp/>__Pyx_CYFUNCTION_CLASSMETHOD)<sp/>{</highlight></codeline>
<codeline lineno="14069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="14070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject<sp/>*)(Py_TYPE(obj));</highlight></codeline>
<codeline lineno="14071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyMethod_New(func,<sp/>type,<sp/>(PyObject<sp/>*)(Py_TYPE(type)));</highlight></codeline>
<codeline lineno="14072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="14074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14075"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyMethod_New(func,<sp/>obj,<sp/>type);</highlight></codeline>
<codeline lineno="14077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14078"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*</highlight></codeline>
<codeline lineno="14079"><highlight class="normal">__Pyx_CyFunction_repr(__pyx_CyFunctionObject<sp/>*op)</highlight></codeline>
<codeline lineno="14080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14081"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;cyfunction<sp/>%U<sp/>at<sp/>%p&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;func_qualname,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)op);</highlight></codeline>
<codeline lineno="14084"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyString_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;cyfunction<sp/>%s<sp/>at<sp/>%p&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(op-&gt;func_qualname),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)op);</highlight></codeline>
<codeline lineno="14087"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14089"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*<sp/>__Pyx_CyFunction_CallMethod(PyObject<sp/>*func,<sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*arg,<sp/>PyObject<sp/>*kw)<sp/>{</highlight></codeline>
<codeline lineno="14090"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunctionObject*<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>(PyCFunctionObject*)func;</highlight></codeline>
<codeline lineno="14091"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunction<sp/>meth<sp/>=<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>-&gt;m_ml-&gt;ml_meth;</highlight></codeline>
<codeline lineno="14092"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size;</highlight></codeline>
<codeline lineno="14093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>-&gt;m_ml-&gt;ml_flags<sp/>&amp;<sp/>(METH_VARARGS<sp/>|<sp/>METH_KEYWORDS<sp/>|<sp/>METH_NOARGS<sp/>|<sp/>METH_O))<sp/>{</highlight></codeline>
<codeline lineno="14094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>METH_VARARGS:</highlight></codeline>
<codeline lineno="14095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(kw<sp/>==<sp/>NULL<sp/>||<sp/>PyDict_Size(kw)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="14096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*meth)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="14097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>METH_VARARGS<sp/>|<sp/>METH_KEYWORDS:</highlight></codeline>
<codeline lineno="14099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(PyCFunctionWithKeywords)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)meth)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>arg,<sp/>kw);</highlight></codeline>
<codeline lineno="14100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>METH_NOARGS:</highlight></codeline>
<codeline lineno="14101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(kw<sp/>==<sp/>NULL<sp/>||<sp/>PyDict_Size(kw)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>PyTuple_GET_SIZE(arg);</highlight></codeline>
<codeline lineno="14103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(size<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="14104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*meth)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="14105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="14106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>takes<sp/>no<sp/>arguments<sp/>(%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>-&gt;m_ml-&gt;ml_name,<sp/>size);</highlight></codeline>
<codeline lineno="14108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>METH_O:</highlight></codeline>
<codeline lineno="14112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(kw<sp/>==<sp/>NULL<sp/>||<sp/>PyDict_Size(kw)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>PyTuple_GET_SIZE(arg);</highlight></codeline>
<codeline lineno="14114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(size<sp/>==<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="14115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*result,<sp/>*arg0;</highlight></codeline>
<codeline lineno="14116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg0<sp/>=<sp/>PyTuple_GET_ITEM(arg,<sp/>0);</highlight></codeline>
<codeline lineno="14118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg0<sp/>=<sp/>PySequence_ITEM(arg,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!arg0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(*meth)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>arg0);</highlight></codeline>
<codeline lineno="14122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>!(CYTHON_ASSUME_SAFE_MACROS<sp/>&amp;&amp;<sp/>!CYTHON_AVOID_BORROWED_REFS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(arg0);</highlight></codeline>
<codeline lineno="14124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="14128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>takes<sp/>exactly<sp/>one<sp/>argument<sp/>(%&quot;</highlight><highlight class="normal"><sp/>CYTHON_FORMAT_SSIZE_T<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>-&gt;m_ml-&gt;ml_name,<sp/>size);</highlight></codeline>
<codeline lineno="14130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_SystemError,<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>call<sp/>flags<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__Pyx_CyFunction_Call.<sp/>METH_OLDARGS<sp/>is<sp/>no<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;longer<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14139"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;%.200s()<sp/>takes<sp/>no<sp/>keyword<sp/>arguments&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>-&gt;m_ml-&gt;ml_name);</highlight></codeline>
<codeline lineno="14141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_CyFunction_Call(PyObject<sp/>*func,<sp/>PyObject<sp/>*arg,<sp/>PyObject<sp/>*kw)<sp/>{</highlight></codeline>
<codeline lineno="14144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_CallMethod(func,<sp/>((PyCFunctionObject*)func)-&gt;m_self,<sp/>arg,<sp/>kw);</highlight></codeline>
<codeline lineno="14145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_CallAsMethod(PyObject<sp/>*func,<sp/>PyObject<sp/>*args,<sp/>PyObject<sp/>*kw)<sp/>{</highlight></codeline>
<codeline lineno="14147"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="14148"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*cyfunc<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cyfunc-&gt;flags<sp/>&amp;<sp/>__Pyx_CYFUNCTION_CCLASS)<sp/>&amp;&amp;<sp/>!(cyfunc-&gt;flags<sp/>&amp;<sp/>__Pyx_CYFUNCTION_STATICMETHOD))<sp/>{</highlight></codeline>
<codeline lineno="14150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>argc;</highlight></codeline>
<codeline lineno="14151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*new_args;</highlight></codeline>
<codeline lineno="14152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argc<sp/>=<sp/>PyTuple_GET_SIZE(args);</highlight></codeline>
<codeline lineno="14154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_args<sp/>=<sp/>PyTuple_GetSlice(args,<sp/>1,<sp/>argc);</highlight></codeline>
<codeline lineno="14155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!new_args))</highlight></codeline>
<codeline lineno="14156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>PyTuple_GetItem(args,<sp/>0);</highlight></codeline>
<codeline lineno="14158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="14159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(new_args);</highlight></codeline>
<codeline lineno="14160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_CyFunction_CallMethod(func,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>new_args,<sp/>kw);</highlight></codeline>
<codeline lineno="14163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(new_args);</highlight></codeline>
<codeline lineno="14164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_CyFunction_Call(func,<sp/>args,<sp/>kw);</highlight></codeline>
<codeline lineno="14166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>__pyx_CyFunctionType_type<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="14170"><highlight class="normal"><sp/><sp/><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="14171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cython_function_or_method&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_CyFunctionObject),</highlight></codeline>
<codeline lineno="14173"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14174"><highlight class="normal"><sp/><sp/><sp/><sp/>(destructor)<sp/>__Pyx_CyFunction_dealloc,</highlight></codeline>
<codeline lineno="14175"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14176"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14177"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14179"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14181"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14183"><highlight class="normal"><sp/><sp/><sp/><sp/>(reprfunc)<sp/>__Pyx_CyFunction_repr,</highlight></codeline>
<codeline lineno="14184"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14185"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14186"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14187"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14188"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CyFunction_CallAsMethod,</highlight></codeline>
<codeline lineno="14189"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14190"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14191"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14192"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14193"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_TPFLAGS_DEFAULT<sp/>|<sp/>Py_TPFLAGS_HAVE_GC,</highlight></codeline>
<codeline lineno="14194"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14195"><highlight class="normal"><sp/><sp/><sp/><sp/>(traverseproc)<sp/>__Pyx_CyFunction_traverse,</highlight></codeline>
<codeline lineno="14196"><highlight class="normal"><sp/><sp/><sp/><sp/>(inquiry)<sp/>__Pyx_CyFunction_clear,</highlight></codeline>
<codeline lineno="14197"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14198"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x030500A0</highlight></codeline>
<codeline lineno="14199"><highlight class="normal"><sp/><sp/><sp/><sp/>offsetof(__pyx_CyFunctionObject,<sp/>func_weakreflist),</highlight></codeline>
<codeline lineno="14200"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14201"><highlight class="normal"><sp/><sp/><sp/><sp/>offsetof(PyCFunctionObject,<sp/>m_weakreflist),</highlight></codeline>
<codeline lineno="14202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14203"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14204"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14205"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunction_methods,</highlight></codeline>
<codeline lineno="14206"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunction_members,</highlight></codeline>
<codeline lineno="14207"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunction_getsets,</highlight></codeline>
<codeline lineno="14208"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14209"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14210"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CyFunction_descr_get,</highlight></codeline>
<codeline lineno="14211"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14212"><highlight class="normal"><sp/><sp/><sp/><sp/>offsetof(__pyx_CyFunctionObject,<sp/>func_dict),</highlight></codeline>
<codeline lineno="14213"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14214"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14215"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14216"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14217"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14218"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14219"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14220"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14221"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14222"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14223"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14224"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030400a1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14226"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14229"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14231"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030800b4<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03090000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14232"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="14233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="14235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_CyFunction_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="14236"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionType<sp/>=<sp/>__Pyx_FetchCommonType(&amp;__pyx_CyFunctionType_type);</highlight></codeline>
<codeline lineno="14237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_CyFunctionType<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="14238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__Pyx_CyFunction_InitDefaults(PyObject<sp/>*func,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pyobjects)<sp/>{</highlight></codeline>
<codeline lineno="14243"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*m<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14244"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;defaults<sp/>=<sp/>PyObject_Malloc(size);</highlight></codeline>
<codeline lineno="14245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!m-&gt;defaults))</highlight></codeline>
<codeline lineno="14246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyErr_NoMemory();</highlight></codeline>
<codeline lineno="14247"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(m-&gt;defaults,<sp/>0,<sp/>size);</highlight></codeline>
<codeline lineno="14248"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;defaults_pyobjects<sp/>=<sp/>pyobjects;</highlight></codeline>
<codeline lineno="14249"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;defaults_size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="14250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;defaults;</highlight></codeline>
<codeline lineno="14251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetDefaultsTuple(PyObject<sp/>*func,<sp/>PyObject<sp/>*tuple)<sp/>{</highlight></codeline>
<codeline lineno="14253"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*m<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14254"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;defaults_tuple<sp/>=<sp/>tuple;</highlight></codeline>
<codeline lineno="14255"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(tuple);</highlight></codeline>
<codeline lineno="14256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetDefaultsKwDict(PyObject<sp/>*func,<sp/>PyObject<sp/>*dict)<sp/>{</highlight></codeline>
<codeline lineno="14258"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*m<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14259"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;defaults_kwdict<sp/>=<sp/>dict;</highlight></codeline>
<codeline lineno="14260"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(dict);</highlight></codeline>
<codeline lineno="14261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CyFunction_SetAnnotationsDict(PyObject<sp/>*func,<sp/>PyObject<sp/>*dict)<sp/>{</highlight></codeline>
<codeline lineno="14263"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_CyFunctionObject<sp/>*m<sp/>=<sp/>(__pyx_CyFunctionObject<sp/>*)<sp/>func;</highlight></codeline>
<codeline lineno="14264"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;func_annotations<sp/>=<sp/>dict;</highlight></codeline>
<codeline lineno="14265"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(dict);</highlight></codeline>
<codeline lineno="14266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14267"><highlight class="normal"></highlight></codeline>
<codeline lineno="14268"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CythonFunction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CyFunction_New(PyMethodDef<sp/>*ml,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>PyObject*<sp/>qualname,</highlight></codeline>
<codeline lineno="14270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*closure,<sp/>PyObject<sp/>*module,<sp/>PyObject*<sp/>globals,<sp/>PyObject*<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="14271"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*op<sp/>=<sp/>__Pyx_CyFunction_Init(</highlight></codeline>
<codeline lineno="14272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GC_New(__pyx_CyFunctionObject,<sp/>__pyx_CyFunctionType),</highlight></codeline>
<codeline lineno="14273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml,<sp/>flags,<sp/>qualname,<sp/>closure,<sp/>module,<sp/>globals,<sp/>code</highlight></codeline>
<codeline lineno="14274"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="14275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(op))<sp/>{</highlight></codeline>
<codeline lineno="14276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GC_Track(op);</highlight></codeline>
<codeline lineno="14277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op;</highlight></codeline>
<codeline lineno="14279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14280"><highlight class="normal"></highlight></codeline>
<codeline lineno="14281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SliceTupleAndList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14282"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_crop_slice(Py_ssize_t*<sp/>_start,<sp/>Py_ssize_t*<sp/>_stop,<sp/>Py_ssize_t*<sp/>_length)<sp/>{</highlight></codeline>
<codeline lineno="14284"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>start<sp/>=<sp/>*_start,<sp/>stop<sp/>=<sp/>*_stop,<sp/>length<sp/>=<sp/>*_length;</highlight></codeline>
<codeline lineno="14285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="14286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="14287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="14292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop<sp/>&gt;<sp/>length)</highlight></codeline>
<codeline lineno="14293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="14294"><highlight class="normal"><sp/><sp/><sp/><sp/>*_length<sp/>=<sp/>stop<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="14295"><highlight class="normal"><sp/><sp/><sp/><sp/>*_start<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="14296"><highlight class="normal"><sp/><sp/><sp/><sp/>*_stop<sp/>=<sp/>stop;</highlight></codeline>
<codeline lineno="14297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_copy_object_array(PyObject**<sp/>CYTHON_RESTRICT<sp/>src,<sp/>PyObject**<sp/>CYTHON_RESTRICT<sp/>dest,<sp/>Py_ssize_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="14299"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*v;</highlight></codeline>
<codeline lineno="14300"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i;</highlight></codeline>
<codeline lineno="14301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="14302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>dest[i]<sp/>=<sp/>src[i];</highlight></codeline>
<codeline lineno="14303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(v);</highlight></codeline>
<codeline lineno="14304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyList_GetSlice(</highlight></codeline>
<codeline lineno="14307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>src,<sp/>Py_ssize_t<sp/>start,<sp/>Py_ssize_t<sp/>stop)<sp/>{</highlight></codeline>
<codeline lineno="14308"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>dest;</highlight></codeline>
<codeline lineno="14309"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>length<sp/>=<sp/>PyList_GET_SIZE(src);</highlight></codeline>
<codeline lineno="14310"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_crop_slice(&amp;start,<sp/>&amp;stop,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="14311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(length<sp/>&lt;=<sp/>0))</highlight></codeline>
<codeline lineno="14312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyList_New(0);</highlight></codeline>
<codeline lineno="14313"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>PyList_New(length);</highlight></codeline>
<codeline lineno="14314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!dest))</highlight></codeline>
<codeline lineno="14315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14316"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_copy_object_array(</highlight></codeline>
<codeline lineno="14317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PyListObject*)src)-&gt;ob_item<sp/>+<sp/>start,</highlight></codeline>
<codeline lineno="14318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PyListObject*)dest)-&gt;ob_item,</highlight></codeline>
<codeline lineno="14319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="14320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="14321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14322"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyTuple_GetSlice(</highlight></codeline>
<codeline lineno="14323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>src,<sp/>Py_ssize_t<sp/>start,<sp/>Py_ssize_t<sp/>stop)<sp/>{</highlight></codeline>
<codeline lineno="14324"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>dest;</highlight></codeline>
<codeline lineno="14325"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>length<sp/>=<sp/>PyTuple_GET_SIZE(src);</highlight></codeline>
<codeline lineno="14326"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_crop_slice(&amp;start,<sp/>&amp;stop,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="14327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(length<sp/>&lt;=<sp/>0))</highlight></codeline>
<codeline lineno="14328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyTuple_New(0);</highlight></codeline>
<codeline lineno="14329"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>PyTuple_New(length);</highlight></codeline>
<codeline lineno="14330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!dest))</highlight></codeline>
<codeline lineno="14331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14332"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_copy_object_array(</highlight></codeline>
<codeline lineno="14333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PyTupleObject*)src)-&gt;ob_item<sp/>+<sp/>start,</highlight></codeline>
<codeline lineno="14334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PyTupleObject*)dest)-&gt;ob_item,</highlight></codeline>
<codeline lineno="14335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="14336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="14337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14339"><highlight class="normal"></highlight></codeline>
<codeline lineno="14340"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Import<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Import(PyObject<sp/>*name,<sp/>PyObject<sp/>*from_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="14342"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*empty_list<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14343"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*module<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14344"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*global_dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14345"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*empty_dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14346"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*list;</highlight></codeline>
<codeline lineno="14347"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14348"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_import;</highlight></codeline>
<codeline lineno="14349"><highlight class="normal"><sp/><sp/><sp/><sp/>py_import<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_b,<sp/>__pyx_n_s_import);</highlight></codeline>
<codeline lineno="14350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_import)</highlight></codeline>
<codeline lineno="14351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14352"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_list)</highlight></codeline>
<codeline lineno="14354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>from_list;</highlight></codeline>
<codeline lineno="14355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_list<sp/>=<sp/>PyList_New(0);</highlight></codeline>
<codeline lineno="14357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_list)</highlight></codeline>
<codeline lineno="14358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>empty_list;</highlight></codeline>
<codeline lineno="14360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14361"><highlight class="normal"><sp/><sp/><sp/><sp/>global_dict<sp/>=<sp/>PyModule_GetDict(__pyx_m);</highlight></codeline>
<codeline lineno="14362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!global_dict)</highlight></codeline>
<codeline lineno="14363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14364"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_dict<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="14365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_dict)</highlight></codeline>
<codeline lineno="14366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14368"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="14370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((1)<sp/>&amp;&amp;<sp/>(strchr(__Pyx_MODULE_NAME,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="14371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyImport_ImportModuleLevelObject(</highlight></codeline>
<codeline lineno="14372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>global_dict,<sp/>empty_dict,<sp/>list,<sp/>1);</highlight></codeline>
<codeline lineno="14373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module)<sp/>{</highlight></codeline>
<codeline lineno="14374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_ExceptionMatches(PyExc_ImportError))</highlight></codeline>
<codeline lineno="14375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14381"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module)<sp/>{</highlight></codeline>
<codeline lineno="14383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*py_level<sp/>=<sp/>PyInt_FromLong(level);</highlight></codeline>
<codeline lineno="14385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_level)</highlight></codeline>
<codeline lineno="14386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyObject_CallFunctionObjArgs(py_import,</highlight></codeline>
<codeline lineno="14388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>global_dict,<sp/>empty_dict,<sp/>list,<sp/>py_level,<sp/>(PyObject<sp/>*)NULL);</highlight></codeline>
<codeline lineno="14389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_level);</highlight></codeline>
<codeline lineno="14390"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyImport_ImportModuleLevelObject(</highlight></codeline>
<codeline lineno="14392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>global_dict,<sp/>empty_dict,<sp/>list,<sp/>level);</highlight></codeline>
<codeline lineno="14393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14396"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="14397"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14398"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_import);</highlight></codeline>
<codeline lineno="14399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14400"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(empty_list);</highlight></codeline>
<codeline lineno="14401"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(empty_dict);</highlight></codeline>
<codeline lineno="14402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="14403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14404"><highlight class="normal"></highlight></codeline>
<codeline lineno="14405"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ImportFrom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_ImportFrom(PyObject*<sp/>module,<sp/>PyObject*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="14407"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>value<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(module,<sp/>name);</highlight></codeline>
<codeline lineno="14408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!value)<sp/>&amp;&amp;<sp/>PyErr_ExceptionMatches(PyExc_AttributeError))<sp/>{</highlight></codeline>
<codeline lineno="14409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_ImportError,</highlight></codeline>
<codeline lineno="14410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="14411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>import<sp/>name<sp/>%.230s&quot;</highlight><highlight class="normal">,<sp/>PyString_AS_STRING(name));</highlight></codeline>
<codeline lineno="14412"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>import<sp/>name<sp/>%S&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="14414"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="14417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14418"><highlight class="normal"></highlight></codeline>
<codeline lineno="14419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>HasAttr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_HasAttr(PyObject<sp/>*o,<sp/>PyObject<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="14421"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="14422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_PyBaseString_Check(n)))<sp/>{</highlight></codeline>
<codeline lineno="14423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="14424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hasattr():<sp/>attribute<sp/>name<sp/>must<sp/>be<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14427"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__Pyx_GetAttr(o,<sp/>n);</highlight></codeline>
<codeline lineno="14428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!r))<sp/>{</highlight></codeline>
<codeline lineno="14429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14431"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(r);</highlight></codeline>
<codeline lineno="14433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="14434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14436"><highlight class="normal"></highlight></codeline>
<codeline lineno="14437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObject_GenericGetAttrNoDict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14438"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14439"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_RaiseGenericGetAttributeError(PyTypeObject<sp/>*tp,<sp/>PyObject<sp/>*attr_name)<sp/>{</highlight></codeline>
<codeline lineno="14440"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_AttributeError,</highlight></codeline>
<codeline lineno="14441"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="14442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%.50s&apos;<sp/>object<sp/>has<sp/>no<sp/>attribute<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tp_name,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14444"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%.50s&apos;<sp/>object<sp/>has<sp/>no<sp/>attribute<sp/>&apos;%.400s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tp_name,<sp/>PyString_AS_STRING(attr_name));</highlight></codeline>
<codeline lineno="14447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14450"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GenericGetAttrNoDict(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name)<sp/>{</highlight></codeline>
<codeline lineno="14451"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*descr;</highlight></codeline>
<codeline lineno="14452"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject<sp/>*tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="14453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyString_Check(attr_name)))<sp/>{</highlight></codeline>
<codeline lineno="14454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GenericGetAttr(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14456"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!tp-&gt;tp_dictoffset);</highlight></codeline>
<codeline lineno="14457"><highlight class="normal"><sp/><sp/><sp/><sp/>descr<sp/>=<sp/>_PyType_Lookup(tp,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!descr))<sp/>{</highlight></codeline>
<codeline lineno="14459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_RaiseGenericGetAttributeError(tp,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14461"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(descr);</highlight></codeline>
<codeline lineno="14462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyType_HasFeature(Py_TYPE(descr),<sp/>Py_TPFLAGS_HAVE_CLASS)))</highlight></codeline>
<codeline lineno="14464"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descrgetfunc<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>Py_TYPE(descr)-&gt;tp_descr_get;</highlight></codeline>
<codeline lineno="14467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>))<sp/>{</highlight></codeline>
<codeline lineno="14468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*res<sp/>=<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>(descr,<sp/>obj,<sp/>(PyObject<sp/>*)tp);</highlight></codeline>
<codeline lineno="14469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(descr);</highlight></codeline>
<codeline lineno="14470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="14471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descr;</highlight></codeline>
<codeline lineno="14474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14476"><highlight class="normal"></highlight></codeline>
<codeline lineno="14477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObject_GenericGetAttr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14478"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14479"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyObject_GenericGetAttr(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name)<sp/>{</highlight></codeline>
<codeline lineno="14480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_TYPE(obj)-&gt;tp_dictoffset))<sp/>{</highlight></codeline>
<codeline lineno="14481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GenericGetAttr(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GenericGetAttrNoDict(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14486"><highlight class="normal"></highlight></codeline>
<codeline lineno="14487"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetAttrStrNoError<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14488"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetAttrStr_ClearAttributeError(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="14489"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="14490"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="14491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))</highlight></codeline>
<codeline lineno="14492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyErr_Clear();</highlight></codeline>
<codeline lineno="14493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetAttrStrNoError(PyObject*<sp/>obj,<sp/>PyObject*<sp/>attr_name)<sp/>{</highlight></codeline>
<codeline lineno="14495"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="14496"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>CYTHON_USE_TYPE_SLOTS<sp/>&amp;&amp;<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x030700B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14497"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject*<sp/>tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="14498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(tp-&gt;tp_getattro<sp/>==<sp/>PyObject_GenericGetAttr))<sp/>{</highlight></codeline>
<codeline lineno="14499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_PyObject_GenericGetAttrWithDict(obj,<sp/>attr_name,<sp/>NULL,<sp/>1);</highlight></codeline>
<codeline lineno="14500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14502"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(obj,<sp/>attr_name);</highlight></codeline>
<codeline lineno="14503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!result))<sp/>{</highlight></codeline>
<codeline lineno="14504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyObject_GetAttrStr_ClearAttributeError();</highlight></codeline>
<codeline lineno="14505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14508"><highlight class="normal"></highlight></codeline>
<codeline lineno="14509"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetupReduce<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_setup_reduce_is_named(PyObject*<sp/>meth,<sp/>PyObject*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="14511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="14512"><highlight class="normal"><sp/><sp/>PyObject<sp/>*name_attr;</highlight></codeline>
<codeline lineno="14513"><highlight class="normal"><sp/><sp/>name_attr<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(meth,<sp/>__pyx_n_s_name);</highlight></codeline>
<codeline lineno="14514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(name_attr))<sp/>{</highlight></codeline>
<codeline lineno="14515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>PyObject_RichCompareBool(name_attr,<sp/>name,<sp/>Py_EQ);</highlight></codeline>
<codeline lineno="14516"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(ret<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14523"><highlight class="normal"><sp/><sp/>Py_XDECREF(name_attr);</highlight></codeline>
<codeline lineno="14524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="14525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_setup_reduce(PyObject*<sp/>type_obj)<sp/>{</highlight></codeline>
<codeline lineno="14527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14528"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*object_reduce<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14529"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*object_reduce_ex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14530"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14531"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*reduce_ex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14532"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*reduce_cython<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14533"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*setstate<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14534"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*setstate_cython<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_PyType_Lookup((PyTypeObject*)type_obj,<sp/>__pyx_n_s_getstate))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_GOOD;</highlight></codeline>
<codeline lineno="14537"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_HasAttr(type_obj,<sp/>__pyx_n_s_getstate))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_GOOD;</highlight></codeline>
<codeline lineno="14539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14541"><highlight class="normal"><sp/><sp/><sp/><sp/>object_reduce_ex<sp/>=<sp/>_PyType_Lookup(&amp;PyBaseObject_Type,<sp/>__pyx_n_s_reduce_ex);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!object_reduce_ex)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14542"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14543"><highlight class="normal"><sp/><sp/><sp/><sp/>object_reduce_ex<sp/>=<sp/>__Pyx_PyObject_GetAttrStr((PyObject*)&amp;PyBaseObject_Type,<sp/>__pyx_n_s_reduce_ex);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!object_reduce_ex)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14545"><highlight class="normal"><sp/><sp/><sp/><sp/>reduce_ex<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(type_obj,<sp/>__pyx_n_s_reduce_ex);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!reduce_ex))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reduce_ex<sp/>==<sp/>object_reduce_ex)<sp/>{</highlight></codeline>
<codeline lineno="14547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_reduce<sp/>=<sp/>_PyType_Lookup(&amp;PyBaseObject_Type,<sp/>__pyx_n_s_reduce);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!object_reduce)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14549"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_reduce<sp/>=<sp/>__Pyx_PyObject_GetAttrStr((PyObject*)&amp;PyBaseObject_Type,<sp/>__pyx_n_s_reduce);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!object_reduce)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref><sp/>=<sp/>__Pyx_PyObject_GetAttrStr(type_obj,<sp/>__pyx_n_s_reduce);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref>))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref><sp/>==<sp/>object_reduce<sp/>||<sp/>__Pyx_setup_reduce_is_named(<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref>,<sp/>__pyx_n_s_reduce_cython))<sp/>{</highlight></codeline>
<codeline lineno="14554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_cython<sp/>=<sp/>__Pyx_PyObject_GetAttrStrNoError(type_obj,<sp/>__pyx_n_s_reduce_cython);</highlight></codeline>
<codeline lineno="14555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(reduce_cython))<sp/>{</highlight></codeline>
<codeline lineno="14556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>PyDict_SetItem(((PyTypeObject*)type_obj)-&gt;tp_dict,<sp/>__pyx_n_s_reduce,<sp/>reduce_cython);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(ret<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>PyDict_DelItem(((PyTypeObject*)type_obj)-&gt;tp_dict,<sp/>__pyx_n_s_reduce_cython);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(ret<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref><sp/>==<sp/>object_reduce<sp/>||<sp/>PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="14559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstate<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(type_obj,<sp/>__pyx_n_s_setstate);</highlight></codeline>
<codeline lineno="14562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setstate)<sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setstate<sp/>||<sp/>__Pyx_setup_reduce_is_named(setstate,<sp/>__pyx_n_s_setstate_cython))<sp/>{</highlight></codeline>
<codeline lineno="14564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setstate_cython<sp/>=<sp/>__Pyx_PyObject_GetAttrStrNoError(type_obj,<sp/>__pyx_n_s_setstate_cython);</highlight></codeline>
<codeline lineno="14565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(setstate_cython))<sp/>{</highlight></codeline>
<codeline lineno="14566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>PyDict_SetItem(((PyTypeObject*)type_obj)-&gt;tp_dict,<sp/>__pyx_n_s_setstate,<sp/>setstate_cython);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(ret<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>PyDict_DelItem(((PyTypeObject*)type_obj)-&gt;tp_dict,<sp/>__pyx_n_s_setstate_cython);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(ret<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setstate<sp/>||<sp/>PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="14569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_BAD;</highlight></codeline>
<codeline lineno="14570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyType_Modified((PyTypeObject*)type_obj);</highlight></codeline>
<codeline lineno="14573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__PYX_GOOD;</highlight></codeline>
<codeline lineno="14576"><highlight class="normal">__PYX_BAD:</highlight></codeline>
<codeline lineno="14577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())</highlight></codeline>
<codeline lineno="14578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>initialize<sp/>pickling<sp/>for<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>((PyTypeObject*)type_obj)-&gt;tp_name);</highlight></codeline>
<codeline lineno="14579"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14580"><highlight class="normal">__PYX_GOOD:</highlight></codeline>
<codeline lineno="14581"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14582"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(object_reduce);</highlight></codeline>
<codeline lineno="14583"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(object_reduce_ex);</highlight></codeline>
<codeline lineno="14584"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14585"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(<ref refid="namespaceclusterizer_1a38579bf57d0235945ae91a8794fa34d7" kindref="member">reduce</ref>);</highlight></codeline>
<codeline lineno="14586"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(reduce_ex);</highlight></codeline>
<codeline lineno="14587"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(reduce_cython);</highlight></codeline>
<codeline lineno="14588"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(setstate);</highlight></codeline>
<codeline lineno="14589"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(setstate_cython);</highlight></codeline>
<codeline lineno="14590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="14591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14592"><highlight class="normal"></highlight></codeline>
<codeline lineno="14593"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetVTable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_SetVtable(PyObject<sp/>*dict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*vtable)<sp/>{</highlight></codeline>
<codeline lineno="14595"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02070000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14596"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ob<sp/>=<sp/>PyCapsule_New(vtable,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="14597"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14598"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ob<sp/>=<sp/>PyCObject_FromVoidPtr(vtable,<sp/>0);</highlight></codeline>
<codeline lineno="14599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ob)</highlight></codeline>
<codeline lineno="14601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(dict,<sp/>__pyx_n_s_pyx_vtable,<sp/>ob)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14604"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(ob);</highlight></codeline>
<codeline lineno="14605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14606"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="14607"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(ob);</highlight></codeline>
<codeline lineno="14608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14610"><highlight class="normal"></highlight></codeline>
<codeline lineno="14611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CalculateMetaclass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_CalculateMetaclass(PyTypeObject<sp/>*metaclass,<sp/>PyObject<sp/>*bases)<sp/>{</highlight></codeline>
<codeline lineno="14613"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i,<sp/>nbases<sp/>=<sp/>PyTuple_GET_SIZE(bases);</highlight></codeline>
<codeline lineno="14614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>nbases;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="14615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTypeObject<sp/>*tmptype;</highlight></codeline>
<codeline lineno="14616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>PyTuple_GET_ITEM(bases,<sp/>i);</highlight></codeline>
<codeline lineno="14617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmptype<sp/>=<sp/>Py_TYPE(tmp);</highlight></codeline>
<codeline lineno="14618"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmptype<sp/>==<sp/>&amp;PyClass_Type)</highlight></codeline>
<codeline lineno="14620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>tmptype;</highlight></codeline>
<codeline lineno="14624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_IsSubtype(metaclass,<sp/>tmptype))</highlight></codeline>
<codeline lineno="14627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_IsSubtype(tmptype,<sp/>metaclass))<sp/>{</highlight></codeline>
<codeline lineno="14629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>tmptype;</highlight></codeline>
<codeline lineno="14630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="14633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metaclass<sp/>conflict:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>metaclass<sp/>of<sp/>a<sp/>derived<sp/>class<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;must<sp/>be<sp/>a<sp/>(non-strict)<sp/>subclass<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;of<sp/>the<sp/>metaclasses<sp/>of<sp/>all<sp/>its<sp/>bases&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14640"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>&amp;PyClass_Type;</highlight></codeline>
<codeline lineno="14642"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>&amp;PyType_Type;</highlight></codeline>
<codeline lineno="14644"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14646"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF((PyObject*)<sp/>metaclass);</highlight></codeline>
<codeline lineno="14647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PyObject*)<sp/>metaclass;</highlight></codeline>
<codeline lineno="14648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14649"><highlight class="normal"></highlight></codeline>
<codeline lineno="14650"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py3ClassCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14651"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Py3MetaclassPrepare(PyObject<sp/>*metaclass,<sp/>PyObject<sp/>*bases,<sp/>PyObject<sp/>*name,</highlight></codeline>
<codeline lineno="14652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*qualname,<sp/>PyObject<sp/>*mkw,<sp/>PyObject<sp/>*modname,<sp/>PyObject<sp/>*doc)<sp/>{</highlight></codeline>
<codeline lineno="14653"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ns;</highlight></codeline>
<codeline lineno="14654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*prep<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(metaclass,<sp/>__pyx_n_s_prepare);</highlight></codeline>
<codeline lineno="14656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prep)<sp/>{</highlight></codeline>
<codeline lineno="14657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*pargs<sp/>=<sp/>PyTuple_Pack(2,<sp/>name,<sp/>bases);</highlight></codeline>
<codeline lineno="14658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!pargs))<sp/>{</highlight></codeline>
<codeline lineno="14659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(prep);</highlight></codeline>
<codeline lineno="14660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>PyObject_Call(prep,<sp/>pargs,<sp/>mkw);</highlight></codeline>
<codeline lineno="14663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(prep);</highlight></codeline>
<codeline lineno="14664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(pargs);</highlight></codeline>
<codeline lineno="14665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))</highlight></codeline>
<codeline lineno="14667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="14670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14671"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="14673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!ns))</highlight></codeline>
<codeline lineno="14675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyObject_SetItem(ns,<sp/>__pyx_n_s_module,<sp/>modname)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyObject_SetItem(ns,<sp/>__pyx_n_s_qualname,<sp/>qualname)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(doc<sp/>&amp;&amp;<sp/>PyObject_SetItem(ns,<sp/>__pyx_n_s_doc,<sp/>doc)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ns;</highlight></codeline>
<codeline lineno="14680"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="14681"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(ns);</highlight></codeline>
<codeline lineno="14682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Py3ClassCreate(PyObject<sp/>*metaclass,<sp/>PyObject<sp/>*name,<sp/>PyObject<sp/>*bases,</highlight></codeline>
<codeline lineno="14685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*dict,<sp/>PyObject<sp/>*mkw,</highlight></codeline>
<codeline lineno="14686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calculate_metaclass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_py2_metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14687"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result,<sp/>*margs;</highlight></codeline>
<codeline lineno="14688"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*owned_metaclass<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_py2_metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_metaclass<sp/>=<sp/>PyObject_GetItem(dict,<sp/>__pyx_n_s_metaclass);</highlight></codeline>
<codeline lineno="14691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owned_metaclass)<sp/>{</highlight></codeline>
<codeline lineno="14692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>owned_metaclass;</highlight></codeline>
<codeline lineno="14693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyErr_ExceptionMatches(PyExc_KeyError)))<sp/>{</highlight></codeline>
<codeline lineno="14694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calculate_metaclass<sp/>&amp;&amp;<sp/>(!metaclass<sp/>||<sp/>PyType_Check(metaclass)))<sp/>{</highlight></codeline>
<codeline lineno="14700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaclass<sp/>=<sp/>__Pyx_CalculateMetaclass((PyTypeObject*)<sp/>metaclass,<sp/>bases);</highlight></codeline>
<codeline lineno="14701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_metaclass);</highlight></codeline>
<codeline lineno="14702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!metaclass))</highlight></codeline>
<codeline lineno="14703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_metaclass<sp/>=<sp/>metaclass;</highlight></codeline>
<codeline lineno="14705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14706"><highlight class="normal"><sp/><sp/><sp/><sp/>margs<sp/>=<sp/>PyTuple_Pack(3,<sp/>name,<sp/>bases,<sp/>dict);</highlight></codeline>
<codeline lineno="14707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!margs))<sp/>{</highlight></codeline>
<codeline lineno="14708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14709"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_Call(metaclass,<sp/>margs,<sp/>mkw);</highlight></codeline>
<codeline lineno="14711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(margs);</highlight></codeline>
<codeline lineno="14712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14713"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(owned_metaclass);</highlight></codeline>
<codeline lineno="14714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14716"><highlight class="normal"></highlight></codeline>
<codeline lineno="14717"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectGetMethod<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_GetMethod(PyObject<sp/>*obj,<sp/>PyObject<sp/>*name,<sp/>PyObject<sp/>**method)<sp/>{</highlight></codeline>
<codeline lineno="14719"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*attr;</highlight></codeline>
<codeline lineno="14720"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_UNPACK_METHODS<sp/>&amp;&amp;<sp/>CYTHON_COMPILING_IN_CPYTHON<sp/>&amp;&amp;<sp/>CYTHON_USE_PYTYPE_LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14721"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject<sp/>*tp<sp/>=<sp/>Py_TYPE(obj);</highlight></codeline>
<codeline lineno="14722"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*descr;</highlight></codeline>
<codeline lineno="14723"><highlight class="normal"><sp/><sp/><sp/><sp/>descrgetfunc<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14724"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**dictptr,<sp/>*dict;</highlight></codeline>
<codeline lineno="14725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meth_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14726"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(*method<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="14727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tp-&gt;tp_getattro<sp/>!=<sp/>PyObject_GenericGetAttr))<sp/>{</highlight></codeline>
<codeline lineno="14728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(obj,<sp/>name);</highlight></codeline>
<codeline lineno="14729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>try_unpack;</highlight></codeline>
<codeline lineno="14730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tp-&gt;tp_dict<sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>unlikely(PyType_Ready(tp)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14734"><highlight class="normal"><sp/><sp/><sp/><sp/>descr<sp/>=<sp/>_PyType_Lookup(tp,<sp/>name);</highlight></codeline>
<codeline lineno="14735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(descr<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="14736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(descr);</highlight></codeline>
<codeline lineno="14737"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14738"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__Pyx_CyFunction_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyFunction_Check(descr)<sp/>||<sp/>(Py_TYPE(descr)<sp/>==<sp/>&amp;PyMethodDescr_Type)<sp/>||<sp/>__Pyx_CyFunction_Check(descr)))</highlight></codeline>
<codeline lineno="14740"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyFunction_Check(descr)<sp/>||<sp/>(Py_TYPE(descr)<sp/>==<sp/>&amp;PyMethodDescr_Type)))</highlight></codeline>
<codeline lineno="14742"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14743"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14744"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__Pyx_CyFunction_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyFunction_Check(descr)<sp/>||<sp/>__Pyx_CyFunction_Check(descr)))</highlight></codeline>
<codeline lineno="14746"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyFunction_Check(descr)))</highlight></codeline>
<codeline lineno="14748"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meth_found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="14752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>Py_TYPE(descr)-&gt;tp_descr_get;</highlight></codeline>
<codeline lineno="14754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>PyDescr_IsData(descr))<sp/>{</highlight></codeline>
<codeline lineno="14755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>(descr,<sp/>obj,<sp/>(PyObject<sp/>*)Py_TYPE(obj));</highlight></codeline>
<codeline lineno="14756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(descr);</highlight></codeline>
<codeline lineno="14757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>try_unpack;</highlight></codeline>
<codeline lineno="14758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14761"><highlight class="normal"><sp/><sp/><sp/><sp/>dictptr<sp/>=<sp/>_PyObject_GetDictPtr(obj);</highlight></codeline>
<codeline lineno="14762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictptr<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(dict<sp/>=<sp/>*dictptr)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="14763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(dict);</highlight></codeline>
<codeline lineno="14764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/>__Pyx_PyDict_GetItemStr(dict,<sp/>name);</highlight></codeline>
<codeline lineno="14765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="14766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(attr);</highlight></codeline>
<codeline lineno="14767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(dict);</highlight></codeline>
<codeline lineno="14768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(descr);</highlight></codeline>
<codeline lineno="14769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>try_unpack;</highlight></codeline>
<codeline lineno="14770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(dict);</highlight></codeline>
<codeline lineno="14772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meth_found)<sp/>{</highlight></codeline>
<codeline lineno="14774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*method<sp/>=<sp/>descr;</highlight></codeline>
<codeline lineno="14775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="14776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="14778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>(descr,<sp/>obj,<sp/>(PyObject<sp/>*)Py_TYPE(obj));</highlight></codeline>
<codeline lineno="14779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(descr);</highlight></codeline>
<codeline lineno="14780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>try_unpack;</highlight></codeline>
<codeline lineno="14781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="14783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*method<sp/>=<sp/>descr;</highlight></codeline>
<codeline lineno="14784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14786"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_AttributeError,</highlight></codeline>
<codeline lineno="14787"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="14788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%.50s&apos;<sp/>object<sp/>has<sp/>no<sp/>attribute<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tp_name,<sp/>name);</highlight></codeline>
<codeline lineno="14790"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%.50s&apos;<sp/>object<sp/>has<sp/>no<sp/>attribute<sp/>&apos;%.400s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tp_name,<sp/>PyString_AS_STRING(name));</highlight></codeline>
<codeline lineno="14793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14795"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14796"><highlight class="normal"><sp/><sp/><sp/><sp/>attr<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(obj,<sp/>name);</highlight></codeline>
<codeline lineno="14797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>try_unpack;</highlight></codeline>
<codeline lineno="14798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14799"><highlight class="normal">try_unpack:</highlight></codeline>
<codeline lineno="14800"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_UNPACK_METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(attr)<sp/>&amp;&amp;<sp/>PyMethod_Check(attr)<sp/>&amp;&amp;<sp/>likely(PyMethod_GET_SELF(attr)<sp/>==<sp/>obj))<sp/>{</highlight></codeline>
<codeline lineno="14802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>PyMethod_GET_FUNCTION(attr);</highlight></codeline>
<codeline lineno="14803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(attr);</highlight></codeline>
<codeline lineno="14805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*method<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="14807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14809"><highlight class="normal"><sp/><sp/><sp/><sp/>*method<sp/>=<sp/>attr;</highlight></codeline>
<codeline lineno="14810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14812"><highlight class="normal"></highlight></codeline>
<codeline lineno="14813"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PyObjectCallMethod1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14814"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx__PyObject_CallMethod1(PyObject*<sp/>method,<sp/>PyObject*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="14815"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result<sp/>=<sp/>__Pyx_PyObject_CallOneArg(method,<sp/>arg);</highlight></codeline>
<codeline lineno="14816"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(method);</highlight></codeline>
<codeline lineno="14817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyObject_CallMethod1(PyObject*<sp/>obj,<sp/>PyObject*<sp/>method_name,<sp/>PyObject*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="14820"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*method<sp/>=<sp/>NULL,<sp/>*result;</highlight></codeline>
<codeline lineno="14821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_method<sp/>=<sp/>__Pyx_PyObject_GetMethod(obj,<sp/>method_name,<sp/>&amp;method);</highlight></codeline>
<codeline lineno="14822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(is_method))<sp/>{</highlight></codeline>
<codeline lineno="14823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>__Pyx_PyObject_Call2Args(method,<sp/>obj,<sp/>arg);</highlight></codeline>
<codeline lineno="14824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(method);</highlight></codeline>
<codeline lineno="14825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!method))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx__PyObject_CallMethod1(method,<sp/>arg);</highlight></codeline>
<codeline lineno="14829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14830"><highlight class="normal"></highlight></codeline>
<codeline lineno="14831"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_Append(PyObject*<sp/>L,<sp/>PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="14833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(L)))<sp/>{</highlight></codeline>
<codeline lineno="14834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_PyList_Append(L,<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>&lt;<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14835"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>retval<sp/>=<sp/>__Pyx_PyObject_CallMethod1(L,<sp/>__pyx_n_s_append,<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="14837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!retval))</highlight></codeline>
<codeline lineno="14838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(retval);</highlight></codeline>
<codeline lineno="14840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="14842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14843"><highlight class="normal"></highlight></codeline>
<codeline lineno="14844"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SliceObject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_GetSlice(PyObject*<sp/>obj,</highlight></codeline>
<codeline lineno="14846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>cstart,<sp/>Py_ssize_t<sp/>cstop,</highlight></codeline>
<codeline lineno="14847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject**<sp/>_py_start,<sp/>PyObject**<sp/>_py_stop,<sp/>PyObject**<sp/>_py_slice,</highlight></codeline>
<codeline lineno="14848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_cstart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_cstop,<sp/>CYTHON_UNUSED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wraparound)<sp/>{</highlight></codeline>
<codeline lineno="14849"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14850"><highlight class="normal"><sp/><sp/><sp/><sp/>PyMappingMethods*<sp/>mp;</highlight></codeline>
<codeline lineno="14851"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14852"><highlight class="normal"><sp/><sp/><sp/><sp/>PySequenceMethods*<sp/>ms<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_as_sequence;</highlight></codeline>
<codeline lineno="14853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(ms<sp/>&amp;&amp;<sp/>ms-&gt;sq_slice))<sp/>{</highlight></codeline>
<codeline lineno="14854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_cstart)<sp/>{</highlight></codeline>
<codeline lineno="14855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_py_start<sp/>&amp;&amp;<sp/>(*_py_start<sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="14856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstart<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(*_py_start);</highlight></codeline>
<codeline lineno="14857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cstart<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred())<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_cstop)<sp/>{</highlight></codeline>
<codeline lineno="14862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_py_stop<sp/>&amp;&amp;<sp/>(*_py_stop<sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="14863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstop<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(*_py_stop);</highlight></codeline>
<codeline lineno="14864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cstop<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred())<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstop<sp/>=<sp/>PY_SSIZE_T_MAX;</highlight></codeline>
<codeline lineno="14867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wraparound<sp/>&amp;&amp;<sp/>unlikely((cstart<sp/>&lt;<sp/>0)<sp/>|<sp/>(cstop<sp/>&lt;<sp/>0))<sp/>&amp;&amp;<sp/>likely(ms-&gt;sq_length))<sp/>{</highlight></codeline>
<codeline lineno="14869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>l<sp/>=<sp/>ms-&gt;sq_length(obj);</highlight></codeline>
<codeline lineno="14870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(l<sp/>&gt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstop<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="14872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstop<sp/>+=<sp/>l;</highlight></codeline>
<codeline lineno="14873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstop<sp/>&lt;<sp/>0)<sp/>cstop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstart<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="14876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstart<sp/>+=<sp/>l;</highlight></codeline>
<codeline lineno="14877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstart<sp/>&lt;<sp/>0)<sp/>cstart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_ExceptionMatches(PyExc_OverflowError))</highlight></codeline>
<codeline lineno="14881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ms-&gt;sq_slice(obj,<sp/>cstart,<sp/>cstop);</highlight></codeline>
<codeline lineno="14886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14888"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>Py_TYPE(obj)-&gt;tp_as_mapping;</highlight></codeline>
<codeline lineno="14889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(mp<sp/>&amp;&amp;<sp/>mp-&gt;mp_subscript))</highlight></codeline>
<codeline lineno="14890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>result;</highlight></codeline>
<codeline lineno="14893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*py_slice,<sp/>*py_start,<sp/>*py_stop;</highlight></codeline>
<codeline lineno="14894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_py_slice)<sp/>{</highlight></codeline>
<codeline lineno="14895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_slice<sp/>=<sp/>*_py_slice;</highlight></codeline>
<codeline lineno="14896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>owned_start<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>owned_stop<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_py_start)<sp/>{</highlight></codeline>
<codeline lineno="14900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_start<sp/>=<sp/>*_py_start;</highlight></codeline>
<codeline lineno="14901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cstart)<sp/>{</highlight></codeline>
<codeline lineno="14903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_start<sp/>=<sp/>py_start<sp/>=<sp/>PyInt_FromSsize_t(cstart);</highlight></codeline>
<codeline lineno="14904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!py_start))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_start<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="14907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_py_stop)<sp/>{</highlight></codeline>
<codeline lineno="14909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_stop<sp/>=<sp/>*_py_stop;</highlight></codeline>
<codeline lineno="14910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cstop)<sp/>{</highlight></codeline>
<codeline lineno="14912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_stop<sp/>=<sp/>py_stop<sp/>=<sp/>PyInt_FromSsize_t(cstop);</highlight></codeline>
<codeline lineno="14913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!py_stop))<sp/>{</highlight></codeline>
<codeline lineno="14914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_start);</highlight></codeline>
<codeline lineno="14915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_stop<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="14919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_slice<sp/>=<sp/>PySlice_New(py_start,<sp/>py_stop,<sp/>Py_None);</highlight></codeline>
<codeline lineno="14921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_start);</highlight></codeline>
<codeline lineno="14922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(owned_stop);</highlight></codeline>
<codeline lineno="14923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!py_slice))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="14924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14925"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>mp-&gt;mp_subscript(obj,<sp/>py_slice);</highlight></codeline>
<codeline lineno="14927"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_GetItem(obj,<sp/>py_slice);</highlight></codeline>
<codeline lineno="14929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_py_slice)<sp/>{</highlight></codeline>
<codeline lineno="14931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_slice);</highlight></codeline>
<codeline lineno="14932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14935"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="14936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%.200s&apos;<sp/>object<sp/>is<sp/>unsliceable&quot;</highlight><highlight class="normal">,<sp/>Py_TYPE(obj)-&gt;tp_name);</highlight></codeline>
<codeline lineno="14937"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="14938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14940"><highlight class="normal"></highlight></codeline>
<codeline lineno="14941"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CLineInTraceback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14942"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_CLINE_IN_TRACEBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14943"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_CLineForTraceback(CYTHON_NCP_UNUSED<sp/>PyThreadState<sp/>*tstate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_line)<sp/>{</highlight></codeline>
<codeline lineno="14944"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*use_cline;</highlight></codeline>
<codeline lineno="14945"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ptype,<sp/>*pvalue,<sp/>*ptraceback;</highlight></codeline>
<codeline lineno="14946"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14947"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**cython_runtime_dict;</highlight></codeline>
<codeline lineno="14948"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_cython_runtime))<sp/>{</highlight></codeline>
<codeline lineno="14950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_line;</highlight></codeline>
<codeline lineno="14951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14952"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrFetchInState(tstate,<sp/>&amp;ptype,<sp/>&amp;pvalue,<sp/>&amp;ptraceback);</highlight></codeline>
<codeline lineno="14953"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14954"><highlight class="normal"><sp/><sp/><sp/><sp/>cython_runtime_dict<sp/>=<sp/>_PyObject_GetDictPtr(__pyx_cython_runtime);</highlight></codeline>
<codeline lineno="14955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(cython_runtime_dict))<sp/>{</highlight></codeline>
<codeline lineno="14956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_PY_DICT_LOOKUP_IF_MODIFIED(</highlight></codeline>
<codeline lineno="14957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_cline,<sp/>*cython_runtime_dict,</highlight></codeline>
<codeline lineno="14958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyDict_GetItemStr(*cython_runtime_dict,<sp/>__pyx_n_s_cline_in_traceback))</highlight></codeline>
<codeline lineno="14959"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*use_cline_obj<sp/>=<sp/>__Pyx_PyObject_GetAttrStr(__pyx_cython_runtime,<sp/>__pyx_n_s_cline_in_traceback);</highlight></codeline>
<codeline lineno="14963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_cline_obj)<sp/>{</highlight></codeline>
<codeline lineno="14964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_cline<sp/>=<sp/>PyObject_Not(use_cline_obj)<sp/>?<sp/>Py_False<sp/>:<sp/>Py_True;</highlight></codeline>
<codeline lineno="14965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(use_cline_obj);</highlight></codeline>
<codeline lineno="14966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="14968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_cline<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_cline)<sp/>{</highlight></codeline>
<codeline lineno="14972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttr(__pyx_cython_runtime,<sp/>__pyx_n_s_cline_in_traceback,<sp/>Py_False);</highlight></codeline>
<codeline lineno="14974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_cline<sp/>==<sp/>Py_False<sp/>||<sp/>(use_cline<sp/>!=<sp/>Py_True<sp/>&amp;&amp;<sp/>PyObject_Not(use_cline)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="14976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14978"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestoreInState(tstate,<sp/>ptype,<sp/>pvalue,<sp/>ptraceback);</highlight></codeline>
<codeline lineno="14979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_line;</highlight></codeline>
<codeline lineno="14980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14981"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14982"><highlight class="normal"></highlight></codeline>
<codeline lineno="14983"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CodeObjectCache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry*<sp/>entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line)<sp/>{</highlight></codeline>
<codeline lineno="14985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,<sp/>mid<sp/>=<sp/>0,<sp/>end<sp/>=<sp/>count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="14986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>code_line<sp/>&gt;<sp/>entries[end].code_line)<sp/>{</highlight></codeline>
<codeline lineno="14987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="14988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="14990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>start<sp/>+<sp/>(end<sp/>-<sp/>start)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="14991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code_line<sp/>&lt;<sp/>entries[mid].code_line)<sp/>{</highlight></codeline>
<codeline lineno="14992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="14993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code_line<sp/>&gt;<sp/>entries[mid].code_line)<sp/>{</highlight></codeline>
<codeline lineno="14994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="14995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="14997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code_line<sp/>&lt;=<sp/>entries[mid].code_line)<sp/>{</highlight></codeline>
<codeline lineno="15000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="15001"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="15003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyCodeObject<sp/>*__pyx_find_code_object(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line)<sp/>{</highlight></codeline>
<codeline lineno="15006"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject*<sp/>code_object;</highlight></codeline>
<codeline lineno="15007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="15008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!code_line)<sp/>||<sp/>unlikely(!__pyx_code_cache.entries))<sp/>{</highlight></codeline>
<codeline lineno="15009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15011"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>__pyx_bisect_code_objects(__pyx_code_cache.entries,<sp/>__pyx_code_cache.count,<sp/>code_line);</highlight></codeline>
<codeline lineno="15012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(pos<sp/>&gt;=<sp/>__pyx_code_cache.count)<sp/>||<sp/>unlikely(__pyx_code_cache.entries[pos].code_line<sp/>!=<sp/>code_line))<sp/>{</highlight></codeline>
<codeline lineno="15013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15015"><highlight class="normal"><sp/><sp/><sp/><sp/>code_object<sp/>=<sp/>__pyx_code_cache.entries[pos].code_object;</highlight></codeline>
<codeline lineno="15016"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(code_object);</highlight></codeline>
<codeline lineno="15017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code_object;</highlight></codeline>
<codeline lineno="15018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15019"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_insert_code_object(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code_line,<sp/>PyCodeObject*<sp/>code_object)<sp/>{</highlight></codeline>
<codeline lineno="15020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>i;</highlight></codeline>
<codeline lineno="15021"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_CodeObjectCacheEntry*<sp/>entries<sp/>=<sp/>__pyx_code_cache.entries;</highlight></codeline>
<codeline lineno="15022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!code_line))<sp/>{</highlight></codeline>
<codeline lineno="15023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!entries))<sp/>{</highlight></codeline>
<codeline lineno="15026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries<sp/>=<sp/>(__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__Pyx_CodeObjectCacheEntry));</highlight></codeline>
<codeline lineno="15027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(entries))<sp/>{</highlight></codeline>
<codeline lineno="15028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.entries<sp/>=<sp/>entries;</highlight></codeline>
<codeline lineno="15029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.max_count<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="15030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[0].code_line<sp/>=<sp/>code_line;</highlight></codeline>
<codeline lineno="15032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[0].code_object<sp/>=<sp/>code_object;</highlight></codeline>
<codeline lineno="15033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(code_object);</highlight></codeline>
<codeline lineno="15034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15037"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>__pyx_bisect_code_objects(__pyx_code_cache.entries,<sp/>__pyx_code_cache.count,<sp/>code_line);</highlight></codeline>
<codeline lineno="15038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>&lt;<sp/>__pyx_code_cache.count)<sp/>&amp;&amp;<sp/>unlikely(__pyx_code_cache.entries[pos].code_line<sp/>==<sp/>code_line))<sp/>{</highlight></codeline>
<codeline lineno="15039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyCodeObject*<sp/>tmp<sp/>=<sp/>entries[pos].code_object;</highlight></codeline>
<codeline lineno="15040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[pos].code_object<sp/>=<sp/>code_object;</highlight></codeline>
<codeline lineno="15041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="15042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_code_cache.count<sp/>==<sp/>__pyx_code_cache.max_count)<sp/>{</highlight></codeline>
<codeline lineno="15045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_max<sp/>=<sp/>__pyx_code_cache.max_count<sp/>+<sp/>64;</highlight></codeline>
<codeline lineno="15046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries<sp/>=<sp/>(__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(</highlight></codeline>
<codeline lineno="15047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.entries,<sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)new_max)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__Pyx_CodeObjectCacheEntry));</highlight></codeline>
<codeline lineno="15048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!entries))<sp/>{</highlight></codeline>
<codeline lineno="15049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.entries<sp/>=<sp/>entries;</highlight></codeline>
<codeline lineno="15052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_code_cache.max_count<sp/>=<sp/>new_max;</highlight></codeline>
<codeline lineno="15053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=__pyx_code_cache.count;<sp/>i&gt;pos;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="15055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[i]<sp/>=<sp/>entries[i-1];</highlight></codeline>
<codeline lineno="15056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15057"><highlight class="normal"><sp/><sp/><sp/><sp/>entries[pos].code_line<sp/>=<sp/>code_line;</highlight></codeline>
<codeline lineno="15058"><highlight class="normal"><sp/><sp/><sp/><sp/>entries[pos].code_object<sp/>=<sp/>code_object;</highlight></codeline>
<codeline lineno="15059"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_code_cache.count++;</highlight></codeline>
<codeline lineno="15060"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(code_object);</highlight></codeline>
<codeline lineno="15061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15062"><highlight class="normal"></highlight></codeline>
<codeline lineno="15063"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>AddTraceback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15064"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15065"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;frameobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15066"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;traceback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15067"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyCodeObject*<sp/>__Pyx_CreateCodeObjectForTraceback(</highlight></codeline>
<codeline lineno="15068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_line,</highlight></codeline>
<codeline lineno="15069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)<sp/>{</highlight></codeline>
<codeline lineno="15070"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject<sp/>*py_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15071"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_srcfile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15072"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_funcname<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15073"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15074"><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyString_FromString(filename);</highlight></codeline>
<codeline lineno="15075"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15076"><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyUnicode_FromString(filename);</highlight></codeline>
<codeline lineno="15077"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_srcfile)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c_line)<sp/>{</highlight></codeline>
<codeline lineno="15080"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>c_line);</highlight></codeline>
<codeline lineno="15082"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>c_line);</highlight></codeline>
<codeline lineno="15084"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15087"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromString(funcname);</highlight></codeline>
<codeline lineno="15089"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromString(funcname);</highlight></codeline>
<codeline lineno="15091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_funcname)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15094"><highlight class="normal"><sp/><sp/><sp/><sp/>py_code<sp/>=<sp/>__Pyx_PyCode_New(</highlight></codeline>
<codeline lineno="15095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="15096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="15097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="15098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="15099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="15100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_bytes,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*consts,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*names,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*varnames,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*freevars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*cellvars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_srcfile,<sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*filename,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*name,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_line,</highlight></codeline>
<codeline lineno="15109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_bytes<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*lnotab*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15110"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="15111"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(py_srcfile);</highlight></codeline>
<codeline lineno="15112"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(py_funcname);</highlight></codeline>
<codeline lineno="15113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py_code;</highlight></codeline>
<codeline lineno="15114"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="15115"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_srcfile);</highlight></codeline>
<codeline lineno="15116"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_funcname);</highlight></codeline>
<codeline lineno="15117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_line,</highlight></codeline>
<codeline lineno="15120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)<sp/>{</highlight></codeline>
<codeline lineno="15121"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject<sp/>*py_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15122"><highlight class="normal"><sp/><sp/><sp/><sp/>PyFrameObject<sp/>*py_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15123"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>__Pyx_PyThreadState_Current;</highlight></codeline>
<codeline lineno="15124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c_line)<sp/>{</highlight></codeline>
<codeline lineno="15125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_line<sp/>=<sp/>__Pyx_CLineForTraceback(tstate,<sp/>c_line);</highlight></codeline>
<codeline lineno="15126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15127"><highlight class="normal"><sp/><sp/><sp/><sp/>py_code<sp/>=<sp/>__pyx_find_code_object(c_line<sp/>?<sp/>-c_line<sp/>:<sp/>py_line);</highlight></codeline>
<codeline lineno="15128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_code)<sp/>{</highlight></codeline>
<codeline lineno="15129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_code<sp/>=<sp/>__Pyx_CreateCodeObjectForTraceback(</highlight></codeline>
<codeline lineno="15130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcname,<sp/>c_line,<sp/>py_line,<sp/>filename);</highlight></codeline>
<codeline lineno="15131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_code)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_insert_code_object(c_line<sp/>?<sp/>-c_line<sp/>:<sp/>py_line,<sp/>py_code);</highlight></codeline>
<codeline lineno="15133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15134"><highlight class="normal"><sp/><sp/><sp/><sp/>py_frame<sp/>=<sp/>PyFrame_New(</highlight></codeline>
<codeline lineno="15135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyThreadState<sp/>*tstate,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_code,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyCodeObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_d,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*globals,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*locals*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15139"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="15140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_frame)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15141"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyFrame_SetLineNumber(py_frame,<sp/>py_line);</highlight></codeline>
<codeline lineno="15142"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTraceBack_Here(py_frame);</highlight></codeline>
<codeline lineno="15143"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="15144"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_code);</highlight></codeline>
<codeline lineno="15145"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_frame);</highlight></codeline>
<codeline lineno="15146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15147"><highlight class="normal"></highlight></codeline>
<codeline lineno="15148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntToPy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyInt_From_int(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="15150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(int)<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>0<sp/>-<sp/>(int)<sp/>1),<sp/>const_zero<sp/>=<sp/>(int)<sp/>0;</highlight></codeline>
<codeline lineno="15151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="15152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="15153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)<sp/>value);</highlight></codeline>
<codeline lineno="15160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)<sp/>value);</highlight></codeline>
<codeline lineno="15168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>little<sp/>=<sp/>(int)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;one;</highlight></codeline>
<codeline lineno="15173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;value;</highlight></codeline>
<codeline lineno="15174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_PyLong_FromByteArray(bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="15175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>little,<sp/>!is_unsigned);</highlight></codeline>
<codeline lineno="15176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15178"><highlight class="normal"></highlight></codeline>
<codeline lineno="15179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntFromPyVerify<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_VERIFY_RETURN_INT(target_type,<sp/>func_type,<sp/>func_value)\</highlight></codeline>
<codeline lineno="15181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__PYX__VERIFY_RETURN_INT(target_type,<sp/>func_type,<sp/>func_value,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_VERIFY_RETURN_INT_EXC(target_type,<sp/>func_type,<sp/>func_value)\</highlight></codeline>
<codeline lineno="15183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__PYX__VERIFY_RETURN_INT(target_type,<sp/>func_type,<sp/>func_value,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX__VERIFY_RETURN_INT(target_type,<sp/>func_type,<sp/>func_value,<sp/>exc)\</highlight></codeline>
<codeline lineno="15185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="15186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_type<sp/>value<sp/>=<sp/>func_value;\</highlight></codeline>
<codeline lineno="15187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(sizeof(target_type)<sp/>&lt;<sp/>sizeof(func_type))<sp/>{\</highlight></codeline>
<codeline lineno="15188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(unlikely(value<sp/>!=<sp/>(func_type)<sp/>(target_type)<sp/>value))<sp/>{\</highlight></codeline>
<codeline lineno="15189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_type<sp/>zero<sp/>=<sp/>0;\</highlight></codeline>
<codeline lineno="15190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(exc<sp/>&amp;&amp;<sp/>unlikely(value<sp/>==<sp/>(func_type)-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))\</highlight></codeline>
<codeline lineno="15191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(target_type)<sp/>-1;\</highlight></codeline>
<codeline lineno="15192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(value<sp/>&lt;<sp/>zero))\</highlight></codeline>
<codeline lineno="15193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>raise_neg_overflow;\</highlight></codeline>
<codeline lineno="15194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else\</highlight></codeline>
<codeline lineno="15195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>raise_overflow;\</highlight></codeline>
<codeline lineno="15196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="15197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="15198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(target_type)<sp/>value;\</highlight></codeline>
<codeline lineno="15199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15200"><highlight class="normal"></highlight></codeline>
<codeline lineno="15201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetStdout(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="15204"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>PySys_GetObject((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;stdout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;lost<sp/>sys.stdout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="15209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject*<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>PyObject<sp/>*arg_tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newline)<sp/>{</highlight></codeline>
<codeline lineno="15211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="15212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>__Pyx_GetStdout()))</highlight></codeline>
<codeline lineno="15214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15216"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>PyTuple_GET_SIZE(arg_tuple);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="15218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>v;</highlight></codeline>
<codeline lineno="15219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_SoftSpace(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="15220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PyTuple_GET_ITEM(arg_tuple,<sp/>i);</highlight></codeline>
<codeline lineno="15224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteObject(v,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>Py_PRINT_RAW)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_Check(v))<sp/>{</highlight></codeline>
<codeline lineno="15227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>PyString_AsString(v);</highlight></codeline>
<codeline lineno="15228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>len<sp/>=<sp/>PyString_Size(v);</highlight></codeline>
<codeline lineno="15229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="15230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s[len-1])<sp/>{</highlight></codeline>
<codeline lineno="15231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFile_SoftSpace(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="15234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline)<sp/>{</highlight></codeline>
<codeline lineno="15241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFile_SoftSpace(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="15244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15245"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15247"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="15248"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15251"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject*<sp/>stream,<sp/>PyObject<sp/>*arg_tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newline)<sp/>{</highlight></codeline>
<codeline lineno="15253"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>kwargs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15254"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15255"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>end_string;</highlight></codeline>
<codeline lineno="15256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_print))<sp/>{</highlight></codeline>
<codeline lineno="15257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_print<sp/>=<sp/>PyObject_GetAttr(__pyx_b,<sp/>__pyx_n_s_print);</highlight></codeline>
<codeline lineno="15258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_print)</highlight></codeline>
<codeline lineno="15259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream)<sp/>{</highlight></codeline>
<codeline lineno="15262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="15263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!kwargs))</highlight></codeline>
<codeline lineno="15264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyDict_SetItem(kwargs,<sp/>__pyx_n_s_file_2,<sp/>stream)<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="15266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newline)<sp/>{</highlight></codeline>
<codeline lineno="15268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_string<sp/>=<sp/>PyUnicode_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="15269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!end_string))</highlight></codeline>
<codeline lineno="15270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(kwargs,<sp/>__pyx_n_s_end,<sp/>end_string)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="15272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="15273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="15274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="15276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newline)<sp/>{</highlight></codeline>
<codeline lineno="15278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_print_kwargs))<sp/>{</highlight></codeline>
<codeline lineno="15279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_print_kwargs<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="15280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_print_kwargs))</highlight></codeline>
<codeline lineno="15281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_string<sp/>=<sp/>PyUnicode_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="15283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!end_string))</highlight></codeline>
<codeline lineno="15284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_print_kwargs,<sp/>__pyx_n_s_end,<sp/>end_string)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="15286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="15287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="15290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>=<sp/>__pyx_print_kwargs;</highlight></codeline>
<codeline lineno="15292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15293"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_Call(__pyx_print,<sp/>arg_tuple,<sp/>kwargs);</highlight></codeline>
<codeline lineno="15294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kwargs)<sp/>&amp;&amp;<sp/>(kwargs<sp/>!=<sp/>__pyx_print_kwargs))</highlight></codeline>
<codeline lineno="15295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(kwargs);</highlight></codeline>
<codeline lineno="15296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="15297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15298"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(result);</highlight></codeline>
<codeline lineno="15299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15300"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="15301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwargs<sp/>!=<sp/>__pyx_print_kwargs)</highlight></codeline>
<codeline lineno="15302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(kwargs);</highlight></codeline>
<codeline lineno="15303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15306"><highlight class="normal"></highlight></codeline>
<codeline lineno="15307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntToPy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyInt_From_long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="15309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(long)<sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>0<sp/>-<sp/>(long)<sp/>1),<sp/>const_zero<sp/>=<sp/>(long)<sp/>0;</highlight></codeline>
<codeline lineno="15310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="15311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="15312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)<sp/>value);</highlight></codeline>
<codeline lineno="15319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="15324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)<sp/>value);</highlight></codeline>
<codeline lineno="15327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>little<sp/>=<sp/>(int)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;one;</highlight></codeline>
<codeline lineno="15332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;value;</highlight></codeline>
<codeline lineno="15333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_PyLong_FromByteArray(bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="15334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>little,<sp/>!is_unsigned);</highlight></codeline>
<codeline lineno="15335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15337"><highlight class="normal"></highlight></codeline>
<codeline lineno="15338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntFromPy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_As_int(PyObject<sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(int)<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>0<sp/>-<sp/>(int)<sp/>1),<sp/>const_zero<sp/>=<sp/>(int)<sp/>0;</highlight></codeline>
<codeline lineno="15341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="15342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="15344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyInt_AS_LONG(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>val;</highlight></codeline>
<codeline lineno="15352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15353"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="15356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="15357"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="15359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="15360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>0;</highlight></codeline>
<codeline lineno="15361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>digit,<sp/>digits[0])</highlight></codeline>
<codeline lineno="15362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="15363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;=<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((((int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="15368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="15372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;=<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((((((int)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[0]));</highlight></codeline>
<codeline lineno="15377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="15381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;=<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((((((((int)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="15386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15391"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15395"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PyObject_RichCompareBool(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>,<sp/>Py_False,<sp/>Py_LT);</highlight></codeline>
<codeline lineno="15398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(result<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="15399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(result<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="15401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyLong_AsUnsignedLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15406"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG,<sp/>PyLong_AsUnsignedLongLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15412"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="15414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="15415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>0;</highlight></codeline>
<codeline lineno="15416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>sdigit,<sp/>(sdigit)<sp/>(-(sdigit)digits[0]))</highlight></codeline>
<codeline lineno="15417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/>digit,<sp/>+digits[0])</highlight></codeline>
<codeline lineno="15418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-2:</highlight></codeline>
<codeline lineno="15419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((int)-1)*(((((int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="15428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((((((int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-3:</highlight></codeline>
<codeline lineno="15437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((int)-1)*(((((((int)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[0])));</highlight></codeline>
<codeline lineno="15442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="15446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((((((((int)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[0])));</highlight></codeline>
<codeline lineno="15451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-4:</highlight></codeline>
<codeline lineno="15455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((int)-1)*(((((((((int)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="15464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((((((((((int)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(int)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyLong_AsLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15476"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>PY_LONG_LONG,<sp/>PyLong_AsLongLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(_PyLong_AsByteArray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,</highlight></codeline>
<codeline lineno="15485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_PyLong_AsByteArray()<sp/>not<sp/>available<sp/>in<sp/>PyPy,<sp/>cannot<sp/>convert<sp/>large<sp/>numbers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15486"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*v<sp/>=<sp/>__Pyx_PyNumber_IntOrLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15489"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(v)<sp/>&amp;&amp;<sp/>!PyLong_Check(v))<sp/>{</highlight></codeline>
<codeline lineno="15491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="15492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PyNumber_Long(tmp);</highlight></codeline>
<codeline lineno="15493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="15494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(v))<sp/>{</highlight></codeline>
<codeline lineno="15497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_little<sp/>=<sp/>(int)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;one;</highlight></codeline>
<codeline lineno="15498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;val;</highlight></codeline>
<codeline lineno="15499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>_PyLong_AsByteArray((PyLongObject<sp/>*)v,</highlight></codeline>
<codeline lineno="15500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val),</highlight></codeline>
<codeline lineno="15501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_little,<sp/>!is_unsigned);</highlight></codeline>
<codeline lineno="15502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(v);</highlight></codeline>
<codeline lineno="15503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!ret))</highlight></codeline>
<codeline lineno="15504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_IntOrLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_As_int(tmp);</highlight></codeline>
<codeline lineno="15514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="15515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15517"><highlight class="normal">raise_overflow:</highlight></codeline>
<codeline lineno="15518"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="15519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15521"><highlight class="normal">raise_neg_overflow:</highlight></codeline>
<codeline lineno="15522"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="15523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15526"><highlight class="normal"></highlight></codeline>
<codeline lineno="15527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CIntFromPy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_As_long(PyObject<sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(long)<sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>0<sp/>-<sp/>(long)<sp/>1),<sp/>const_zero<sp/>=<sp/>(long)<sp/>0;</highlight></codeline>
<codeline lineno="15530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="15531"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="15533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyInt_AS_LONG(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>val;</highlight></codeline>
<codeline lineno="15541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15542"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15543"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="15545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="15546"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="15548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="15549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>0;</highlight></codeline>
<codeline lineno="15550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>digit,<sp/>digits[0])</highlight></codeline>
<codeline lineno="15551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="15552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;=<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="15557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="15561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;=<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((long)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[0]));</highlight></codeline>
<codeline lineno="15566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="15570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;=<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((((long)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="15575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15580"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15584"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PyObject_RichCompareBool(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>,<sp/>Py_False,<sp/>Py_LT);</highlight></codeline>
<codeline lineno="15587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(result<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="15588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(result<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="15590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_neg_overflow;</highlight></codeline>
<codeline lineno="15591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="15594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyLong_AsUnsignedLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15595"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG,<sp/>PyLong_AsUnsignedLongLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15601"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="15603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Py_SIZE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="15604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>0;</highlight></codeline>
<codeline lineno="15605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>sdigit,<sp/>(sdigit)<sp/>(-(sdigit)digits[0]))</highlight></codeline>
<codeline lineno="15606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/><sp/>digit,<sp/>+digits[0])</highlight></codeline>
<codeline lineno="15607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-2:</highlight></codeline>
<codeline lineno="15608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((long)-1)*(((((long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="15617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>1<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>((((((long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-3:</highlight></codeline>
<codeline lineno="15626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((long)-1)*(((((((long)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[0])));</highlight></codeline>
<codeline lineno="15631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="15635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>((((((((long)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[0])));</highlight></codeline>
<codeline lineno="15640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-4:</highlight></codeline>
<codeline lineno="15644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(((long)-1)*(((((((((long)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="15653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>(((((((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])))</highlight></codeline>
<codeline lineno="15656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-<sp/>1<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="15657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>((((((((((long)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(long)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)digits[0])));</highlight></codeline>
<codeline lineno="15658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="15664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PyLong_AsLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="15667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__PYX_VERIFY_RETURN_INT_EXC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>PY_LONG_LONG,<sp/>PyLong_AsLongLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))</highlight></codeline>
<codeline lineno="15668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15672"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>!defined(_PyLong_AsByteArray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,</highlight></codeline>
<codeline lineno="15674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_PyLong_AsByteArray()<sp/>not<sp/>available<sp/>in<sp/>PyPy,<sp/>cannot<sp/>convert<sp/>large<sp/>numbers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15675"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*v<sp/>=<sp/>__Pyx_PyNumber_IntOrLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15678"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(v)<sp/>&amp;&amp;<sp/>!PyLong_Check(v))<sp/>{</highlight></codeline>
<codeline lineno="15680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="15681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PyNumber_Long(tmp);</highlight></codeline>
<codeline lineno="15682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="15683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15684"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(v))<sp/>{</highlight></codeline>
<codeline lineno="15686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_little<sp/>=<sp/>(int)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;one;</highlight></codeline>
<codeline lineno="15687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;val;</highlight></codeline>
<codeline lineno="15688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>_PyLong_AsByteArray((PyLongObject<sp/>*)v,</highlight></codeline>
<codeline lineno="15689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val),</highlight></codeline>
<codeline lineno="15690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_little,<sp/>!is_unsigned);</highlight></codeline>
<codeline lineno="15691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(v);</highlight></codeline>
<codeline lineno="15692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(!ret))</highlight></codeline>
<codeline lineno="15693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15698"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_IntOrLong(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_As_long(tmp);</highlight></codeline>
<codeline lineno="15703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="15704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="15705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15706"><highlight class="normal">raise_overflow:</highlight></codeline>
<codeline lineno="15707"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="15708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15710"><highlight class="normal">raise_neg_overflow:</highlight></codeline>
<codeline lineno="15711"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="15712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>-1;</highlight></codeline>
<codeline lineno="15714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15715"><highlight class="normal"></highlight></codeline>
<codeline lineno="15716"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PrintOne<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15717"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_COMPILING_IN_PYPY<sp/>&amp;&amp;<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject*<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="15719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref><sp/>=<sp/>__Pyx_GetStdout()))</highlight></codeline>
<codeline lineno="15721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15723"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_SoftSpace(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteObject(o,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>Py_PRINT_RAW)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="15731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="15732"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15734"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="15735"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="15736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>line<sp/>below<sp/>is<sp/>just<sp/>to<sp/>avoid<sp/>C<sp/>compiler</highlight></codeline>
<codeline lineno="15738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>warnings<sp/>about<sp/>unused<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_Print(<ref refid="namespacetest__pool_1a5248ada9dc85810b1d7a1ee20ebdbeb9" kindref="member">f</ref>,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="15740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15741"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject*<sp/>stream,<sp/>PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="15743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="15744"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>arg_tuple<sp/>=<sp/>PyTuple_Pack(1,<sp/>o);</highlight></codeline>
<codeline lineno="15745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!arg_tuple))</highlight></codeline>
<codeline lineno="15746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15747"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>__Pyx_Print(stream,<sp/>arg_tuple,<sp/>1);</highlight></codeline>
<codeline lineno="15748"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(arg_tuple);</highlight></codeline>
<codeline lineno="15749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="15750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15751"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15752"><highlight class="normal"></highlight></codeline>
<codeline lineno="15753"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FastTypeChecks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15754"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_COMPILING_IN_CPYTHON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InBases(PyTypeObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyTypeObject<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="15756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>=<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>-&gt;tp_base;</highlight></codeline>
<codeline lineno="15758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>==<sp/>b)</highlight></codeline>
<codeline lineno="15759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>==<sp/>&amp;PyBaseObject_Type;</highlight></codeline>
<codeline lineno="15762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_IsSubtype(PyTypeObject<sp/>*<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>PyTypeObject<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="15764"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*mro;</highlight></codeline>
<codeline lineno="15765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref><sp/>==<sp/>b)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15766"><highlight class="normal"><sp/><sp/><sp/><sp/>mro<sp/>=<sp/><ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>-&gt;tp_mro;</highlight></codeline>
<codeline lineno="15767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(mro))<sp/>{</highlight></codeline>
<codeline lineno="15768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="15769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>PyTuple_GET_SIZE(mro);</highlight></codeline>
<codeline lineno="15770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="15771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_ITEM(mro,<sp/>i)<sp/>==<sp/>(PyObject<sp/>*)b)</highlight></codeline>
<codeline lineno="15772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_InBases(<ref refid="namespacetest__pool_1a617b2f99bbbe88209c1921ee8551548d" kindref="member">a</ref>,<sp/>b);</highlight></codeline>
<codeline lineno="15777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15778"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_inner_PyErr_GivenExceptionMatches2(PyObject<sp/>*err,<sp/>PyObject*<sp/>exc_type1,<sp/>PyObject*<sp/>exc_type2)<sp/>{</highlight></codeline>
<codeline lineno="15780"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*exception,<sp/>*value,<sp/>*tb;</highlight></codeline>
<codeline lineno="15781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="15782"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_declare</highlight></codeline>
<codeline lineno="15783"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_PyThreadState_assign</highlight></codeline>
<codeline lineno="15784"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrFetch(&amp;exception,<sp/>&amp;value,<sp/>&amp;tb);</highlight></codeline>
<codeline lineno="15785"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>exc_type1<sp/>?<sp/>PyObject_IsSubclass(err,<sp/>exc_type1)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="15786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(res<sp/>==<sp/>-1))<sp/>{</highlight></codeline>
<codeline lineno="15787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_WriteUnraisable(err);</highlight></codeline>
<codeline lineno="15788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)<sp/>{</highlight></codeline>
<codeline lineno="15791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyObject_IsSubclass(err,<sp/>exc_type2);</highlight></codeline>
<codeline lineno="15792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(res<sp/>==<sp/>-1))<sp/>{</highlight></codeline>
<codeline lineno="15793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_WriteUnraisable(err);</highlight></codeline>
<codeline lineno="15794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15797"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(exception,<sp/>value,<sp/>tb);</highlight></codeline>
<codeline lineno="15798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="15799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15800"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_inner_PyErr_GivenExceptionMatches2(PyObject<sp/>*err,<sp/>PyObject*<sp/>exc_type1,<sp/>PyObject<sp/>*exc_type2)<sp/>{</highlight></codeline>
<codeline lineno="15802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>exc_type1<sp/>?<sp/>__Pyx_IsSubtype((PyTypeObject*)err,<sp/>(PyTypeObject*)exc_type1)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="15803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)<sp/>{</highlight></codeline>
<codeline lineno="15804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>__Pyx_IsSubtype((PyTypeObject*)err,<sp/>(PyTypeObject*)exc_type2);</highlight></codeline>
<codeline lineno="15805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="15807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatchesTuple(PyObject<sp/>*exc_type,<sp/>PyObject<sp/>*tuple)<sp/>{</highlight></codeline>
<codeline lineno="15810"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i,<sp/>n;</highlight></codeline>
<codeline lineno="15811"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(PyExceptionClass_Check(exc_type));</highlight></codeline>
<codeline lineno="15812"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>PyTuple_GET_SIZE(tuple);</highlight></codeline>
<codeline lineno="15813"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="15815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exc_type<sp/>==<sp/>PyTuple_GET_ITEM(tuple,<sp/>i))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15817"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="15819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*t<sp/>=<sp/>PyTuple_GET_ITEM(tuple,<sp/>i);</highlight></codeline>
<codeline lineno="15820"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(exc_type<sp/>==<sp/>t))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15822"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyExceptionClass_Check(t)))<sp/>{</highlight></codeline>
<codeline lineno="15824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type,<sp/>NULL,<sp/>t))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15830"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatches(PyObject<sp/>*err,<sp/>PyObject*<sp/>exc_type)<sp/>{</highlight></codeline>
<codeline lineno="15831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(err<sp/>==<sp/>exc_type))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyExceptionClass_Check(err)))<sp/>{</highlight></codeline>
<codeline lineno="15833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyExceptionClass_Check(exc_type)))<sp/>{</highlight></codeline>
<codeline lineno="15834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_inner_PyErr_GivenExceptionMatches2(err,<sp/>NULL,<sp/>exc_type);</highlight></codeline>
<codeline lineno="15835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_Check(exc_type)))<sp/>{</highlight></codeline>
<codeline lineno="15836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatchesTuple(err,<sp/>exc_type);</highlight></codeline>
<codeline lineno="15837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyErr_GivenExceptionMatches(err,<sp/>exc_type);</highlight></codeline>
<codeline lineno="15841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15842"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyErr_GivenExceptionMatches2(PyObject<sp/>*err,<sp/>PyObject<sp/>*exc_type1,<sp/>PyObject<sp/>*exc_type2)<sp/>{</highlight></codeline>
<codeline lineno="15843"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(PyExceptionClass_Check(exc_type1));</highlight></codeline>
<codeline lineno="15844"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(PyExceptionClass_Check(exc_type2));</highlight></codeline>
<codeline lineno="15845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(err<sp/>==<sp/>exc_type1<sp/>||<sp/>err<sp/>==<sp/>exc_type2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="15846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyExceptionClass_Check(err)))<sp/>{</highlight></codeline>
<codeline lineno="15847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_inner_PyErr_GivenExceptionMatches2(err,<sp/>exc_type1,<sp/>exc_type2);</highlight></codeline>
<codeline lineno="15848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PyErr_GivenExceptionMatches(err,<sp/>exc_type1)<sp/>||<sp/>PyErr_GivenExceptionMatches(err,<sp/>exc_type2));</highlight></codeline>
<codeline lineno="15850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15852"><highlight class="normal"></highlight></codeline>
<codeline lineno="15853"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CheckBinaryVersion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_check_binary_version(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="15855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ctversion[4],<sp/>rtversion[4];</highlight></codeline>
<codeline lineno="15856"><highlight class="normal"><sp/><sp/><sp/><sp/>PyOS_snprintf(ctversion,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;%d.%d&quot;</highlight><highlight class="normal">,<sp/>PY_MAJOR_VERSION,<sp/>PY_MINOR_VERSION);</highlight></codeline>
<codeline lineno="15857"><highlight class="normal"><sp/><sp/><sp/><sp/>PyOS_snprintf(rtversion,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Py_GetVersion());</highlight></codeline>
<codeline lineno="15858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctversion[0]<sp/>!=<sp/>rtversion[0]<sp/>||<sp/>ctversion[2]<sp/>!=<sp/>rtversion[2])<sp/>{</highlight></codeline>
<codeline lineno="15859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[200];</highlight></codeline>
<codeline lineno="15860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyOS_snprintf(message,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message),</highlight></codeline>
<codeline lineno="15861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compiletime<sp/>version<sp/>%s<sp/>of<sp/>module<sp/>&apos;%.100s&apos;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>match<sp/>runtime<sp/>version<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctversion,<sp/>__Pyx_MODULE_NAME,<sp/>rtversion);</highlight></codeline>
<codeline lineno="15864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyErr_WarnEx(NULL,<sp/>message,<sp/>1);</highlight></codeline>
<codeline lineno="15865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15868"><highlight class="normal"></highlight></codeline>
<codeline lineno="15869"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>InitStrings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15870"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(__Pyx_StringTabEntry<sp/>*t)<sp/>{</highlight></codeline>
<codeline lineno="15871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t-&gt;p)<sp/>{</highlight></codeline>
<codeline lineno="15872"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="15874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_DecodeUTF8(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="15875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;intern)<sp/>{</highlight></codeline>
<codeline lineno="15876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="15877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="15879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15880"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode<sp/>|<sp/>t-&gt;is_str)<sp/>{</highlight></codeline>
<codeline lineno="15882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;intern)<sp/>{</highlight></codeline>
<codeline lineno="15883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="15884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;encoding)<sp/>{</highlight></codeline>
<codeline lineno="15885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_Decode(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1,<sp/>t-&gt;encoding,<sp/>NULL);</highlight></codeline>
<codeline lineno="15886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="15888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyBytes_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="15891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15892"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*t-&gt;p)</highlight></codeline>
<codeline lineno="15894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_Hash(*t-&gt;p)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="15896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++t;</highlight></codeline>
<codeline lineno="15898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15901"><highlight class="normal"></highlight></codeline>
<codeline lineno="15902"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyUnicode_FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c_str)<sp/>{</highlight></codeline>
<codeline lineno="15903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyUnicode_FromStringAndSize(c_str,<sp/>(Py_ssize_t)strlen(c_str));</highlight></codeline>
<codeline lineno="15904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15905"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyObject_AsString(PyObject*<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="15906"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>ignore;</highlight></codeline>
<codeline lineno="15907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyObject_AsStringAndSize(o,<sp/>&amp;ignore);</highlight></codeline>
<codeline lineno="15908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15909"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII<sp/>||<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!CYTHON_PEP393_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15911"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyUnicode_AsStringAndSize(PyObject*<sp/>o,<sp/>Py_ssize_t<sp/>*length)<sp/>{</highlight></codeline>
<codeline lineno="15912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>defenc_c;</highlight></codeline>
<codeline lineno="15913"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>defenc<sp/>=<sp/>_PyUnicode_AsDefaultEncodedString(o,<sp/>NULL);</highlight></codeline>
<codeline lineno="15914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!defenc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15915"><highlight class="normal"><sp/><sp/><sp/><sp/>defenc_c<sp/>=<sp/>PyBytes_AS_STRING(defenc);</highlight></codeline>
<codeline lineno="15916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/>defenc_c<sp/>+<sp/>PyBytes_GET_SIZE(defenc);</highlight></codeline>
<codeline lineno="15919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="15920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref><sp/>=<sp/>defenc_c;<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref><sp/>&lt;<sp/>end;<sp/><ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="15921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(*<ref refid="namespacetest__kmeans_1a923f35c4afada529730839eb2d997bb9" kindref="member">c</ref>)<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="15922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_AsASCIIString(o);</highlight></codeline>
<codeline lineno="15923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15927"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15928"><highlight class="normal"><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>PyBytes_GET_SIZE(defenc);</highlight></codeline>
<codeline lineno="15929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defenc_c;</highlight></codeline>
<codeline lineno="15930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15931"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyUnicode_AsStringAndSize(PyObject*<sp/>o,<sp/>Py_ssize_t<sp/>*length)<sp/>{</highlight></codeline>
<codeline lineno="15933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_PyUnicode_READY(o)<sp/>==<sp/>-1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15934"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyUnicode_IS_ASCII(o)))<sp/>{</highlight></codeline>
<codeline lineno="15936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>PyUnicode_GET_LENGTH(o);</highlight></codeline>
<codeline lineno="15937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_AsUTF8(o);</highlight></codeline>
<codeline lineno="15938"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_AsASCIIString(o);</highlight></codeline>
<codeline lineno="15940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15942"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_AsUTF8AndSize(o,<sp/>length);</highlight></codeline>
<codeline lineno="15944"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15946"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15947"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15948"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__Pyx_PyObject_AsStringAndSize(PyObject*<sp/>o,<sp/>Py_ssize_t<sp/>*length)<sp/>{</highlight></codeline>
<codeline lineno="15949"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII<sp/>||<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="15951"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>__PYX_DEFAULT_STRING_ENCODING_IS_ASCII</highlight></codeline>
<codeline lineno="15952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_sys_getdefaultencoding_not_ascii<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="15953"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="15954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Check(o))<sp/>{</highlight></codeline>
<codeline lineno="15955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyUnicode_AsStringAndSize(o,<sp/>length);</highlight></codeline>
<codeline lineno="15956"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15958"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!CYTHON_COMPILING_IN_PYPY)<sp/>||<sp/>(defined(PyByteArray_AS_STRING)<sp/>&amp;&amp;<sp/>defined(PyByteArray_GET_SIZE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyByteArray_Check(o))<sp/>{</highlight></codeline>
<codeline lineno="15960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>PyByteArray_GET_SIZE(o);</highlight></codeline>
<codeline lineno="15961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyByteArray_AS_STRING(o);</highlight></codeline>
<codeline lineno="15962"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result;</highlight></codeline>
<codeline lineno="15966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>PyBytes_AsStringAndSize(o,<sp/>&amp;result,<sp/>length);</highlight></codeline>
<codeline lineno="15967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(r<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="15968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_true<sp/>=<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>==<sp/>Py_True;</highlight></codeline>
<codeline lineno="15976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_true<sp/>|<sp/>(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>==<sp/>Py_False)<sp/>|<sp/>(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>==<sp/>Py_None))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_true;</highlight></codeline>
<codeline lineno="15977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_IsTrue(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrueAndDecref(PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="15981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15982"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>__Pyx_PyObject_IsTrue(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15983"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="15984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="15985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15986"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__Pyx_PyNumber_IntOrLongWrongResultType(PyObject*<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_name)<sp/>{</highlight></codeline>
<codeline lineno="15987"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyLong_Check(result))<sp/>{</highlight></codeline>
<codeline lineno="15989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_WarnFormat(PyExc_DeprecationWarning,<sp/>1,</highlight></codeline>
<codeline lineno="15990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__int__<sp/>returned<sp/>non-int<sp/>(type<sp/>%.200s).<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>ability<sp/>to<sp/>return<sp/>an<sp/>instance<sp/>of<sp/>a<sp/>strict<sp/>subclass<sp/>of<sp/>int<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>deprecated,<sp/>and<sp/>may<sp/>be<sp/>removed<sp/>in<sp/>a<sp/>future<sp/>version<sp/>of<sp/>Python.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(result)-&gt;tp_name))<sp/>{</highlight></codeline>
<codeline lineno="15994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(result);</highlight></codeline>
<codeline lineno="15995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16000"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="16001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__%.4s__<sp/>returned<sp/>non-%.4s<sp/>(type<sp/>%.200s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_name,<sp/>type_name,<sp/>Py_TYPE(result)-&gt;tp_name);</highlight></codeline>
<codeline lineno="16003"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(result);</highlight></codeline>
<codeline lineno="16004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="16005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16006"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_IntOrLong(PyObject*<sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="16007"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16008"><highlight class="normal"><sp/><sp/>PyNumberMethods<sp/>*m;</highlight></codeline>
<codeline lineno="16009"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="16011"><highlight class="normal"><sp/><sp/>PyObject<sp/>*res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="16012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>||<sp/>PyLong_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))</highlight></codeline>
<codeline lineno="16014"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)))</highlight></codeline>
<codeline lineno="16016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_NewRef(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_USE_TYPE_SLOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16019"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>Py_TYPE(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)-&gt;tp_as_number;</highlight></codeline>
<codeline lineno="16020"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int)<sp/>{</highlight></codeline>
<codeline lineno="16022"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16023"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>m-&gt;nb_int(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_long)<sp/>{</highlight></codeline>
<codeline lineno="16026"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;long&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16027"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>m-&gt;nb_long(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16029"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int))<sp/>{</highlight></codeline>
<codeline lineno="16031"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16032"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>m-&gt;nb_int(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16034"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16035"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyBytes_CheckExact(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>!PyUnicode_CheckExact(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="16037"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Int(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(res))<sp/>{</highlight></codeline>
<codeline lineno="16041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyInt_Check(res)<sp/>&amp;&amp;<sp/>!PyLong_Check(res)))<sp/>{</highlight></codeline>
<codeline lineno="16043"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyLong_CheckExact(res)))<sp/>{</highlight></codeline>
<codeline lineno="16045"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_PyNumber_IntOrLongWrongResultType(res,<sp/>name);</highlight></codeline>
<codeline lineno="16047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="16050"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="16051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;an<sp/>integer<sp/>is<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16052"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="16054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16055"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="16056"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>ival;</highlight></codeline>
<codeline lineno="16057"><highlight class="normal"><sp/><sp/>PyObject<sp/>*<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="16058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(b)))<sp/>{</highlight></codeline>
<codeline lineno="16060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="16061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_AS_LONG(b);</highlight></codeline>
<codeline lineno="16062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_AsSsize_t(b);</highlight></codeline>
<codeline lineno="16064"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(b)))<sp/>{</highlight></codeline>
<codeline lineno="16067"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>CYTHON_USE_PYLONG_INTERNALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>digit*<sp/>digits<sp/>=<sp/>((PyLongObject*)b)-&gt;ob_digit;</highlight></codeline>
<codeline lineno="16069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>size<sp/>=<sp/>Py_SIZE(b);</highlight></codeline>
<codeline lineno="16070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(__Pyx_sst_abs(size)<sp/>&lt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="16071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/>=<sp/>likely(size)<sp/>?<sp/>digits[0]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="16072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>-1)<sp/>ival<sp/>=<sp/>-ival;</highlight></codeline>
<codeline lineno="16073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="16074"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(size)<sp/>{</highlight></codeline>
<codeline lineno="16076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="16077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Py_ssize_t)<sp/>(((((size_t)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="16079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-2:</highlight></codeline>
<codeline lineno="16082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>2<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(Py_ssize_t)<sp/>(((((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[0]));</highlight></codeline>
<codeline lineno="16084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="16087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Py_ssize_t)<sp/>(((((((size_t)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[0]));</highlight></codeline>
<codeline lineno="16089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-3:</highlight></codeline>
<codeline lineno="16092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>3<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(Py_ssize_t)<sp/>(((((((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="16094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="16097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Py_ssize_t)<sp/>(((((((((size_t)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[0]));</highlight></codeline>
<codeline lineno="16099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-4:</highlight></codeline>
<codeline lineno="16102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Py_ssize_t)<sp/>&gt;<sp/>4<sp/>*<sp/>PyLong_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="16103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(Py_ssize_t)<sp/>(((((((((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[3])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[2])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)digits[1])<sp/>&lt;&lt;<sp/>PyLong_SHIFT)<sp/>|<sp/>(size_t)digits[0]));</highlight></codeline>
<codeline lineno="16104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsSsize_t(b);</highlight></codeline>
<codeline lineno="16110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16111"><highlight class="normal"><sp/><sp/><ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref><sp/>=<sp/>PyNumber_Index(b);</highlight></codeline>
<codeline lineno="16112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16113"><highlight class="normal"><sp/><sp/>ival<sp/>=<sp/>PyInt_AsSsize_t(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16114"><highlight class="normal"><sp/><sp/>Py_DECREF(<ref refid="namespaceseine__data__utils__py_1a260bceb3365a8f915cbce8e15b383a9c" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="16115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="16116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyBool_FromLong(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="16118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>?<sp/>__Pyx_NewRef(Py_True)<sp/>:<sp/>__Pyx_NewRef(Py_False);</highlight></codeline>
<codeline lineno="16119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ival)<sp/>{</highlight></codeline>
<codeline lineno="16121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromSize_t(ival);</highlight></codeline>
<codeline lineno="16122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16123"><highlight class="normal"></highlight></codeline>
<codeline lineno="16124"><highlight class="normal"></highlight></codeline>
<codeline lineno="16125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_PYTHON_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/clusterizer/utils/seine_data_utils.c"/>
  </compounddef>
</doxygen>
