<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="test_8py" kind="file" language="Python">
    <compoundname>test.py</compoundname>
    <innernamespace refid="namespacetest">test</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="4"><highlight class="normal">sys.path.append(</highlight><highlight class="stringliteral">&quot;../..&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>clusterizer</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>clusterizer_utils</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>src.clusterizer.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NAF_utils</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespacetest_1af1bc2423c9adf840e19f312208b984c0" refkind="member"><highlight class="normal">df_test<sp/>=<sp/><ref refid="namespaceclusterizer_1aeec4083b19ab1b2b6b1dece87329556d" kindref="member">clusterizer.nettoyer</ref>(pd.read_json(</highlight><highlight class="stringliteral">&quot;../../data/base_sirene_shortened.json&quot;</highlight><highlight class="normal">),<sp/>reduce=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>threshold=2)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacetest_1a36f4a59eba5f56c9dd8479d873878da7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a36f4a59eba5f56c9dd8479d873878da7" kindref="member">test_calculer_poids_cluster</ref>():</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1aba2719bff914168ef7fd424000278568" kindref="member">clusterizer_utils.calculer_poids_cluster</ref>(df_test,<sp/></highlight><highlight class="stringliteral">&quot;apet700&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>result<sp/>==<sp/>5<sp/><sp/></highlight><highlight class="comment">#<sp/>le<sp/>premier<sp/>commence<sp/>par<sp/>68<sp/>-&gt;<sp/>1<sp/>et<sp/>le<sp/>deuxi√®me<sp/>par<sp/>49<sp/>-&gt;<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacetest_1a0455051bccb2026500f1a9bbfa660cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a0455051bccb2026500f1a9bbfa660cd6" kindref="member">test_ajouter_point</ref>():</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespace_n_a_f__utils_1ac6050e8ebf6e60910b584c04cd0d2f61" kindref="member">NAF_utils.ajouter_point</ref>(</highlight><highlight class="stringliteral">&quot;6820A&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;68.20A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacetest_1af707891f54e600394c9bd96c5fa9a737" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1af707891f54e600394c9bd96c5fa9a737" kindref="member">test_retirer_point</ref>():</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespace_n_a_f__utils_1abcce9e92c40f0b72db9cd948d5807ddd" kindref="member">NAF_utils.retirer_point</ref>(</highlight><highlight class="stringliteral">&quot;68.20A&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;6820A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespacetest_1ac0e688047e06664349794dcc3bec04cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1ac0e688047e06664349794dcc3bec04cb" kindref="member">test_get_description</ref>():</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespace_n_a_f__utils_1aca0a3e5dc0966df2dcc77dcd33d2c47c" kindref="member">NAF_utils.get_description</ref>(</highlight><highlight class="stringliteral">&quot;011&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Cultures<sp/>non<sp/>permanentes&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespacetest_1a584444535b3787f5c37587c5a538f682" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a584444535b3787f5c37587c5a538f682" kindref="member">test_get_NAFs_by_section</ref>():</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespace_n_a_f__utils_1a1fe02847c67bcc048c209dbc79ac0880" kindref="member">NAF_utils.get_NAFs_by_section</ref>(</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>[</highlight><highlight class="stringliteral">&quot;35&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.11&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.11Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.12&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.12Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.13&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.13Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.14&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.14Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.21&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.21Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.22&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.22Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.23&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.23Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.30&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;35.30Z&quot;</highlight><highlight class="normal"><sp/>]).all</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">df_test_cl,<sp/>df_test_infos<sp/>=<sp/><ref refid="namespaceclusterizer_1a3af79889960331fc4392936526bc8ad6" kindref="member">clusterizer.clusterize</ref>(df_test,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;geometry&quot;</highlight><highlight class="normal">,<sp/>dict=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacetest_1a653d10886c42790c25b47fd820c6b555" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a653d10886c42790c25b47fd820c6b555" kindref="member">test_numero_cluster</ref>():</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(df_test_cl[</highlight><highlight class="stringliteral">&quot;cluster&quot;</highlight><highlight class="normal">]<sp/>==<sp/>[0,<sp/>0]).all<sp/><sp/></highlight><highlight class="comment">#<sp/>les<sp/>deux<sp/>√©tablissements<sp/>sont<sp/>dans<sp/>le<sp/>premier<sp/>(et<sp/>seul)<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacetest_1a3416fbab1723c12ab80ef3c9fca31630" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a3416fbab1723c12ab80ef3c9fca31630" kindref="member">test_get_infos_clusters_taille</ref>():</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceclusterizer__utils_1a1a09a2a4d0cb4435e9341da24dde35df" kindref="member">clusterizer_utils.get_infos_clusters_taille</ref>(df_test_cl)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>[2]).all<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>un<sp/>seul<sp/>cluster,<sp/>contenant<sp/>deux<sp/>√©tablisse√πents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacetest_1a20ecf216174a9c691a02d3698457335c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest_1a20ecf216174a9c691a02d3698457335c" kindref="member">test_centre_de_masse</ref>():</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(df_test_infos[</highlight><highlight class="stringliteral">&quot;centroids&quot;</highlight><highlight class="normal">]<sp/>==<sp/>[{(2.348872+2.297082)/2,<sp/>(48.863495+48.881103)/2}]).all</highlight></codeline>
    </programlisting>
    <location file="tests/tests_src/test.py"/>
  </compounddef>
</doxygen>
